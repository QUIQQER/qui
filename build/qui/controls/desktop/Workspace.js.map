{"version":3,"file":"Workspace.js","sources":["../../classes/DOM.js","../../classes/Controls.js","../../classes/QUI.js","../../QUI.js","../../lib/require-css/normalize.js","../../lib/require-css/css.js","../Control.js","../../classes/Locale.js","../../Locale.js","../loader/Loader!qui/lib/require-css/css","../loader/Loader.js","../contextmenu/Menu.js","../../classes/utils/DragDrop.js","../../utils/Controls.js","../contextmenu/Item.js","../../utils/NoSelect.js","../../utils/Elements.js","../buttons/Button.js","../../lib/moofx.js","../toolbar/Bar.js","../buttons/Seperator.js","panels/Sheet.js","../breadcrumb/Bar.js","Panel.js","Column.js","../../classes/storage/Storage.js","../../utils/Math.js","Workspace.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * The DOM class emulate similar methods\n * like a DOMNode to a normal Object\n *\n * Its easy to use and most classes inherit from {qui/classes/DOM}\n * All objects that inherited from {qui/classes/DOM} can easily extend with Attributes.\n *\n * @author www.quiqqer.com (Henning Leutz)\n *\n * @event onDestroy [this]\n * @event onSetAttribute [key, value]\n *\n * @module classes/DOM\n * @package com.pcsg.qui.js.classes\n */\n\ndefine('qui/classes/DOM', [],function()\n{\n    \"use strict\";\n\n    window.$quistorage = {};\n\n    /**\n     * The DOM class emulate similar methods\n     * like a DOMNode to a normal Object\n     *\n     * @class qui/classes/DOM\n     *\n     * @param {Object} options -\n     *         With options you can set attributes or extend the Object width methods and events\n     */\n    return new Class({\n\n        Implements : [ Options, Events ],\n        Type       : 'qui/classes/DOM',\n\n        options : {},\n        $uid    : null,\n\n        initialize : function(options)\n        {\n            options = options || {};\n\n            if ( options.events )\n            {\n                this.addEvents( options.events );\n                delete options.events;\n            }\n\n            if ( options.methods )\n            {\n                Object.append( this, options.methods );\n                delete options.methods;\n            }\n\n            this.setAttributes( options );\n        },\n\n        /**\n         * If this.TYPE is set, this.Type will be return\n         *\n         * @method qui/classes/DOM#$family\n         * @return {String} Type of the Object\n         * @ignore\n         */\n        $family : function()\n        {\n            if ( typeof this.Type !== 'undefined' ) {\n                return this.Type;\n            }\n\n            return typeOf( this );\n        },\n\n        /**\n         * Get the Unique ID from the Object\n         *\n         * @method qui/classes/DOM#getId\n         * @return {String} Object ID\n         */\n        getId : function()\n        {\n            if ( !this.$uid ) {\n                this.$uid = String.uniqueID();\n            }\n\n            return this.$uid;\n        },\n\n        /**\n         * Get the type from the Object\n         *\n         * @method qui/classes/DOM#getType\n         * @return {String} The type of the object\n         */\n        getType : function()\n        {\n            return typeOf( this );\n        },\n\n        /**\n         * Set an attribute to the Object\n         * You can extend the Object with everything you like\n         * You can extend the Object width more than the default options\n         *\n         * @method qui/classes/DOM#setAttribute\n         *\n         * @param {String} k - Name of the Attribute\n         * @param {Object|String|Integer|Array} v - value\n         *\n         * @return {this} The wanted attribute\n         */\n        setAttribute : function(k, v)\n        {\n            this.fireEvent('setAttribute', [ k, v ]);\n\n            if ( typeof this.options[ k ] !== 'undefined' )\n            {\n                this.options[ k ] = v;\n                return;\n            }\n\n            var oid = Slick.uidOf( this );\n\n            if ( typeof window.$quistorage[ oid ] === 'undefined' ) {\n                window.$quistorage[ oid ] = {};\n            }\n\n            window.$quistorage[ oid ][ k ] = v;\n\n            return this;\n        },\n\n        /**\n         * Destroy the Object and all relationsships to some Object\n         *\n         * @method qui/classes/DOM#destroy\n         */\n        destroy : function()\n        {\n            this.fireEvent( 'destroy', [ this ] );\n\n            // storage clear\n            var oid = Slick.uidOf( this );\n\n            if ( oid in window.$quistorage ) {\n                delete window.$quistorage[ oid ];\n            }\n\n            this.removeEvents();\n        },\n\n        /**\n         * Alias for setAttributes, please use setAttributes()\n         *\n         * @see qui/classes/DOM#setAttributes()\n         * @method qui/classes/DOM#setOptions\n         */\n        setOptions : function(options)\n        {\n            this.setAttributes( options );\n        },\n\n        /**\n         * If you want set more than one attribute\n         *\n         * @method qui/classes/DOM#setAttributes\n         *\n         * @param {Object} attributes - Object with attributes\n         * @return {this} self\n         *\n         * @example Object.setAttributes({\n         *   attr1 : '1',\n         *   attr2 : []\n         * })\n         */\n        setAttributes : function(attributes)\n        {\n            attributes = attributes || {};\n\n            for ( var k in attributes ) {\n                this.setAttribute( k, attributes[k] );\n            }\n\n            return this;\n        },\n\n        /**\n         * Return an attribute of the Object\n         * returns the not the default attributes, too\n         *\n         * @method qui/classes/DOM#setAttribute\n         * @param {Object} attributes - Object width attributes\n         * @return {unknown_type|Bool} attribute\n         */\n        getAttribute : function(k)\n        {\n            if ( k in this.options ) {\n                return this.options[ k ];\n            }\n\n            var oid = Slick.uidOf( this );\n\n            if ( typeof window.$quistorage[ oid ] === 'undefined' ) {\n                return false;\n            }\n\n            if ( typeof window.$quistorage[ oid ][ k ] !== 'undefined' ) {\n                return window.$quistorage[ oid ][ k ];\n            }\n\n            return false;\n        },\n\n        /**\n         * Alias for getAttributes, please use getAttributes()\n         *\n         * @method qui/classes/DOM#getAllAttributes\n         * @see qui/classes/DOM#getAttributes()\n         * @depricated\n         */\n        getAllAttributes : function()\n        {\n            return this.getAttributes();\n        },\n\n        /**\n         * Return the default attributes\n         *\n         * @method qui/classes/DOM#getAttributes\n         * @return {Object} attributes\n         */\n        getAttributes : function()\n        {\n            return this.options;\n        },\n\n        /**\n         * Return the attributes which stored into the QUI Storage\n         *\n         * @return {Object}\n         */\n        getStorageAttributes : function()\n        {\n            var oid = Slick.uidOf( this );\n\n            if ( oid in window.$quistorage  ) {\n                return window.$quistorage[ oid ];\n            }\n\n            return {};\n        },\n\n        /**\n         * Return true if a attribute exist\n         *\n         * @method qui/classes/DOM#existAttribute\n         * @param {String} k - wanted attribute\n         * @return {Bool} true or false\n         */\n        existAttribute : function(k)\n        {\n            if ( typeof this.options[ k ] !== 'undefined' ) {\n                return true;\n            }\n\n            var oid = Slick.uidOf( this );\n\n            if ( window.$quistorage[ oid ] && window.$quistorage[ oid ][ k ] ) {\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Return the binded functions of the event name\n         *\n         * @method qui/classes/DOM#existAttribute\n         * @param {String} eventname - wanted event\n         * @return {Array|false} Event list\n         */\n        getEvents : function(eventname)\n        {\n            if ( typeof this.$events === 'undefined') {\n                return false;\n            }\n\n            if ( typeof this.$events[ eventname ] !== 'undefined') {\n                return this.$events[ eventname ];\n            }\n\n            return false;\n        }\n    });\n});\n\n","/**\n * QUI.Controls\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @module Controls\n * @package com.pcsg.qui.js.controls\n */\n\ndefine('qui/classes/Controls', [\n\n    'require',\n    'qui/classes/DOM'\n\n], function(require, DOM)\n{\n    \"use strict\";\n\n    return new Class({\n\n        Extends : DOM,\n        Type    : 'qui/classes/Controls',\n\n        initialize : function()\n        {\n            this.$controls = {};\n            this.$cids     = {};\n            this.$types    = {};\n        },\n\n        /**\n         * Return all controls with tha name\n         *\n         * @param {String} n - Name of the Control\n         * @return {Array} All Controls with the needle name\n         */\n        get : function(n)\n        {\n            if ( typeof this.$controls[ n ] === 'undefined' ) {\n                return [];\n            }\n\n            return this.$controls[ n ];\n        },\n\n        /**\n         * Get the Controls by its unique id\n         *\n         * @param {String|Integer} id - ID of the wanted Control\n         * @return {qui/controls/Control|false} a QUI control, based on qui/controls/Control or false\n         */\n        getById : function(id)\n        {\n            if ( id in this.$cids ) {\n                return this.$cids[ id ];\n            }\n\n            return false;\n        },\n\n        /**\n         * Return all controls from a type\n         *\n         * @return {Array}\n         */\n        getByType : function(type)\n        {\n            if ( type in this.$types ) {\n                return this.$types[ type ];\n            }\n\n            return [];\n        },\n\n        /**\n         * Load a control by a control type\n         *\n         * @param {String} type\n         * @param {Function} onload\n         *\n         * @example QUI.Controls.loadType('controls/taskbar/Task', function(Modul) { })\n         */\n        loadType : function(type, onload)\n        {\n            if ( !type.match( /qui\\// ) ) {\n                type = 'qui/'+ type;\n            }\n\n            require( [ modul ] , onload );\n        },\n\n        /**\n         * Is the Object a QUI Control?\n         *\n         * @method qui/controls/Control#isControl\n         * @return {Bool} true or false\n         */\n        isControl : function(Obj)\n        {\n            if ( typeof Obj === 'undefined' || !Obj ) {\n                return false;\n            }\n\n            if ( typeof Obj.getType !== 'undefined' ) {\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Add a Control to the list\n         *\n         * @param {qui/controls/Control} Control\n         */\n        add : function(Control)\n        {\n            var n = Control.getAttribute( 'name' ),\n                t = typeOf( Control );\n\n            if ( !n || n === '' ) {\n                n = '#unknown';\n            }\n\n            if ( typeof this.$controls[ n ] === 'undefined' ) {\n                this.$controls[ n ] = [];\n            }\n\n            if ( typeof this.$types[ t ] === 'undefined' ) {\n                this.$types[ t ] = [];\n            }\n\n            this.$controls[ n ].push( Control );\n            this.$types[ t ].push( Control );\n\n            this.$cids[ Control.getId() ] = Control;\n        },\n\n        /**\n         * Destroy a Control\n         *\n         * @param {qui/controls/Control} Control\n         */\n        destroy : function(Control)\n        {\n            var n  = Control.getAttribute( 'name' ),\n                t  = typeOf( Control ),\n                id = Control.getId();\n\n            if ( !n || n === '' ) {\n                n = '#unknown';\n            }\n\n            if ( typeof this.$cids[ id ] !== 'undefined' ) {\n                delete this.$cids[ id ];\n            }\n\n            var i, len;\n            var tmp = [];\n\n            // refresh controls\n            if ( typeof this.$controls[ n ] !== 'undefined' )\n            {\n                for ( i = 0, len = this.$controls[ n ].length; i < len; i++ )\n                {\n                    if ( id !== this.$controls[ n ][ i ].getId() ) {\n                        tmp.push( this.$controls[ n ][ i ] );\n                    }\n                }\n\n                this.$controls[ n ] = tmp;\n\n                if ( !tmp.length ) {\n                    delete this.$controls[ n ];\n                }\n            }\n\n            // refresh types\n            tmp = [];\n\n            if ( typeof this.$types[ t ] !== 'undefined' )\n            {\n                for ( i = 0, len = this.$types[ t ].length; i < len; i++ )\n                {\n                    if ( id !== this.$types[ t ][ i ].getId() ) {\n                        tmp.push( this.$types[ t ][ i ] );\n                    }\n                }\n            }\n\n            this.$types[ t ] = tmp;\n        }\n    });\n});\n","/**\n * The Main Class for the Main QUI Object\n *\n * @author www.namerobot.com (Henning Leutz)\n * @event onError : if there is an error\n */\n\ndefine('qui/classes/QUI', [\n\n    'require',\n    'qui/classes/DOM',\n    'qui/classes/Controls',\n\n], function(require, DOM, Controls)\n{\n    \"use strict\";\n\n    /**\n     * The QUIQQER main object\n     *\n     * @class QUI\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : DOM,\n        Type    : 'qui/classes/QUI',\n\n        initialize : function(options)\n        {\n            /**\n             * defaults\n             */\n            this.setAttributes({\n                'debug'       : false,\n                'fetchErrors' : true\n            });\n\n            this.parent( options );\n\n            // error handling\n            if ( this.getAttribute('fetchErrors') )\n            {\n                require.onError = function(requireType, requireModules)\n                {\n                    self.trigger(\n                        'ERROR :'+ requireType +'\\n'+\n                        'Require :'+ requireModules\n                    );\n                };\n\n                window.onerror = this.trigger.bind( this );\n            }\n\n            this.Controls       = new Controls();\n            this.MessageHandler = null;\n        },\n\n        /**\n         * Creates Namespaces\n         * based on YAHOO code - nice solution!!\n         *\n         * @method qui/classes/QUI#namespace\n         * @example QUI.namespace('my.name.space'); -> QUI.my.name.space\n         * @depricated\n         */\n        namespace : function()\n        {\n            var tlen;\n\n            var a = arguments,\n                o = this,\n                i = 0,\n                j = 0,\n\n                len  = a.length,\n                tok  = null,\n                name = null;\n\n            // iterate on the arguments\n            for ( ; i < len; i = i + 1 )\n            {\n                tok  = a[ i ].split( \".\" );\n                tlen = tok.length;\n\n                // iterate on the object tokens\n                for ( j = 0; j < tlen; j = j + 1 )\n                {\n                    name = tok[j];\n                    o[ name ] = o[ name ] || {};\n                    o = o[ name ];\n                }\n            }\n\n            return o;\n        },\n\n        /**\n         * Fire the Error Event\n         *\n         * @method qui/classes/QUI#triggerError\n         *\n         * @param {QUI.classes.messages.Message|Exception} Exception - Exception Objekt\n         * @param {Object} params    - Weitere Paramater (optional)\n         * @return {this} self\n         */\n        triggerError : function(Exception, params)\n        {\n            this.fireEvent( 'onError', [ Exception, params ] );\n            this.trigger( Exception.getMessage() );\n\n            return this;\n        },\n\n        /**\n         * trigger some messages to the console\n         *\n         * @method qui/classes/QUI#trigger\n         *\n         * @param {String} msg\n         * @param {String} url\n         * @param {Integer} linenumer\n         *\n         * @return {this} self\n         */\n        trigger : function(msg, url, linenumber)\n        {\n            var message = msg +\"\\n\"+\n                          \"File: \"+ url +\"\\n\"+\n                          \"Linenumber: \"+ linenumber;\n\n            console.error( message );\n\n            return this;\n        },\n\n        /**\n         * Return the message handler\n         *\n         * @param {Function} callback\n         */\n        getMessageHandler : function(callback)\n        {\n            if ( this.MessageHandler )\n            {\n                callback( this.MessageHandler );\n                return;\n            }\n\n            var self = this;\n\n            require(['qui/controls/messages/Handler'], function(Handler)\n            {\n                self.MessageHandler = new Handler();\n\n                callback( self.MessageHandler );\n            });\n        },\n\n        /**\n         * Return the message handler\n         *\n         * @param {Function} callback\n         */\n        getControls : function(callback)\n        {\n            if ( this.Controls )\n            {\n                callback( this.Controls );\n                return;\n            }\n\n\n        }\n    });\n});\n\n","\n/**\n * The Main QUI Object\n *\n * create window.QUI\n *\n * @author www.namerobot.com (Henning Leutz)\n */\ndefine('qui/QUI', ['qui/classes/QUI'], function(QUIClass)\n{\n    \"use strict\";\n\n    if ( typeof window.QUI === 'undefined' ) {\n        window.QUI = new QUIClass();\n    }\n\n    document.fireEvent( 'qui-loaded' );\n\n    return window.QUI;\n});\n\n","//>>excludeStart('excludeRequireCss', pragmas.excludeRequireCss)\n/*\n * css.normalize.js\n *\n * CSS Normalization\n *\n * CSS paths are normalized based on an optional basePath and the RequireJS config\n *\n * Usage:\n *   normalize(css, fromBasePath, toBasePath);\n *\n * css: the stylesheet content to normalize\n * fromBasePath: the absolute base path of the css relative to any root (but without ../ backtracking)\n * toBasePath: the absolute new base path of the css relative to the same root\n * \n * Absolute dependencies are left untouched.\n *\n * Urls in the CSS are picked up by regular expressions.\n * These will catch all statements of the form:\n *\n * url(*)\n * url('*')\n * url(\"*\")\n * \n * @import '*'\n * @import \"*\"\n *\n * (and so also @import url(*) variations)\n *\n * For urls needing normalization\n *\n */\n\ndefine('qui/lib/require-css/normalize',[],function() {\n  \n  // regular expression for removing double slashes\n  // eg http://www.example.com//my///url/here -> http://www.example.com/my/url/here\n  var slashes = /([^:])\\/+/g\n  var removeDoubleSlashes = function(uri) {\n    return uri.replace(slashes, '$1/');\n  }\n\n  // given a relative URI, and two absolute base URIs, convert it from one base to another\n  var protocolRegEx = /[^\\:\\/]*:\\/\\/([^\\/])*/;\n  var absUrlRegEx = /^(\\/|data:)/;\n  function convertURIBase(uri, fromBase, toBase) {\n    if (uri.match(absUrlRegEx) || uri.match(protocolRegEx))\n      return uri;\n    uri = removeDoubleSlashes(uri);\n    // if toBase specifies a protocol path, ensure this is the same protocol as fromBase, if not\n    // use absolute path at fromBase\n    var toBaseProtocol = toBase.match(protocolRegEx);\n    var fromBaseProtocol = fromBase.match(protocolRegEx);\n    if (fromBaseProtocol && (!toBaseProtocol || toBaseProtocol[1] != fromBaseProtocol[1] || toBaseProtocol[2] != fromBaseProtocol[2]))\n      return absoluteURI(uri, fromBase);\n    \n    else {\n      return relativeURI(absoluteURI(uri, fromBase), toBase);\n    }\n  };\n  \n  // given a relative URI, calculate the absolute URI\n  function absoluteURI(uri, base) {\n    if (uri.substr(0, 2) == './')\n      uri = uri.substr(2);\n\n    // absolute urls are left in tact\n    if (uri.match(absUrlRegEx) || uri.match(protocolRegEx))\n      return uri;\n    \n    var baseParts = base.split('/');\n    var uriParts = uri.split('/');\n    \n    baseParts.pop();\n    \n    while (curPart = uriParts.shift())\n      if (curPart == '..')\n        baseParts.pop();\n      else\n        baseParts.push(curPart);\n    \n    return baseParts.join('/');\n  };\n\n\n  // given an absolute URI, calculate the relative URI\n  function relativeURI(uri, base) {\n    \n    // reduce base and uri strings to just their difference string\n    var baseParts = base.split('/');\n    baseParts.pop();\n    base = baseParts.join('/') + '/';\n    i = 0;\n    while (base.substr(i, 1) == uri.substr(i, 1))\n      i++;\n    while (base.substr(i, 1) != '/')\n      i--;\n    base = base.substr(i + 1);\n    uri = uri.substr(i + 1);\n\n    // each base folder difference is thus a backtrack\n    baseParts = base.split('/');\n    var uriParts = uri.split('/');\n    out = '';\n    while (baseParts.shift())\n      out += '../';\n    \n    // finally add uri parts\n    while (curPart = uriParts.shift())\n      out += curPart + '/';\n    \n    return out.substr(0, out.length - 1);\n  };\n  \n  var normalizeCSS = function(source, fromBase, toBase) {\n\n    fromBase = removeDoubleSlashes(fromBase);\n    toBase = removeDoubleSlashes(toBase);\n\n    var urlRegEx = /@import\\s*(\"([^\"]*)\"|'([^']*)')|url\\s*\\(\\s*(\\s*\"([^\"]*)\"|'([^']*)'|[^\\)]*\\s*)\\s*\\)/ig;\n    var result, url, source;\n\n    while (result = urlRegEx.exec(source)) {\n      url = result[3] || result[2] || result[5] || result[6] || result[4];\n      var newUrl;\n      newUrl = convertURIBase(url, fromBase, toBase);\n      var quoteLen = result[5] || result[6] ? 1 : 0;\n      source = source.substr(0, urlRegEx.lastIndex - url.length - quoteLen - 1) + newUrl + source.substr(urlRegEx.lastIndex - quoteLen - 1);\n      urlRegEx.lastIndex = urlRegEx.lastIndex + (newUrl.length - url.length);\n    }\n    \n    return source;\n  };\n  \n  normalizeCSS.convertURIBase = convertURIBase;\n  normalizeCSS.absoluteURI = absoluteURI;\n  normalizeCSS.relativeURI = relativeURI;\n  \n  return normalizeCSS;\n});\n//>>excludeEnd('excludeRequireCss')\n;\n","/*\n * Require-CSS RequireJS css! loader plugin\n * 0.1.2\n * Guy Bedford 2013\n * MIT\n */\n\n/*\n *\n * Usage:\n *  require(['css!./mycssFile']);\n *\n * Tested and working in (up to latest versions as of March 2013):\n * Android\n * iOS 6\n * IE 6 - 10\n * Chome 3 - 26\n * Firefox 3.5 - 19\n * Opera 10 - 12\n * \n * browserling.com used for virtual testing environment\n *\n * Credit to B Cavalier & J Hann for the IE 6 - 9 method,\n * refined with help from Martin Cermak\n * \n * Sources that helped along the way:\n * - https://developer.mozilla.org/en-US/docs/Browser_detection_using_the_user_agent\n * - http://www.phpied.com/when-is-a-stylesheet-really-loaded/\n * - https://github.com/cujojs/curl/blob/master/src/curl/plugin/css.js\n *\n */\n\ndefine('qui/lib/require-css/css',[],function() {\n//>>excludeStart('excludeRequireCss', pragmas.excludeRequireCss)\n  if (typeof window == 'undefined')\n    return { load: function(n, r, load){ load() } };\n\n  var head = document.getElementsByTagName('head')[0];\n\n  var engine = window.navigator.userAgent.match(/Trident\\/([^ ;]*)|AppleWebKit\\/([^ ;]*)|Opera\\/([^ ;]*)|rv\\:([^ ;]*)(.*?)Gecko\\/([^ ;]*)|MSIE\\s([^ ;]*)/) || 0;\n\n  // use <style> @import load method (IE < 9, Firefox < 18)\n  var useImportLoad = false;\n  \n  // set to false for explicit <link> load checking when onload doesn't work perfectly (webkit)\n  var useOnload = true;\n\n  // trident / msie\n  if (engine[1] || engine[7])\n    useImportLoad = parseInt(engine[1]) < 6 || parseInt(engine[7]) <= 9;\n  // webkit\n  else if (engine[2])\n    useOnload = false;\n  // gecko\n  else if (engine[4])\n    useImportLoad = parseInt(engine[4]) < 18;\n  \n//>>excludeEnd('excludeRequireCss')\n  //main api object\n  var cssAPI = {};\n\n//>>excludeStart('excludeRequireCss', pragmas.excludeRequireCss)\n  cssAPI.pluginBuilder = './css-builder';\n\n  // <style> @import load method\n  var curStyle, curSheet;\n  var createStyle = function () {\n    curStyle = document.createElement('style');\n    head.appendChild(curStyle);\n    curSheet = curStyle.styleSheet || curStyle.sheet;\n  }\n  var ieCnt = 0;\n  var ieLoads = [];\n  var ieCurCallback;\n  \n  var createIeLoad = function(url) {\n    ieCnt++;\n    if (ieCnt == 32) {\n      createStyle();\n      ieCnt = 0;\n    }\n    curSheet.addImport(url);\n    curStyle.onload = processIeLoad;\n  }\n  var processIeLoad = function() {\n    ieCurCallback();\n \n    var nextLoad = ieLoads.shift();\n \n    if (!nextLoad) {\n      ieCurCallback = null;\n      return;\n    }\n \n    ieCurCallback = nextLoad[1];\n    createIeLoad(nextLoad[0]);\n  }\n  var importLoad = function(url, callback) {\n    if (!curSheet || !curSheet.addImport)\n      createStyle();\n\n    if (curSheet && curSheet.addImport) {\n      // old IE\n      if (ieCurCallback) {\n        ieLoads.push([url, callback]);\n      }\n      else {\n        createIeLoad(url);\n        ieCurCallback = callback;\n      }\n    }\n    else {\n      // old Firefox\n      curStyle.textContent = '@import \"' + url + '\";';\n\n      var loadInterval = setInterval(function() {\n        try {\n          curStyle.sheet.cssRules;\n          clearInterval(loadInterval);\n          callback();\n        } catch(e) {}\n      }, 10);\n    }\n  }\n\n  // <link> load method\n  var linkLoad = function(url, callback) {\n    var link = document.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    if (useOnload)\n      link.onload = function() {\n        link.onload = function() {};\n        // for style dimensions queries, a short delay can still be necessary\n        setTimeout(callback, 7);\n      }\n    else\n      var loadInterval = setInterval(function() {\n        for (var i = 0; i < document.styleSheets.length; i++) {\n          var sheet = document.styleSheets[i];\n          if (sheet.href == link.href) {\n            clearInterval(loadInterval);\n            return callback();\n          }\n        }\n      }, 10);\n    link.href = url;\n    head.appendChild(link);\n  }\n\n//>>excludeEnd('excludeRequireCss')\n  cssAPI.normalize = function(name, normalize) {\n    if (name.substr(name.length - 4, 4) == '.css')\n      name = name.substr(0, name.length - 4);\n\n    return normalize(name);\n  }\n\n//>>excludeStart('excludeRequireCss', pragmas.excludeRequireCss)\n  cssAPI.load = function(cssId, req, load, config) {\n\n    (useImportLoad ? importLoad : linkLoad)(req.toUrl(cssId + '.css'), load);\n\n  }\n\n//>>excludeEnd('excludeRequireCss')\n  return cssAPI;\n});\n\n","\n/**\n * Control standard parent class\n * All controls should inherit {qui/controls/Control}\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @module qui/controls/Control\n *\n * @event onInject [ this ]\n * @event onHighlight [ this ]\n * @event onNormalize [ this ]\n * @event onResize [ this ]\n */\n\ndefine('qui/controls/Control', [\n\n    'qui/QUI',\n    'qui/classes/DOM',\n\n    'css!qui/controls/Control.css'\n\n], function(QUI, DOM)\n{\n    \"use strict\";\n\n    /**\n     * @class qui/controls/Control\n     *\n     * @fires onDrawBegin - if inject() is used, the Event will be triggered\n     * @fires onDrawEnd   - if inject() is used, the Event will be triggered\n     *\n     * @param {Object} options\n     *\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : DOM,\n        Type    : 'qui/controls/Control',\n\n        $Parent : null,\n\n        options : {\n            name : ''\n        },\n\n        /**\n         * Init function for inherited classes\n         * If a Class inherit from qui/controls/Control, please use this.parent()\n         * so the control are registered in QUI.Controls\n         * and you can get the control with QUI.Controls.get()\n         *\n         * @method qui/controls/Control#init\n         * @param {Object} option - option params\n         */\n        initialize : function(options)\n        {\n            this.parent( options );\n\n            QUI.Controls.add( this );\n        },\n\n        /**\n         * Create Method, can be overwritten for an own DOM creation\n         *\n         * @method qui/controls/Control#create\n         * @return {DOMNode}\n         */\n        create : function()\n        {\n            if ( this.$Elm ) {\n                return this.$Elm;\n            }\n\n            this.$Elm = new Element( 'div.QUI-control' );\n\n            return this.$Elm;\n        },\n\n        /**\n         * Inject the DOMNode of the Control to a Parent\n         *\n         * @method qui/controls/Control#inject\n         * @param {DOMNode|qui/controls/Control}\n         * @param {pos} [optional]\n         * @return {this}\n         */\n        inject : function(Parent, pos)\n        {\n            this.fireEvent( 'drawBegin', [ this ] );\n\n            if ( typeof this.$Elm === 'undefined' || !this.$Elm ) {\n                this.$Elm = this.create();\n            }\n\n            if ( typeof QUI !== 'undefined' &&\n                 typeof QUI.Controls !== 'undefined' &&\n                 QUI.Controls.isControl( Parent ) )\n            {\n                // QUI Control insertion\n                Parent.appendChild( this );\n            } else\n            {\n                // DOMNode insertion\n                this.$Elm.inject( Parent, pos );\n            }\n\n            this.fireEvent( 'inject', [ this ] );\n\n            return this;\n        },\n\n        /**\n         * Save the control\n         * Placeholder method for sub controls\n         *\n         * The save method returns all needed attributes for saving the control to the workspace\n         * You can overwrite the method in sub classes to save specific attributes\n         *\n         * @return {Object}\n         */\n        serialize : function()\n        {\n            return {\n                attributes : this.getAttributes(),\n                type       : this.getType()\n            };\n        },\n\n        /**\n         * import the saved attributes and the data\n         * You can overwrite the method in sub classes to import specific attributes\n         *\n         * @param {Object} data\n         */\n        unserialize : function(data)\n        {\n            if ( data.attributes ) {\n                this.setAttributes( data.attributes );\n            }\n        },\n\n        /**\n         * Destroys the DOMNode of the Control\n         *\n         * @method qui/controls/Control#destroy\n         * @fires onDestroy\n         */\n        destroy : function()\n        {\n            this.fireEvent( 'destroy', [ this ] );\n\n            if ( typeof this.$Elm !== 'undefined' && this.$Elm ) {\n                this.$Elm.destroy();\n            }\n\n            this.$Elm = null;\n\n            // destroy it from the controls\n            QUI.Controls.destroy( this );\n        },\n\n        /**\n         * Get the DOMNode from the Button\n         *\n         * @method qui/controls/Control#getElm\n         * @return {DOMNode}\n         */\n        getElm : function()\n        {\n            if ( typeof this.$Elm === 'undefined' || !this.$Elm ) {\n                this.create();\n            }\n\n            return this.$Elm;\n        },\n\n        /**\n         * If the control have a QUI_Object Parent\n         *\n         * @method qui/controls/Control#getParent\n         * @return {qui/controls/Control|false}\n         */\n        getParent : function()\n        {\n            return this.$Parent || false;\n        },\n\n        /**\n         * Set the Parent to the Button\n         *\n         * @method qui/controls/Control#setParent\n         *\n         * @param {qui/controls/Control} Parent\n         * @return {this}\n         */\n        setParent : function(Parent)\n        {\n            this.$Parent = Parent;\n            return this;\n        },\n\n        /**\n         * Return a path string from the parent names\n         *\n         * @return {String}\n         */\n        getPath : function()\n        {\n            var path   = '/'+ this.getAttribute( 'name' ),\n                Parent = this.getParent();\n\n            if ( !Parent ) {\n                return path;\n            }\n\n            return Parent.getPath() + path;\n        },\n\n        /**\n         * Hide the control\n         *\n         * @method qui/controls/Control#hide\n         * @return {this}\n         */\n        hide : function()\n        {\n            if ( this.$Elm ) {\n                this.$Elm.setStyle( 'display', 'none' );\n            }\n\n            return this;\n        },\n\n        /**\n         * Display / Show the control\n         *\n         * @method qui/controls/Control#show\n         * @return {this}\n         */\n        show : function()\n        {\n            if ( this.$Elm ) {\n                this.$Elm.setStyle( 'display', null );\n            }\n\n            return this;\n        },\n\n        /**\n         * Highlight the control\n         *\n         * @method qui/controls/Control#highlight\n         * @return {this}\n         */\n        highlight : function()\n        {\n            this.fireEvent( 'highlight', [ this ] );\n            return this;\n        },\n\n        /**\n         * Dehighlight / Normalize the control\n         *\n         * @method qui/controls/Control#normalize\n         * @return {this}\n         */\n        normalize : function()\n        {\n            this.fireEvent( 'normalize', [ this ] );\n            return this;\n        },\n\n        /**\n         * Focus the DOMNode Element\n         *\n         * @return {this}\n         */\n        focus : function()\n        {\n            if ( this.$Elm ) {\n                this.$Elm.focus();\n            }\n\n            return this;\n        },\n\n        /**\n         * Resize the control\n         */\n        resize : function()\n        {\n            this.fireEvent( 'resize', [ this ] );\n        }\n    });\n});\n\n","/**\n * Locale translation class\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @module qui/classes/Locale\n * @package com.pcsg.qui.js.classes\n *\n * @event onError [ {String}, {this} ]\n */\n\ndefine('qui/classes/Locale', [\n\n    'qui/classes/DOM'\n\n], function(DOM)\n{\n    \"use strict\";\n\n    /**\n     * @class qui/classes/Locale\n     */\n    return new Class({\n\n        Extends : DOM,\n        Type    : 'qui/classes/Locale',\n\n        /**\n         * Current lang, use getCurrent() to get the lang\n         */\n        current : 'en',\n\n        /**\n         * Available langs\n         */\n        langs : {},\n\n        /**\n         * No translation flag, makes no translation\n         * if true, get() returns the translation group\n         * usefull to show all translation groups\n         */\n        no_translation : false,\n\n        /**\n         * init\n         *\n         * @param options - dom options\n         */\n        initialize : function(options)\n        {\n            this.parent( options );\n        },\n\n        /**\n         * Set the current lang\n         *\n         * @param {String} lang\n         */\n        setCurrent : function(lang)\n        {\n            this.current = lang;\n        },\n\n        /**\n         * Return the current Lang\n         * @return {String}\n         */\n        getCurrent : function()\n        {\n            return this.current;\n        },\n\n        /**\n         * Set a translation for a translation group\n         *\n         * @param {String} lang - language, which is translated\n         * @param {String} group - group, which is translated\n         * @param {String|Object} values - variable(s) which is translated\n         * @param {String} value - the translation value\n         *\n         * @example Locale.set(\"en\", \"my/group\", \"my.translation.variable\", \"Some text is translated\")\n         * @example Locale.set(\"de\", \"my/group\", \"my.translation.variable\", \"Ein Text der übersetzt wird\")\n         */\n        set : function(lang, group, values, value)\n        {\n            if ( !this.langs[ lang ] ) {\n                this.langs[ lang ] = {};\n            }\n\n            if ( !this.langs[ lang ][ group ] ) {\n                this.langs[ lang ][ group ] = {};\n            }\n\n            if ( typeof value !== 'undefined' )\n            {\n                this.langs[ lang ][ set ][ values ] = value;\n                return this;\n            }\n\n            var _key = this.langs[ lang ][ group ];\n\n            for ( var k in values ) {\n                _key[ k ] = values[ k ];\n            }\n\n            this.langs[ lang ][ group ] = _key;\n        },\n\n        /**\n         * Retrurn the translation of a translation group\n         *\n         * @param {String} group - Group of the translation\n         * @param {String} value - Translation value / name\n         * @param {Object} repl  - Assoziative Array of replacements\n         * @return {String}\n         *\n         * @example Locale.get('my/group', 'my.translation.variable')\n         * @example Locale.get('my/group', 'my.translation.variable', {\n         *      placeholder : 'my replace'\n         * })\n         */\n        get : function(group, value, repl)\n        {\n            if ( typeof repl === 'undefined' ) {\n                return this.$get( group, value );\n            }\n\n            var result = this.$get( group, value );\n\n            for ( group in repl ) {\n                result = result.replace( '['+ group +']', repl[ group ] );\n            }\n\n            return result;\n        },\n\n        /**\n         * Helper for get translation\n         *\n         * @param {String} key   - Group / Key of the translation\n         * @param {String} value - Translation value / name\n         * @param {Object} repl  - Assoziative Array of replacements\n         * @return {String}\n         */\n        $get : function(key, value)\n        {\n            if ( this.no_translation ) {\n                return '['+ key +'] '+ value;\n            }\n\n            if ( !this.langs[ this.current ] ||\n                 !this.langs[ this.current ][ key ] )\n            {\n                this.fireEvent('error', [\n                    'No translation found for ['+ key +'] '+ value,\n                    this\n                ]);\n\n                return '['+ key +'] '+ value;\n            }\n\n            if ( typeof value == 'undefined' ) {\n                return this.langs[ this.current ][ key ];\n            }\n\n            if ( this.langs[ this.current ][ key ][ value ] ) {\n                return this.langs[ this.current ][ key ][ value ];\n            }\n\n            return '['+ key +'] '+ value;\n        }\n    });\n});\n\n","\n/**\n * The QUI Locale Object\n *\n * @author www.namerobot.com (Henning Leutz)\n */\ndefine('qui/Locale', ['qui/classes/Locale'], function(QUILocale)\n{\n    \"use strict\";\n\n    if ( typeof window.QUILocale === 'undefined' ) {\n        window.QUILocale = new QUILocale();\n    }\n\n    return window.QUILocale;\n});\n\n","\ndefine('qui/lib/require-css/css!qui/controls/loader/Loader',[],function(){});\n","\n/**\n * A loader control\n * Creates a div with a loader animation\n *\n * @author www.namerobot.com (Henning Leutz)\n */\n\ndefine('qui/controls/loader/Loader', [\n\n    'qui/controls/Control',\n    'qui/Locale',\n    'css!qui/controls/loader/Loader.css'\n\n], function(Control, Locale)\n{\n    \"use strict\";\n\n    /**\n     * @class controls/loader/Loader\n     *\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : Control,\n        Type    : 'qui/controls/loader/Loader',\n\n        options : {\n            cssclass  : '',    // extra CSS class\n            closetime : 50000, // seconds if the closing window showed\n            styles    : false  // extra CSS styles\n        },\n\n        initialize : function(options)\n        {\n            this.parent( options );\n            this.$delay = null;\n\n            var self = this;\n\n            this.addEvent('onDestroy', function()\n            {\n                if ( this.$Elm.getParent() ) {\n                    this.$Elm.getParent().removeClass( 'qui-loader-parent' );\n                }\n            });\n        },\n\n        /**\n         * Create the DOMNode Element of the loader\n         *\n         * @return {DOMNode}\n         */\n        create : function()\n        {\n            this.$Elm = new Element('div', {\n                'class' : 'qui-loader',\n                html : '<div class=\"qui-loader-message\"></div>'+\n                       '<div class=\"qui-loader-bar\">' +\n                           '<div class=\"qui-loader-dot qui-loader-bar1\"></div>' +\n                           '<div class=\"qui-loader-dot qui-loader-bar2\"></div>' +\n                           '<div class=\"qui-loader-dot qui-loader-bar3\"></div>' +\n                           '<div class=\"qui-loader-dot qui-loader-bar4\"></div>' +\n                           '<div class=\"qui-loader-dot qui-loader-bar5\"></div>' +\n                           '<div class=\"qui-loader-dot qui-loader-bar6\"></div>' +\n                           '<div class=\"qui-loader-dot qui-loader-bar7\"></div>' +\n                           '<div class=\"qui-loader-dot qui-loader-bar8\"></div>' +\n                       '</div>',\n                styles : {\n                    display : 'none',\n                    opacity : 0.8\n                }\n            });\n\n            if ( this.getAttribute('cssclass') ) {\n                this.$Elm.addClass( this.getAttribute('cssclass') );\n            }\n\n            if ( this.getAttribute( 'styles' ) ) {\n                this.$Elm.setStyles( this.getAttribute( 'styles' ) );\n            }\n\n            return this.$Elm;\n        },\n\n        /**\n         * Shows the loader\n         */\n        show : function(str)\n        {\n            if ( !this.$Elm ) {\n                return;\n            }\n\n            if ( !this.$Elm.getParent() ) {\n                return;\n            }\n\n            var Message = this.$Elm.getElement( '.qui-loader-message' ),\n                Bar     = this.$Elm.getElement( '.qui-loader-bar' ),\n                size    = this.$Elm.getParent().getSize();\n\n            Message.set( 'html', '' );\n\n            Bar.setStyles({\n                top  : (size.y - 50) / 2,\n                left : (size.x - 240) / 2\n            });\n\n            if ( typeof str !== 'undefined' )\n            {\n                Message.set({\n                    html   : str,\n                    styles : {\n                        top : (size.y + 20) / 2\n                    }\n                });\n\n            }\n\n            this.$Elm.setStyle( 'display', '' );\n\n            if ( !this.$Elm.getParent().hasClass( 'qui-window-popup' ) ) {\n                this.$Elm.getParent().addClass( 'qui-loader-parent' );\n            }\n\n            if ( !this.getAttribute( 'closetime' ) ) {\n                return;\n            }\n\n            // sicherheitsabfrage nach 10 sekunden\n            if ( this.$delay ) {\n                clearTimeout( this.$delay );\n            }\n\n            this.$delay = (function()\n            {\n                this.showCloseButton();\n            }).delay( this.options.closetime , this );\n        },\n\n        /**\n         * Hide the loader\n         */\n        hide : function()\n        {\n            if ( this.$delay ) {\n                clearTimeout( this.$delay );\n            }\n\n            if ( !this.$Elm ) {\n                return;\n            }\n\n            this.$Elm.setStyle( 'display', 'none' );\n        },\n\n        /**\n         * Shows the closing text in the loader\n         * if the timeout is triggered\n         */\n        showCloseButton : function()\n        {\n            if ( !this.$Elm ) {\n                return;\n            }\n\n            this.$Elm.set({\n                html   : '',\n                styles : {\n                    cursor : 'pointer'\n                }\n            });\n\n            this.$Elm.setStyle( 'opacity', 0.9 );\n\n            var self = this;\n\n            new Element('div', {\n                text   : Locale.get( 'quiqqer/controls', 'loader.close' ),\n                styles : {\n                    'font-weight' : 'bold',\n                    'text-align'  : 'center',\n                    'margin-top'  : (this.$Elm.getSize().y / 2) - 100\n                },\n                events :\n                {\n                    click : function() {\n                        self.hide();\n                    }\n                }\n            }).inject( this.$Elm );\n        }\n    });\n});\n\n","/**\n * A Context Menu\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @requires controls/Control\n *\n * @module controls/contextmenu/Menu\n * @package com.pcsg.qui.js.controls.contextmenu\n */\n\ndefine('qui/controls/contextmenu/Menu', [\n\n    'qui/controls/Control',\n\n    'css!qui/controls/contextmenu/Menu.css'\n\n], function(Control)\n{\n    \"use strict\";\n\n    /**\n     * @class qui/controls/contextmenu/Menu\n     *\n     * @fires onShow [this]\n     * @fires onHide [this]\n     * @fires onBlur [this]\n     * @fires onFocus [this]\n     *\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : Control,\n        Type    : 'qui/controls/contextmenu/Menu',\n\n        Binds : [\n            '$keyup'\n        ],\n\n        options : {\n            styles : null,   // mootools css styles\n            width  : 200,    // menü width\n            title  : false,  // title of the menu (optional) : String\n            shadow : true,   // menü with shadow (true) or not (false)\n            corner : false,  // corner for the menü\n\n            dragable : false\n        },\n\n        initialize : function(options)\n        {\n            this.parent( options );\n\n            this.$items  = [];\n            this.$Title  = null;\n            this.$Active = null;\n        },\n\n        /**\n         * Create the DOM Element\n         *\n         * @method qui/controls/contextmenu/Menu#create\n         * @return {DOMNode} main DOM-Node Element\n         */\n        create : function()\n        {\n            this.$Elm = new Element('div.qui-contextmenu', {\n                html     : '<div class=\"qui-contextmenu-container\"></div>',\n                tabindex : -1,\n                styles   : {\n                    display : 'none',\n                    outline : 'none',\n                    '-moz-outline': 'none'\n                },\n                events :\n                {\n                    blur : function() {\n                        this.fireEvent( 'blur', [ this ] );\n                    }.bind( this ),\n\n                    keyup : this.$keyup\n                },\n                'data-quiid' : this.getId()\n            });\n\n            this.$Container = this.$Elm.getElement( '.qui-contextmenu-container' );\n\n            if ( this.getAttribute( 'width' ) ) {\n                this.$Elm.setStyle( 'width', this.getAttribute( 'width' ) );\n            }\n\n            if ( this.getAttribute( 'styles' ) ) {\n                this.$Elm.setStyles( this.getAttribute( 'styles' ) );\n            }\n\n            if ( this.getAttribute( 'title' ) ) {\n                this.setTitle( this.getAttribute( 'title' ) );\n            }\n\n            if ( this.getAttribute( 'shadow' ) ) {\n                this.$Container.addClass( 'qui-contextmenu-shadow' );\n            }\n\n            for ( var i = 0, len = this.$items.length; i < len; i++ ) {\n                this.$items[ i ].inject( this.$Container );\n            }\n\n            return this.$Elm;\n        },\n\n        /**\n         * Shows the Menu, clears the display style\n         *\n         * @method qui/controls/contextmenu/Menu#show\n         * @return {this} self\n         */\n        show : function()\n        {\n            if ( !this.$Elm ) {\n                return this;\n            }\n\n            var Parent = this.$Elm.getParent(),\n                Elm    = this.$Elm;\n\n            if ( this.getAttribute( 'corner' ) )\n            {\n                Elm.removeClass( 'qui-context-corner-top' );\n                Elm.removeClass( 'qui-context-corner-bottom' );\n                Elm.removeClass( 'qui-context-corner-left' );\n                Elm.removeClass( 'qui-context-corner-left' );\n            }\n\n            switch ( this.getAttribute( 'corner' ) )\n            {\n                case 'top':\n                    Elm.addClass( 'qui-context-corner-top' );\n                break;\n\n                case 'bottom':\n                    Elm.addClass( 'qui-context-corner-bottom' );\n                break;\n\n                case 'left':\n                    Elm.addClass( 'qui-context-corner-left' );\n                break;\n\n                case 'right':\n                    Elm.addClass( 'qui-context-corner-right' );\n                break;\n            }\n\n            Elm.setStyles({\n                display : ''\n            });\n\n            var elm_size = Elm.getSize();\n\n            this.$Container.setStyles({\n                height : elm_size.y\n            });\n\n\n            // if parent is the body element\n            // context menu don't get out of the body\n            this.setAttribute( 'menuPosLeft', false );\n\n            if ( Parent.nodeName === 'BODY' )\n            {\n                var elm_pos   = Elm.getPosition(),\n                    body_size = Parent.getSize();\n\n                if ( elm_pos.x + elm_size.x + 50 > body_size.x ) {\n                    this.$Elm.setStyle( 'left', body_size.x - elm_size.x - 50 );\n                }\n\n                if ( elm_pos.y + elm_size.y + 50 > body_size.y ) {\n                    this.$Elm.setStyle( 'top', body_size.y - elm_size.y - 50 );\n                }\n            }\n\n            if ( this.$Active ) {\n                this.$Active.setActive();\n            }\n\n            this.fireEvent( 'show', [ this ] );\n\n            return this;\n        },\n\n        /**\n         * Hide the Menu, set the display style to none\n         *\n         * @method qui/controls/contextmenu/Menu#hide\n         * @return {this} self\n         */\n        hide : function()\n        {\n            this.getElm().setStyles({\n                display : 'none'\n            });\n\n            this.fireEvent( 'hide', [ this ] );\n\n            return this;\n        },\n\n        /**\n         * Set the focus to the Menu, the blur event would be triggerd\n         *\n         * @method qui/controls/contextmenu/Menu#focus\n         * @return {this} self\n         */\n        focus : function()\n        {\n            this.getElm().focus();\n            this.fireEvent( 'focus', [ this ] );\n\n            return this;\n        },\n\n        /**\n         * Set the Position of the Menu\n         *\n         * if parent is the body element\n         * context menu don't get out of the body\n         *\n         * @method qui/controls/contextmenu/Menu#setPosition\n         * @param {Integer} x - from the top (x axis)\n         * @param {Integer}y - from the left (y axis)\n         * @return {this} self\n         */\n        setPosition : function(x, y)\n        {\n            if ( this.$Elm )\n            {\n                this.$Elm.setStyles({\n                    left : x,\n                    top  : y\n                });\n            }\n\n            return this;\n        },\n\n        /**\n         * Set and create the menu title\n         *\n         * @method qui/controls/contextmenu/Menu#setTitle\n         * @param {String} text - Title text\n         * @return {this} self\n         */\n        setTitle : function(text)\n        {\n            if ( this.$Container && !this.$Title )\n            {\n                this.$Title = new Element('div.qui-contextmenu-title');\n                this.$Title.inject( this.$Container, 'top' );\n            }\n\n            if ( this.$Title ) {\n                this.$Title.set( 'html', text );\n            }\n\n            this.setAttribute( 'title', text );\n\n            return this;\n        },\n\n        /**\n         * Get an Child Element\n         *\n         * @method qui/controls/contextmenu/Menu#getChildren\n         * @param {String} name : [Name of the Children, optional, if no name given, returns all Children]\n         * @return {Array|false|qui/controls/contextmenu/Item} children\n         */\n        getChildren : function(name)\n        {\n            if ( typeof name !== 'undefined' )\n            {\n                var i, len;\n                var items = this.$items;\n\n                for ( i = 0, len = items.length; i < len; i++ )\n                {\n                    if ( items[ i ].getAttribute( 'name' ) == name ) {\n                        return items[ i ];\n                    }\n                }\n\n                return false;\n            }\n\n            return this.$items;\n        },\n\n        /**\n         * Return the first child Element\n         *\n         * @method qui/controls/contextmenu/Menu#firstChild\n         * @return {false|qui/controls/contextmenu/Item} Child\n         */\n        firstChild : function()\n        {\n            if ( this.$items[ 0 ] ) {\n                return this.$items[ 0 ];\n            }\n\n            return false;\n        },\n\n        /**\n         * Return the number of children\n         *\n         * @return {Integer} count of children\n         */\n        count : function()\n        {\n            return this.$items.length;\n        },\n\n        /**\n         * Add the Child to the Menü\n         *\n         * @method qui/controls/contextmenu/Menu#appendChild\n         * @param {qui/controls/contextmenu/Item} Child\n         * @return {this} self\n         */\n        appendChild : function(Child)\n        {\n            if ( !Child || typeof Child === 'undefined' ) {\n                return this;\n            }\n\n            this.$items.push( Child );\n\n            Child.setParent( this );\n\n            if ( this.getAttribute( 'dragable' ) ) {\n                Child.setAttribute( 'dragable', true );\n            }\n\n            // children events\n            /*\n            Child.addEvent( 'onClick', function(Item, event)\n            {\n                this.hide();\n\n                document.body.focus();\n\n                if ( typeof event !== 'undefined' ) {\n                    event.stop();\n                }\n            }.bind( this ) );\n\n            Child.addEvent( 'onActive', function(Item)\n            {\n                if ( this.$Active == Item ) {\n                    return;\n                }\n\n                if ( this.$Active ) {\n                    this.$Active.setNormal();\n                }\n\n                this.$Active = Item;\n            }.bind( this ));\n            */\n\n            if ( this.$Container ) {\n                Child.inject( this.$Container );\n            }\n\n            return this;\n        },\n\n        /**\n         * Destroy all children items\n         *\n         * @method qui/controls/contextmenu/Menu#clearChildren\n         * @return {this} self\n         */\n        clearChildren : function()\n        {\n            for ( var i = 0, len = this.$items.length; i < len; i++ )\n            {\n                if ( this.$items[ i ] ) {\n                    this.$items[ i ].destroy();\n                }\n            }\n\n            this.$items = [];\n\n            return this;\n        },\n\n        /**\n         * Return the active item\n         *\n         * @method qui/controls/contextmenu/Menu#getActive\n         * @return {qui/controls/contextmenu/Item|false} Active Child\n         */\n        getActive : function()\n        {\n            return this.$Active ? this.$Active : false;\n        },\n\n        /**\n         * Return the next children / item of the item\n         *\n         * @method qui/controls/contextmenu/Menu#getNext\n         * @param {qui/controls/contextmenu/Item} Item\n         * @return {qui/controls/contextmenu/Item|false}\n         */\n        getNext : function(Item)\n        {\n            for ( var i = 0, len = this.$items.length; i < len; i++ )\n            {\n                if ( this.$items[ i ] != Item ) {\n                    continue;\n                }\n\n                if ( typeof this.$items[ i + 1 ] !== 'undefined' ) {\n                    return this.$items[ i + 1 ];\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Return the previous children / item of the item\n         *\n         * @method qui/controls/contextmenu/Menu#getPrevious\n         * @param {qui/controls/contextmenu/Item} Item\n         * @return {qui/controls/contextmenu/Item|false}\n         */\n        getPrevious : function(Item)\n        {\n            var i = this.$items.length - 1;\n\n            for ( ; i >= 0; i-- )\n            {\n                if ( i === 0 ) {\n                    return false;\n                }\n\n                if ( this.$items[ i ] == Item ) {\n                    return this.$items[ i - 1 ];\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Deselect all children\n         *\n         * @method qui/controls/contextmenu/Menu#deselectItems\n         * @return {this} self\n         */\n        deselectItems : function()\n        {\n            if ( this.$Active ) {\n                this.$Active = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * Keyup event if the menu has the focus\n         * so you can select with keyboard the contextmenu items\n         *\n         * @method qui/controls/contextmenu/Menu#$keyup\n         */\n        $keyup : function(event)\n        {\n            if ( event.key === 'down' )\n            {\n                this.down();\n                return;\n            }\n\n            if ( event.key === 'up' )\n            {\n                this.up( event );\n                return;\n            }\n\n            if ( event.key === 'enter' )\n            {\n                this.select( event );\n                return;\n            }\n        },\n\n        /**\n         * Simulate a arrow up, select the element up\n         *\n         * @method qui/controls/contextmenu/Menu#up\n         */\n        up : function(event)\n        {\n            if ( !this.$items.length ) {\n                return;\n            }\n\n            var len = this.$items.length;\n\n            // select last element if nothing is active\n            if ( !this.$Active )\n            {\n                this.$items[ len - 1 ].setActive();\n                return;\n            }\n\n            var Prev = this.getPrevious( this.$Active );\n\n            this.$Active.setNormal();\n\n            if ( !Prev )\n            {\n                this.$items[ len - 1 ].setActive();\n                return;\n            }\n\n            Prev.setActive();\n        },\n\n        /**\n         * Simulate a arrow down, select the element down\n         *\n         * @method qui/controls/contextmenu/Menu#down\n         */\n        down : function()\n        {\n            if ( !this.$items.length ) {\n                return;\n            }\n\n            // select first element if nothing is selected\n            if ( !this.$Active )\n            {\n                this.$items[ 0 ].setActive();\n                return;\n            }\n\n            var Next = this.getNext( this.$Active );\n\n            this.$Active.setNormal();\n\n            if ( !Next )\n            {\n                this.$items[ 0 ].setActive();\n                return;\n            }\n\n            Next.setActive();\n        },\n\n        /**\n         * Makes a click on the active element\n         *\n         * @method qui/controls/contextmenu/Menu#select\n         * @param {DOMEvent} event - [optional]\n         */\n        select : function(event)\n        {\n            // Last Element\n            if ( this.$Active )\n            {\n                this.$Active.fireEvent( 'mouseDown', [ this.$Active, event ] );\n                this.$Active.fireEvent( 'click', [ this.$Active, event ] );\n            }\n        }\n    });\n});\n\n","/**\n * DragDrop Helper with movable Element\n * no ie8\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @requires qui/classes/DOM\n *\n * @module qui/classes/utils/DragDrop\n * @package com.pcsg.qui.js.classes.utils\n *\n * @event onStart [ this, Dragable, event ]\n * @event onStop [ this, Dragable ]\n * @event onDrag [ this, Element, Droppable, event ]\n * @event onDrop [ this, Element, Droppable, event ]\n * @event onLeave [ this, Element, Droppable ]\n * @event onEnter [ this, Element, Droppable ]\n * @event onComplete [ this, event ]\n */\n\ndefine('qui/classes/utils/DragDrop', [\n\n    'qui/classes/DOM'\n\n], function(DOM)\n{\n    \"use strict\";\n\n    /**\n     * @class qui/classes/utils/DragDrop\n     *\n     * @param {DOMNode} Element - Which Element is dragable\n     * @param {Object} options  - QDOM params\n     */\n    return new Class({\n\n        Extends : DOM,\n        Type    : 'qui/classes/utils/DragDrop',\n\n        Binds : [\n             '$complete',\n             '$onDrag',\n             '$onDrop',\n             '$onLeave',\n             '$onEnter'\n        ],\n\n        options :\n        {\n            dropables : [ document.body ],\n            styles    : false,\n            cssClass  : false,\n            delay     : 500,     // when trigger the dragdrop, after miliseconds\n\n            limit : {\n                x : false, // [min, max]\n                y : false  // [min, max]\n            }\n        },\n\n        initialize : function(Elm, options)\n        {\n            var self = this;\n\n            this.parent( options );\n\n            this.$Drag    = null;\n            this.$Element = Elm;\n            this.$enable  = true;\n\n\n            Elm.addEvents({\n\n                mousedown : function(event)\n                {\n                    if ( !self.$enable ) {\n                        return;\n                    }\n\n                    self.setAttribute( '_stopdrag', false );\n\n                    self.$timer = self.$start.delay(\n                        self.getAttribute('delay'),\n                        self,\n                        event\n                    );\n\n                    event.stop();\n                },\n\n                mouseup : function(event)\n                {\n                    if ( typeof self.$timer !== 'undefined' ) {\n                        clearTimeout( self.$timer );\n                    }\n\n                    self.$stop( event );\n                }\n            });\n        },\n\n        /**\n         * Return the binded Element\n         *\n         * @method qui/classes/utils/DragDrop#getElm\n         * @return {DOMNode} Main Dom-Node Element\n         */\n        getElm : function()\n        {\n            return this.$Elm;\n        },\n\n        /**\n         * Enable the DragDrop\n         */\n        enable : function()\n        {\n            this.$enable = true;\n        },\n\n        /**\n         * Disable the DragDrop\n         */\n        disable : function()\n        {\n            this.$enable = false;\n        },\n\n        /**\n         * Starts the draging by onmousedown\n         *\n         * @method qui/classes/utils/DragDrop#$start\n         * @param {DOMEvent} event\n         */\n        $start : function(event)\n        {\n            if ( !this.$enable ) {\n                return;\n            }\n\n            if ( event.rightClick ) {\n                return;\n            }\n\n            if ( Browser.ie8 ) {\n                return;\n            }\n\n            if ( this.getAttribute( '_mousedown') ) {\n                return;\n            }\n\n            if ( this.getAttribute( '_stopdrag' ) ) {\n                return;\n            }\n\n            this.setAttribute( '_mousedown', true );\n\n            var i, len;\n\n            var mx = event.page.x,\n                my = event.page.y,\n\n                Elm     = this.$Element,\n                ElmSize = Elm.getSize(),\n                limit   = this.getAttribute('limit'),\n                docsize = document.body.getSize();\n\n            // create the shadow element\n            this.$Drag = new Element('div', {\n                'class' : 'box',\n                styles : {\n                    position   : 'absolute',\n                    top        : my - 20,\n                    left       : mx - 40,\n                    zIndex     : 1000,\n                    MozOutline : 'none',\n                    outline    : 0,\n                    color      : '#fff',\n                    padding    : 10,\n                    cursor     : 'pointer',\n\n                    width      : ElmSize.x,\n                    height     : ElmSize.y,\n                    background : 'rgba(0,0,0, 0.5)'\n                }\n            }).inject( document.body );\n\n            if ( this.getAttribute( 'styles' ) ) {\n                this.$Drag.setStyles( this.getAttribute( 'styles' ) );\n            }\n\n            if ( this.getAttribute( 'cssClass' ) ) {\n                this.$Drag.addClass( this.getAttribute( 'cssClass' ) );\n            }\n\n\n            // set the drag&drop events to the shadow element\n            // this.$Drag.addEvent( 'mouseup', this.$stop.bind( this ) );\n            // document.body.addEvent( 'mouseup', this.$stop.bind( this ) );\n\n            this.$Drag.focus();\n            this.fireEvent( 'start', [ this, this.$Drag, event ] );\n\n            // if no limit exist, set it to the body\n            if ( !limit.x ) {\n                limit.x = [ 0, docsize.x - this.$Drag.getSize().x ];\n            }\n\n            if ( !limit.y ) {\n                limit.y = [ 0, docsize.y - this.$Drag.getSize().y ];\n            }\n\n            var dropables = this.getAttribute( 'dropables' );\n\n            if ( typeOf( dropables ) === 'array' ) {\n                dropables = dropables.join( ',' );\n            }\n\n            // mootools draging\n            new Drag.Move(this.$Drag, {\n                precalculate : true,\n\n                droppables : dropables,\n                onComplete : this.$complete,\n                onDrop     : this.$onDrop,\n                onEnter    : this.$onEnter,\n                onLeave    : this.$onLeave,\n                onDrag     : this.$onDrag,\n\n                limit : limit\n\n            }).start({\n                page: {\n                    x : mx,\n                    y : my\n                }\n            });\n        },\n\n        /**\n         * Stops the Draging by onmouseup\n         *\n         * @method qui/classes/utils/DragDrop#$stop\n         */\n        $stop : function()\n        {\n            if ( Browser.ie8 ) {\n                return;\n            }\n\n            // Wenn noch kein mousedown drag getätigt wurde\n            // mousedown \"abbrechen\" und onclick ausführen\n            if ( !this.getAttribute( '_mousedown' ) )\n            {\n                this.setAttribute( '_stopdrag', true );\n                return;\n            }\n\n            this.setAttribute( '_mousedown', false );\n\n            if ( typeof this.$Drag !== 'undefined' || this.$Drag )\n            {\n                this.fireEvent( 'stop', [ this, this.$Drag ] );\n\n                this.$Drag.destroy();\n                this.$Drag = null;\n            }\n        },\n\n        /**\n         * Draging is complete\n         *\n         * @method qui/classes/utils/DragDrop#$complete\n         * @param {DOMEvent} event\n         */\n        $complete : function(event)\n        {\n            this.fireEvent( 'complete', [ this, event ] );\n            this.$stop();\n        },\n\n        /**\n         * event: fired on every drag step\n         *\n         * @method qui/classes/utils/DragDrop#$onDrag\n         * @param {DOMNode} Element\n         * @param {DOMEvent} event\n         */\n        $onDrag : function(Element, event)\n        {\n            this.fireEvent( 'drag', [ this, Element, event ] );\n        },\n\n        /**\n         * event: if the drag drop would be droped to a dopable\n         *\n         * @method qui/classes/utils/DragDrop#$onDrop\n         * @param {DOMNode} Element\n         * @param {DOMNode} Dropable\n         * @param {DOMEvent} event\n         */\n        $onDrop : function(Element, Dropable, event)\n        {\n            this.fireEvent( 'drop', [ this, Element, Dropable, event ] );\n        },\n\n        /**\n         * If the drag drop enters a dropable\n         *\n         * @method qui/classes/utils/DragDrop#$onDrop\n         * @param {DOMNode} Element\n         * @param {DOMNode} Dropable\n         */\n        $onEnter : function(Element, Dropable)\n        {\n            this.fireEvent( 'enter', [ this, Element, Dropable ] );\n        },\n\n        /**\n         * If the drag drop leaves a dropable\n         *\n         * @method qui/classes/utils/DragDrop#$onLeave\n         * @param {DOMNode} Element\n         * @param {DOMNode} Dropable\n         */\n        $onLeave : function(Element, Dropable)\n        {\n            this.fireEvent( 'leave', [ this, Element, Dropable ] );\n        }\n    });\n});\n\n","\n/**\n * Utils for the controls\n * Helps the controls\n *\n * @author www.namerobot.com (Henning Leutz)\n */\n\ndefine('qui/utils/Controls', [\n\n    'qui/QUI'\n\n], function(QUI, Panel)\n{\n    \"use strict\";\n\n    return {\n\n        /**\n         * Checks if the string is a fontawesome css class\n         *\n         * @param {String} str - FontAweomse icon-class or an image path\n         * @returns {Bool}\n         */\n        isFontAwesomeClass : function(icon)\n        {\n            if ( !icon ) {\n                return false;\n            }\n\n            if ( ( icon.match( /icon-/ ) || icon.match( /fa-/ ) ) &&\n                 !icon.match( /\\./ ) )\n            {\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Highlights a control\n         *\n         * @method QUI.lib.Controls#highlight\n         * @param {DOMNode} Element\n         */\n        highlight : function(Element)\n        {\n            if ( !Element ) {\n                return;\n            }\n\n            var quiid = Element.get( 'data-quiid' );\n\n            if ( !quiid ) {\n                return;\n            }\n\n            QUI.Controls.getById( quiid ).highlight();\n        },\n\n        /**\n         * Normalize a control, if it is was highlighted\n         *\n         * @method QUI.lib.Controls#normalize\n         * @param {DOMNode} Element\n         */\n        normalize : function(Element)\n        {\n            if ( !Element ) {\n                return;\n            }\n\n            var quiid = Element.get( 'data-quiid' );\n\n            if ( !quiid ) {\n                return;\n            }\n\n            QUI.Controls.getById( quiid ).normalize();\n        }\n\n    };\n});\n","/**\n * Context Menu Item\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @requires qui/controls/Control\n * @requires qui/classes/utils/DragDrop\n * @requires qui/controls/contextmenu/Menu\n * @requires qui/controls/contextmenu/Item\n * @requires qui/controls/contextmenu/Seperator\n *\n * @package com.pcsg.qui.js.controls.contextmenu\n *\n * @event onAppend [{self}, {qui/controls/contextmenu/Item}]\n */\n\ndefine('qui/controls/contextmenu/Item', [\n\n    'qui/QUI',\n    'qui/controls/Control',\n    'qui/classes/utils/DragDrop',\n    'qui/controls/contextmenu/Menu',\n    'qui/utils/Controls',\n\n    'css!qui/controls/contextmenu/Item.css'\n\n], function(QUI, Control, DragDrop, ContextMenu, Utils)\n{\n    \"use strict\";\n\n    /**\n     * @class qui/controls/contextmenu/Item\n     *\n     * @event onClick [this, event]\n     * @event onMouseDown [this, event]\n     * @event onMouseUp [this, event]\n     * @event onActive [this]\n     * @event onNormal [this]\n     *\n     * @param {Object} options\n     *\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : Control,\n        Type    : 'qui/controls/contextmenu/Item',\n\n        Binds : [\n            '$onSetAttribute',\n            '$stringEvent',\n            '$onClick',\n\n            '$onMouseEnter',\n            '$onMouseLeave',\n            '$onMouseUp',\n            '$onMouseDown',\n        ],\n\n        options : {\n            text   : '',\n            icon   : '',\n            styles : null,\n\n            dragable : false // parent class .qui-contextitem-dropable\n        },\n\n        initialize : function(options)\n        {\n            var self  = this,\n                items = options.items || [];\n\n            delete options.items;\n\n            this.parent( options );\n\n            this.$items    = [];\n            this.$Elm      = null;\n            this.$Menu     = null;\n            this.$path     = '';\n            this.$disabled = false;\n\n            if ( typeof options.disabled !== 'undefined' && options.disabled ) {\n                this.$disabled = true;\n            }\n\n            this.addEvent( 'onSetAttribute', this.$onSetAttribute );\n\n            if ( items.length ) {\n                this.insert( items );\n            }\n\n            // string onClick\n            if ( this.getAttribute( 'onClick' ) )\n            {\n                this.addEvent('onClick', function()\n                {\n                    try\n                    {\n                        eval( self.getAttribute( 'onClick' ) +'( self )' );\n\n                    } catch ( e )\n                    {\n                        console.error( e );\n                    }\n                });\n            }\n        },\n\n        /**\n         * Create the DOMNode for the Element\n         *\n         * @method qui/controls/contextmenu/Item#create\n         *\n         * @return {DOMNode}\n         */\n        create : function()\n        {\n            var i, len;\n            var self = this;\n\n            this.$Elm = new Element('div.qui-contextitem', {\n                html   : '<div class=\"qui-contextitem-container\">' +\n                            '<span class=\"qui-contextitem-icon\"></span>' +\n                            '<span class=\"qui-contextitem-text\"></span>' +\n                         '</div>',\n\n                'data-quiid' : this.getId(),\n                tabindex : -1,\n\n                events :\n                {\n                    mouseenter : this.$onMouseEnter,\n                    mouseleave : this.$onMouseLeave\n                }\n            });\n\n            // click events on the text\n            this.$Elm.getElement( '.qui-contextitem-container' ).addEvents({\n                click      : this.$onClick,\n                mousedown  : this.$onMouseDown,\n                mouseup    : this.$onMouseUp\n            });\n\n\n            if ( this.getAttribute( 'icon' ) && this.getAttribute( 'icon' ) !== '' )\n            {\n                var Icon = this.$Elm.getElement( '.qui-contextitem-icon' ),\n                    icon = this.getAttribute( 'icon' );\n\n                // font awesome\n                if ( Utils.isFontAwesomeClass( icon ) )\n                {\n                    Icon.addClass( icon );\n                } else\n                {\n                    Icon.setStyle( 'background-image', 'url('+ icon +')' );\n                }\n            }\n\n            if ( this.getAttribute( 'text' ) && this.getAttribute( 'text' ) !== '' )\n            {\n                var Text = this.$Elm.getElement( '.qui-contextitem-text' );\n\n                if ( this.$Elm.getComputedSize().width )\n                {\n                    Text.set({\n                        html   : this.getAttribute( 'text' ),\n                        styles : {\n                            width : this.$Elm.getComputedSize().width\n                        }\n                    });\n                } else\n                {\n                    (function()\n                    {\n                        Text.set({\n                            html   : self.getAttribute( 'text' ),\n                            styles : {\n                                width : self.$Elm.getComputedSize().width\n                            }\n                        });\n                    }).delay( 500 );\n                }\n            }\n\n            // drag drop for the item\n            if ( this.getAttribute( 'dragable' ) )\n            {\n                new DragDrop( this.$Elm, {\n                    dropables : '.qui-contextitem-dropable',\n                    events :\n                    {\n                        onEnter : function(Element, Dragable, Droppable)\n                        {\n                            if ( !Droppable ) {\n                                return;\n                            }\n\n                            var quiid = Droppable.get( 'data-quiid' );\n\n                            if ( !quiid ) {\n                                return;\n                            }\n\n                            QUI.Controls.getById( quiid ).highlight();\n                        },\n\n                        onLeave : function(Element, Dragable, Droppable)\n                        {\n                            if ( !Droppable ) {\n                                return;\n                            }\n\n                            var quiid = Droppable.get( 'data-quiid' );\n\n                            if ( !quiid ) {\n                                return;\n                            }\n\n                            QUI.Controls.getById( quiid ).normalize();\n                        },\n\n                        onDrop : function(Element, Dragable, Droppable, event)\n                        {\n                            if ( !Droppable ) {\n                                return;\n                            }\n                            var quiid = Droppable.get( 'data-quiid' );\n\n                            if ( !quiid ) {\n                                return;\n                            }\n\n                            var Bar = QUI.Controls.getById( quiid );\n\n                            Bar.normalize();\n                            Bar.appendChild( self );\n                        }\n                    }\n                });\n            }\n\n            // Create sub menu, if sub items exist\n            len = this.$items.length;\n\n            if ( len )\n            {\n                this.$Elm.addClass( 'haschildren' );\n\n                var Menu = this.getContextMenu();\n\n                for ( i = 0; i < len; i++ )\n                {\n                    Menu.appendChild(\n                        this.$items[i]\n                    );\n                }\n            }\n\n            // set the disable css class\n            if ( this.isDisabled() ) {\n                this.disable();\n            }\n\n            return this.$Elm;\n        },\n\n        /**\n         * Import children\n         * from a php callback or an array\n         *\n         * @param {Array} list\n         * @return {this}\n         */\n        insert : function(list)\n        {\n            var self = this;\n\n            require([\n                'qui/controls/contextmenu/Item',\n                'qui/controls/contextmenu/Seperator'\n            ], function(ContextMenuItem, ContextMenuSeperator)\n            {\n                for ( var i = 0, len = list.length; i < len; i++)\n                {\n                    if ( self.getAttribute( 'dragable' ) ) {\n                        list[ i ].dragable = true;\n                    }\n\n                    if ( list[ i ].type == 'qui/controls/contextmenu/Seperator' )\n                    {\n                        self.appendChild(\n                            new ContextMenuSeperator( list[ i ] )\n                        );\n\n                        continue;\n                    }\n\n                    self.appendChild(\n                        new ContextMenuItem( list[i] )\n                    );\n                }\n            });\n\n            return this;\n        },\n\n        /**\n         * trigger a click\n         *\n         * @method qui/controls/contextmenu/Item#click\n         */\n        click : function()\n        {\n            this.$onClick();\n        },\n\n        /**\n         * Add a Child to the Item\n         *\n         * @method qui/controls/contextmenu/Item#appendChild\n         *\n         * @param {qui/controls/contextmenu/Item} Child\n         * @return {this} self\n         */\n        appendChild : function(Child)\n        {\n            this.$items.push( Child );\n\n            Child.setParent( this );\n\n\n            if ( this.$Elm )\n            {\n                this.$Elm.addClass( 'haschildren' );\n                Child.inject( this.getContextMenu() );\n            }\n\n            this.fireEvent( 'append', [ this, Child ] );\n\n            return this;\n        },\n\n        /**\n         * disable the item\n         *\n         * @return {self}\n         */\n        disable : function()\n        {\n            this.$disabled = true;\n\n            if ( !this.$Elm ) {\n                return this;\n            }\n\n            this.$Elm.addClass( 'qui-contextitem-disabled' );\n            return this;\n        },\n\n        /**\n         * Return if the item is disabled or not\n         *\n         * @return {Bool}\n         */\n        isDisabled : function()\n        {\n            return this.$disabled;\n        },\n\n        /**\n         * enable the item if the item was disabled\n         *\n         * @return {self}\n         */\n        enable : function()\n        {\n            this.$disabled = false;\n\n            if ( !this.$Elm ) {\n                return this;\n            }\n\n            this.$Elm.removeClass( 'qui-contextitem-disabled' );\n            return this;\n        },\n\n        /**\n         * Set the Item active\n         *\n         * @method qui/controls/contextmenu/Item#setActive\n         * @return {this}\n         */\n        setActive : function()\n        {\n            if ( this.$Elm && this.$Elm.hasClass('qui-contextitem-active') ) {\n                return this;\n            }\n\n            if ( this.$Elm )\n            {\n                if ( this.$Menu )\n                {\n                    this.$Elm\n                        .getChildren('.qui-contextitem-container')\n                        .addClass('qui-contextitem-active');\n                } else\n                {\n                    this.$Elm.addClass('qui-contextitem-active');\n                }\n            }\n\n            this.fireEvent( 'active', [ this ] );\n\n            return this;\n        },\n\n        /**\n         * Normalize the item\n         *\n         * @method qui/controls/contextmenu/Item#setNormal\n         * @return {this}\n         */\n        setNormal : function()\n        {\n            if ( !this.$Elm ) {\n                return this;\n            }\n\n            if ( this.$Menu )\n            {\n                this.$Elm\n                    .getChildren( '.qui-contextitem-container' )\n                    .removeClass( 'qui-contextitem-active' );\n            } else\n            {\n                this.$Elm.removeClass( 'qui-contextitem-active' );\n            }\n\n            this.fireEvent( 'normal', [ this ] );\n\n            return this;\n        },\n\n        /**\n         * All Context Menu Items\n         *\n         * @method qui/controls/contextmenu/Item#getChildren\n         * @param {String} name : [Name of the Children, optional, if no name given, returns all Children]\n         * @return {Array}\n         */\n        getChildren : function(name)\n        {\n            if ( typeof name !== 'undefined' )\n            {\n                if ( name == this.getAttribute( 'name' ) +'-menu' ) {\n                    return this.getContextMenu();\n                }\n\n                return this.getContextMenu().getChildren( name );\n            }\n\n            return this.getContextMenu().getChildren();\n        },\n\n        /**\n         * Clear the Context Menu Items\n         *\n         * @method qui/controls/contextmenu/Item#clear\n         * @return {this}\n         */\n        clear : function()\n        {\n            this.getContextMenu().clear();\n            this.$items = [];\n\n            return this;\n        },\n\n        /**\n         * Create the Context Menu if not exist\n         *\n         * @method qui/controls/contextmenu/Item#getContextMenu\n         * @return {QUI.controls.contextmenu.Menu}\n         */\n        getContextMenu : function()\n        {\n            if ( this.$Menu ) {\n                return this.$Menu;\n            }\n\n            this.$Menu = new ContextMenu({\n                name   : this.getAttribute( 'name' ) +'-menu',\n                corner : 'left',\n                events :\n                {\n                    onShow : function(Menu)\n                    {\n                        var children = Menu.getChildren(),\n                            Elm      = Menu.getElm();\n\n                        for ( var i = 0, len = children.length; i < len; i++ ) {\n                            children[ i ].setNormal();\n                        }\n\n                        //Menu.setPosition( Elm.getSize().x + 10, 0 );\n                    }\n                }\n            });\n\n            this.$Menu.inject( this.$Elm );\n            this.$Menu.hide();\n\n            this.$Menu.setParent( this );\n\n            return this.$Menu;\n        },\n\n        /**\n         * onSetAttribute Event\n         * Set the attribute to the DOMElement if setAttribute is execute\n         *\n         * @param {String} key\n         * @param {unknown_type} value\n         *\n         * @ignore\n         */\n        $onSetAttribute : function(key, value)\n        {\n            if ( !this.$Elm ) {\n                return;\n            }\n\n            if ( key == 'text' )\n            {\n                this.$Elm.getElement( '.qui-contextitem-text' )\n                         .set( 'html', value );\n\n                return;\n            }\n\n            if ( key == 'icon' )\n            {\n                var Icon = this.$Elm.getElement( '.qui-contextitem-icon' );\n\n                Icon.className = 'qui-contextitem-icon';\n                Icon.setStyle( 'background-image', null );\n\n                if ( Utils.isFontAwesomeClass( value ) )\n                {\n                    Icon.addClass( value );\n                } else\n                {\n                    this.$Elm.getElement( '.qui-contextitem-container' )\n                             .setStyle( 'background-image', 'url('+ value +')' );\n\n                }\n\n                return;\n            }\n        },\n\n        /**\n         * interpret a string event\n         *\n         * @param {String} event\n         */\n        $stringEvent : function(event)\n        {\n            eval( '('+ event +'(this));' );\n        },\n\n        /**\n         * event : onclick\n         *\n         * @param {DOMEvent} event\n         * @ignore\n         */\n        $onClick : function(event)\n        {\n            this.fireEvent( 'click', [ this, event ] );\n\n            var Parent = this.getParent();\n\n            if ( !Parent ) {\n                return;\n            }\n\n            this.getParent().hide();\n        },\n\n        /**\n         * event: mouse enter\n         *\n         * @param {DOMEvent} event - optional\n         */\n        $onMouseEnter : function(event)\n        {\n            if ( this.$disabled ) {\n                return;\n            }\n\n            if ( this.$Menu )\n            {\n                var size   = this.$Elm.getSize(),\n                    Parent = this.$Menu.getParent();\n\n                this.$Menu.setPosition( size.x, 0 );\n                this.$Menu.show();\n\n                if ( Parent )\n                {\n                    var MenuElm = this.$Menu.getElm(),\n\n                        elm_pos   = MenuElm.getPosition(),\n                        elm_size  = MenuElm.getSize(),\n                        body_size = document.body.getSize();\n\n                    if ( elm_pos.x + size.x > body_size.x )\n                    {\n                        // show the menü left\n                        this.$Menu.setPosition( 0 - elm_size.x, 0 );\n                    }\n                }\n\n                this.$Elm\n                    .getChildren( '.qui-contextitem-container' )\n                    .addClass( 'qui-contextitem-active' );\n            }\n\n            this.setActive();\n        },\n\n        /**\n         * event: mouse leave\n         *\n         * @param {DOMEvent} event - optional\n         */\n        $onMouseLeave : function(event)\n        {\n            if ( this.$disabled ) {\n                return;\n            }\n\n            if ( this.$Menu ) {\n                this.$Menu.hide();\n            }\n\n            this.$Elm\n                .getChildren( '.qui-contextitem-container' )\n                .removeClass( 'qui-contextitem-active' );\n\n            this.setNormal();\n        },\n\n        /**\n         * event: mouse up\n         *\n         * @param {DOMEvent} event - optional\n         */\n        $onMouseUp : function(event)\n        {\n            this.fireEvent( 'mouseUp', [ this, event ] );\n\n            if ( this.getAttribute( 'dragable' ) === false ) {\n                event.stop();\n            }\n        },\n\n        /**\n         * event: mouse down\n         *\n         * @param {DOMEvent} event - optional\n         */\n        $onMouseDown : function(event)\n        {\n            this.fireEvent( 'mouseDown', [ this, event ] );\n\n            if ( this.getAttribute( 'dragable' ) === false ) {\n                event.stop();\n            }\n        }\n    });\n});\n","\n/**\n * qui/utils/NoSelect\n *\n * Makes an object unselectable or selectable\n *\n * @author www.namerobot.com (Henning Leutz)\n */\n\ndefine('qui/utils/NoSelect', [],function()\n{\n    \"use strict\";\n\n    return {\n\n        /**\n         * Enable the selection for an Element\n         *\n         * @param {DOMNode} Elm - Element in which the mark / highlight is to be enabled\n         */\n        enable : function(Elm)\n        {\n            if ( typeof Elm.setProperty === 'undefined' ) {\n                Elm = document.id( Elm );\n            }\n\n            Elm.removeClass( 'qui-utils-noselect' );\n\n            if ( Browser.ie )\n            {\n                document.removeEvent( 'selectstart', this.stopSelection );\n                return;\n            }\n\n            Elm.removeProperty( \"unselectable\", \"on\" );\n            Elm.removeProperty( \"unSelectable\", \"on\" );\n\n            Elm.setStyles({\n                \"MozUserSelect\"   : \"\",\n                \"KhtmlUserSelect\" : \"\"\n            });\n        },\n\n        /**\n         * Disable the selection for an Element\n         *\n         * @param {DOMNode} Elm - Element in which the mark / highlight is to be prevented\n         */\n        disable : function(Elm)\n        {\n            if ( typeof Elm.setProperty === 'undefined' ) {\n                Elm = document.id( Elm );\n            }\n\n            Elm.addClass( 'qui-utils-noselect' );\n\n            if ( Browser.ie )\n            {\n                document.addEvent( 'selectstart', this.stopSelection );\n                return;\n            }\n\n            Elm.setProperty( \"unselectable\", \"on\" );\n            Elm.setProperty( \"unSelectable\", \"on\" );\n\n            Elm.setStyles({\n                \"MozUserSelect\"   : \"none\",\n                \"KhtmlUserSelect\" : \"none\"\n            });\n        },\n\n        /**\n         * Stop selection for IE Browser\n         *\n         * @param {DOMEvent}\n         */\n        stopSelection : function(event)\n        {\n            event.stop();\n            return false;\n        }\n    };\n});\n\n","\n/**\n * Helper for DOMNode Elements\n *\n * @author www.namerobot.com (Henning Leutz)\n */\n\ndefine('qui/utils/Elements', [],function()\n{\n    \"use strict\";\n\n    return {\n\n        /**\n         * checks if the element is in the viewport\n         *\n         * @param {DOMNode} el\n         */\n        isInViewport : function(el)\n        {\n            var rect = el.getBoundingClientRect();\n\n            return (\n                rect.top >= 0 &&\n                rect.left >= 0 &&\n                rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n                rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n            );\n        },\n\n\n        isInBody : function(Elm)\n        {\n            var bodySize = document.body.getSize(),\n                elmCords = Elm.getCoordinates();\n\n\n            console.log( elmCords );\n            console.log( bodySize );\n\n\n\n            return false;\n        },\n\n        /**\n         * Return the z-index of an Element\n         *\n         * @return {Integer}\n         */\n        getComputedZIndex : function(Elm)\n        {\n            var i, z, len, max = 0;\n            var parents = Elm.getParents();\n\n            for ( i = 0, len = parents.length; i < len; i++)\n            {\n                z = parents[ i ].getStyle( 'zIndex' );\n\n                if ( z == 'auto' ) {\n                    continue;\n                }\n\n                if ( z > max ) {\n                     max = z;\n                }\n            }\n\n            return max;\n        }\n    };\n});\n","/**\n * QUI Control - Button\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @requires qui/controls/Control\n * @requires qui/utils/NoSelect\n *\n * @module controls/buttons/Button\n * @package com.pcsg.qui.js.controls.buttons\n */\n\ndefine('qui/controls/buttons/Button', [\n\n    'qui/controls/Control',\n    'qui/utils/Controls',\n    'qui/utils/NoSelect',\n    'qui/utils/Elements',\n\n    'css!qui/controls/buttons/Button.css'\n\n], function(Control, Utils, NoSelect, ElementUtils)\n{\n    \"use strict\";\n\n    /**\n     * @class qui/controls/buttons/Button\n     *\n     * @event onClick\n     * @event onCreate\n     * @event onDrawBegin\n     * @event onDrawEnd\n     * @event onSetNormal\n     * @event onSetDisable\n     * @event onSetActive\n     *\n     * @event onEnter     - event triggerd if button is not disabled\n     * @event onLeave     - event triggerd if button is not disabled\n     * @event onMousedown - event triggerd if button is not disabled\n     * @event onMouseUp   - event triggerd if button is not disabled\n     * @event onFocus\n     * @event onBlur\n     * @event onActive\n     * @event onDisable\n     * @event onEnable\n     *\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : Control,\n        Type    : 'qui/controls/buttons/Button',\n\n        Binds : [\n            'onSetAttribute'\n        ],\n\n        options : {\n            'type'      : 'button',\n            'image'     : false,   // (@depricated) use the icon attribute\n            'icon'      : false,   // icon top of the text\n            'style'     : {},      // mootools css style attributes\n            'textimage' : false,   // Image left from text\n            'text'      : false,   // Button text\n            'title'     : false,\n            'class'     : false,    // extra CSS Class\n            'buttonCSSClass' : true, // should have the button the qui-button css class?\n            'menuCorner'     : 'top'\n        },\n\n        params : {},\n\n        initialize : function(options)\n        {\n            this.parent( options );\n\n            this.$Menu  = null;\n            this.$Drop  = null;\n            this.$items = [];\n\n\n            if ( options.events ) {\n                delete options.events;\n            }\n\n            this.setAttributes(\n                this.initV2( options )\n            );\n\n            this.addEvent('onSetAttribute', this.onSetAttribute);\n            this.addEvent('onDestroy', function()\n            {\n                if ( this.$Menu ) {\n                    this.$Menu.destroy();\n                }\n            }.bind( this ));\n        },\n\n        /**\n         * Compatible to _ptools::Button v2\n         *\n         * @method qui/controls/buttons/Button#initV2\n         * @ignore\n         */\n        initV2: function(options)\n        {\n            if ( options.onclick )\n            {\n                if ( typeOf( options.onclick ) === 'string' )\n                {\n                    options.onclick = function(p) {\n                        eval(p +'(this);');\n                    }.bind(this, [ options.onclick ]);\n                }\n\n                this.addEvent( 'onClick', options.onclick );\n                delete options.onclick;\n            }\n\n            if ( options.oncreate )\n            {\n                this.addEvent( 'onCreate', options.oncreate );\n                delete options.oncreate;\n            }\n\n            return options;\n        },\n\n        /**\n         * Create the DOM Element\n         *\n         * @method qui/controls/buttons/Button#create\n         * @return {DOMNode}\n         */\n        create : function()\n        {\n            var i, len;\n\n            var self = this;\n\n            var Elm = new Element('button', {\n                'type' : this.getAttribute('type'),\n                'data-status' : 0,\n                'data-quiid'  : this.getId()\n            });\n\n            if ( this.getAttribute( 'buttonCSSClass' ) ) {\n                Elm.addClass( 'qui-button' );\n            }\n\n            if ( this.getAttribute( 'width' ) ) {\n                Elm.setStyle( 'width', this.getAttribute( 'width' ) );\n            }\n\n            if ( this.getAttribute('height') ) {\n                Elm.setStyle( 'height', this.getAttribute( 'height' ) );\n            }\n\n            if ( this.getAttribute( 'styles' ) ) {\n                Elm.setStyles( this.getAttribute( 'styles' ) );\n            }\n\n            if ( this.getAttribute( 'class' ) ) {\n                Elm.addClass( this.getAttribute( 'class' ) );\n            }\n\n            Elm.style.outline = 0;\n            Elm.setAttribute('tabindex', \"-1\");\n\n            Elm.addEvents({\n\n                click : function(event)\n                {\n                    if ( self.isDisabled() ) {\n                        return;\n                    }\n\n                    self.onclick( event );\n                },\n\n                mouseenter : function()\n                {\n                    if ( self.isDisabled() ) {\n                        return;\n                    }\n\n                    if ( !self.isActive() ) {\n                        self.getElm().addClass( 'qui-button-over' );\n                    }\n\n                    self.fireEvent( 'enter', [ self ] );\n                },\n\n                mouseleave : function()\n                {\n                    if ( self.isDisabled() ) {\n                        return;\n                    }\n\n                    if ( !self.isActive() ) {\n                        self.getElm().removeClass( 'qui-button-over' );\n                    }\n\n                    self.fireEvent( 'leave', [ self ] );\n                },\n\n                mousedown : function(event)\n                {\n                    if ( self.isDisabled() ) {\n                        return;\n                    }\n\n                    self.fireEvent( 'mousedown', [ self, event ] );\n\n                },\n\n                mouseup : function(event)\n                {\n                    if ( self.isDisabled() ) {\n                        return;\n                    }\n\n                    self.fireEvent( 'mouseup', [ self, event ] );\n                },\n\n                blur : function(event)\n                {\n                    self.fireEvent( 'blur', [ self, event ] );\n                },\n\n                focus : function(event)\n                {\n                    self.fireEvent( 'focus', [ self, event ] );\n                }\n            });\n\n            this.$Elm = Elm;\n\n\n            // Elemente aufbauen\n            if ( this.getAttribute( 'icon' ) ) {\n                this.setAttribute( 'icon', this.getAttribute( 'icon' ) );\n            }\n\n            if ( !this.getAttribute( 'icon' ) && this.getAttribute( 'image' ) ) {\n                this.setAttribute( 'icon', this.getAttribute( 'image' ) );\n            }\n\n            if ( this.getAttribute( 'styles' ) ) {\n                this.setAttribute( 'styles', this.getAttribute( 'styles' ) );\n            }\n\n            if ( this.getAttribute( 'textimage' ) ) {\n                this.setAttribute( 'textimage', this.getAttribute( 'textimage' ) );\n            }\n\n            if ( this.getAttribute( 'text' ) ) {\n                this.setAttribute( 'text', this.getAttribute( 'text' ) );\n            }\n\n            if ( this.getAttribute( 'title' ) ) {\n                this.$Elm.setAttribute( 'title', this.getAttribute( 'title' ) );\n            }\n\n            if ( this.getAttribute( 'disabled' ) ) {\n                this.setDisable();\n            }\n\n\n            // sub menu\n            len = this.$items.length;\n\n            if ( len )\n            {\n                this.getContextMenu(function(Menu)\n                {\n                    for ( i = 0; i < len; i++ ) {\n                        Menu.appendChild( self.$items[i] );\n                    }\n\n                    self.$Drop = new Element('div', {\n                        'class' : 'qui-button-drop icon-chevron-down'\n                    }).inject( self.$Elm );\n                });\n            }\n\n            this.fireEvent( 'create', [ this ] );\n\n            NoSelect.disable( Elm );\n\n            return this.$Elm;\n        },\n\n        /**\n         * Trigger the Click Event\n         *\n         * @method qui/controls/buttons/Button#onclick\n         * @param {DOMEvent} event\n         */\n        click : function(event)\n        {\n            if ( this.isDisabled() ) {\n                return;\n            }\n\n            this.fireEvent( 'click', [ this, event ] );\n        },\n\n        /**\n         * @see qui/controls/buttons/Button#onclick\n         */\n        onclick : function(event)\n        {\n            this.click( event );\n        },\n\n        /**\n         * Set the Button Active\n         *\n         * @method qui/controls/buttons/Button#setActive\n         */\n        setActive : function()\n        {\n            if ( this.isDisabled() ) {\n                return;\n            }\n\n            var Elm = this.getElm();\n\n            if ( !Elm ) {\n                return;\n            }\n\n            Elm.addClass( 'qui-button-active' );\n            Elm.set( 'data-status', 1 );\n\n            this.fireEvent( 'active', [ this ] );\n        },\n\n        /**\n         * is Button Active?\n         *\n         * @method qui/controls/buttons/Button#isActive\n         * @return {Bool}\n         */\n        isActive : function()\n        {\n            if ( !this.getElm() ) {\n                return false;\n            }\n\n            if ( this.getElm().get( 'data-status' ) == 1 ) {\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Disable the Button\n         * Most Events are no more triggered\n         *\n         * @method qui/controls/buttons/Button#disable\n         * @return {qui/controls/buttons/Button}\n         */\n        disable : function()\n        {\n            var Elm = this.getElm();\n\n            if ( !Elm ) {\n                return;\n            }\n\n            Elm.set({\n                'data-status' : -1,\n                'disabled'    : 'disabled'\n            });\n\n            this.fireEvent( 'disable', [ this ] );\n\n            return this;\n        },\n\n        /**\n         * @depricated use disable\n         * @method qui/controls/buttons/Button#setDisable\n         * @return {qui/controls/buttons/Button}\n         */\n        setDisable : function()\n        {\n            return this.disable();\n        },\n\n        /**\n         * is Button Disabled?\n         *\n         * @method qui/controls/buttons/Button#isDisabled\n         * @return {Bool}\n         */\n        isDisabled : function()\n        {\n            if ( !this.getElm() ) {\n                return false;\n            }\n\n            if ( this.getElm().get('data-status') == -1 ) {\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * If the Button was disabled, you can enable the Button\n         *\n         * @method qui/controls/buttons/Button#setEnable\n         * @return {this}\n         */\n        enable : function()\n        {\n            if ( !this.getElm() ) {\n                return false;\n            }\n\n            this.getElm().set({\n                'data-status' : 0,\n                'disabled'    : null\n            });\n\n            this.setNormal();\n\n            return this;\n        },\n\n        /**\n         * @depricated\n         *\n         * @method qui/controls/buttons/Button#setEnable\n         * @return {this}\n         */\n        setEnable : function()\n        {\n            return this.enable();\n        },\n\n        /**\n         * If the Button was active, you can normalize the Button\n         * The Button must be enabled.\n         *\n         * @method qui/controls/buttons/Button#setNormal\n         * @return {this}\n         */\n        setNormal : function()\n        {\n            if ( this.isDisabled() ) {\n                return;\n            }\n\n            if ( !this.getElm() ) {\n                return false;\n            }\n\n            var Elm = this.getElm();\n\n            Elm.set({\n                'data-status' : 0,\n                'disabled'    : null\n            });\n\n            Elm.removeClass( 'qui-button-active' );\n            Elm.removeClass( 'qui-button-over' );\n\n            this.fireEvent( 'normal', [ this ] );\n\n            return this;\n        },\n\n        /**\n         * Adds a Children to an Button Menu\n         *\n         * @method qui/controls/buttons/Button#appendChild\n         *\n         * @param {qui/controls/contextmenu/Item} Itm\n         * @return {this}\n         */\n        appendChild : function(Itm)\n        {\n            this.$items.push( Itm );\n\n            Itm.setAttribute( 'Button', this );\n\n            if ( !this.$Elm ) {\n                return this;\n            }\n\n            var self = this;\n\n            this.getContextMenu(function(Menu)\n            {\n                Menu.appendChild( Itm );\n\n                if ( !self.$Drop )\n                {\n                    self.$Drop = new Element('div', {\n                        'class' : 'qui-button-drop icon-chevron-down'\n                    }).inject( self.$Elm );\n                }\n            });\n\n            return this;\n        },\n\n        /**\n         * All Context Menu Items\n         *\n         * @method qui/controls/buttons/Button#getChildren\n         * @return {Array}\n         */\n        getChildren : function()\n        {\n            return this.$items;\n        },\n\n        /**\n         * Clear the Context Menu Items\n         *\n         * @method qui/controls/buttons/Button#clear\n         * @return {this}\n         */\n        clear : function()\n        {\n            this.getContextMenu(function(Menu) {\n                Menu.clearChildren();\n            });\n\n            this.$items = [];\n\n            return this;\n        },\n\n        /**\n         * Create the Context Menu if not exist\n         *\n         * @method qui/controls/buttons/Button#getContextMenu\n         *\n         * @param {Function} callback - callback function( {qui/controls/contextmenu/Menu} )\n         * @return {this}\n         */\n        getContextMenu : function(callback)\n        {\n            if ( this.$Menu && typeof this.$createContextMenu === 'undefined' )\n            {\n                callback( this.$Menu );\n                return this;\n            }\n\n            var self = this;\n\n            if ( typeof this.$createContextMenu !== 'undefined' )\n            {\n                (function() {\n                    self.getContextMenu( callback );\n                }).delay( 10 );\n\n                return this;\n            }\n\n\n            this.$createContextMenu = true;\n\n            require(['qui/controls/contextmenu/Menu'], function(Menu)\n            {\n                self.$Menu = new Menu({\n                    name   : self.getAttribute('name') +'-menu',\n                    corner : self.getAttribute('menuCorner')\n                });\n\n                self.$Menu.inject( document.body );\n\n                self.addEvents({\n                    onClick : function()\n                    {\n                        if ( self.isDisabled() ) {\n                            return;\n                        }\n\n                        var pos  = self.$Elm.getPosition(),\n                            size = self.$Elm.getSize();\n\n                        self.$Menu.setPosition(\n                            pos.x - 20,\n                            pos.y + size.y + 10\n                        );\n\n                        self.$Menu.show();\n                        self.$Elm.focus();\n                    },\n\n                    onBlur : function()\n                    {\n                        self.$Menu.hide();\n                    }\n                });\n\n                self.$Menu.setParent( self );\n\n                delete self.$createContextMenu;\n\n                callback( self.$Menu );\n            });\n        },\n\n        /**\n         * Method for changing the DOMNode if attributes are changed\n         *\n         * @method qui/controls/buttons/Button#onSetAttribute\n         *\n         * @param {String} k             - Attribute name\n         * @param {unknown_type} value     - Attribute value\n         *\n         * @ignore\n         */\n        onSetAttribute : function(k, value)\n        {\n            var Elm = this.getElm();\n\n            //this.options[k] = value;\n\n            if ( !Elm ) {\n                return;\n            }\n\n            // onclick overwrite\n            if ( k === 'onclick' )\n            {\n                this.removeEvents('click');\n\n                this.addEvent('click', function(p)\n                {\n                    eval(p +'(this);');\n                }.bind( this, [value] ));\n\n                return;\n            }\n\n            if ( k == 'image' ) {\n                k = 'icon';\n            }\n\n            // Image\n            if ( k === 'icon' )\n            {\n                if ( !Elm.getElement('.image-container') )\n                {\n                    new Element('div.image-container', {\n                        align : 'center'\n                    }).inject( Elm );\n                }\n\n                var Image = Elm.getElement('.image-container');\n\n                Image.set( 'html', '' );\n\n                if ( Utils.isFontAwesomeClass( value ) )\n                {\n                    new Element('span', {\n                        'class' : value\n                    }).inject( Image );\n                } else\n                {\n                    new Element('img.qui-button-image', {\n                        src    : value,\n                        styles : {\n                            'display' : 'block' // only image, fix\n                        }\n                    }).inject( Image );\n                }\n\n                return;\n            }\n\n            // Style Attributes\n            if ( k === \"styles\" )\n            {\n                Elm.setStyles( value );\n                return;\n            }\n\n            // Text\n            if ( k === \"title\" )\n            {\n                Elm.setAttribute( 'title', value );\n                return;\n            }\n\n            // Text and Text-Image\n            if ( k !== 'textimage' && k !== 'text' ) {\n                return;\n            }\n\n            // Text + Text Image\n            if ( !Elm.getElement('.qui-button-text') ) {\n                new Element('span.qui-button-text').inject( Elm );\n            }\n\n            var Txt = Elm.getElement('.qui-button-text');\n\n            // Text\n            if ( k === 'text' ) {\n                Txt.set( 'html', value );\n            }\n\n            if ( k === 'textimage' )\n            {\n                var Img;\n\n                if ( Elm.getElement('.qui-button-text-image') ) {\n                    Elm.getElement('.qui-button-text-image').destroy();\n                }\n\n                if ( Utils.isFontAwesomeClass( value ) )\n                {\n                    Img = new Element('span', {\n                        'class'  : 'qui-button-text-image '+ value,\n                        styles : {\n                            'margin-right': 0\n                        }\n                    }).inject( Txt, 'before' );\n                } else\n                {\n                    Img = new Element('img', {\n                        'class' : 'qui-button-text-image',\n                        src     : value,\n                        styles  : {\n                            'margin-right': 0\n                        }\n                    }).inject( Txt, 'before' );\n                }\n\n                if ( this.getAttribute('text') ) {\n                    Img.setStyle( 'margin-right', null );\n                }\n            }\n        }\n    });\n});\n\n","/*\n---\nprovides: moofx\nversion: 3.2.0\ndescription: A CSS3-enabled javascript animation library\nhomepage: http://moofx.it\nauthor: Valerio Proietti <@kamicane> (http://mad4milk.net)\nlicense: MIT (http://mootools.net/license.txt)\nincludes: cubic-bezier by Arian Stolwijk (https://github.com/arian/cubic-bezier)\n...\n*/\n\n(function(t){var n={},r=function(e){var i=n[e];if(!i){i=n[e]={};var o=i.exports={};t[e].call(o,r,i,o,window)}return i.exports};window.moofx=r(\"0\")})({0:function(t,n){\"use strict\";var r=t(\"1\"),e=t(\"2\"),i=\"undefined\"!=typeof document?t(\"4\"):t(\"o\");i.requestFrame=function(t){return e.request(t),this},i.cancelFrame=function(t){return e.cancel(t),this},i.color=r,n.exports=i},1:function(t,n){\"use strict\";var r={maroon:\"#800000\",red:\"#ff0000\",orange:\"#ffA500\",yellow:\"#ffff00\",olive:\"#808000\",purple:\"#800080\",fuchsia:\"#ff00ff\",white:\"#ffffff\",lime:\"#00ff00\",green:\"#008000\",navy:\"#000080\",blue:\"#0000ff\",aqua:\"#00ffff\",teal:\"#008080\",black:\"#000000\",silver:\"#c0c0c0\",gray:\"#808080\",transparent:\"#0000\"},e=function(t,n,r,e){return(null==e||\"\"===e)&&(e=1),t=parseFloat(t),n=parseFloat(n),r=parseFloat(r),e=parseFloat(e),255>=t&&t>=0&&255>=n&&n>=0&&255>=r&&r>=0&&1>=e&&e>=0?[Math.round(t),Math.round(n),Math.round(r),e]:null},i=function(t){if(3===t.length&&(t+=\"f\"),4===t.length){var n=t.charAt(0),r=t.charAt(1),e=t.charAt(2),i=t.charAt(3);t=n+n+r+r+e+e+i+i}6===t.length&&(t+=\"ff\");for(var o=[],u=0,a=t.length;a>u;u+=2)o.push(parseInt(t.substr(u,2),16)/(6===u?255:1));return o},o=function(t,n,r){return 0>r&&(r+=1),r>1&&(r-=1),1/6>r?t+6*(n-t)*r:.5>r?n:2/3>r?t+6*(n-t)*(2/3-r):t},u=function(t,n,r,e){var i,u,a;if((null==e||\"\"===e)&&(e=1),t=parseFloat(t)/360,n=parseFloat(n)/100,r=parseFloat(r)/100,e=parseFloat(e)/1,t>1||0>t||n>1||0>n||r>1||0>r||e>1||0>e)return null;if(0===n)i=u=a=r;else{var s=.5>r?r*(1+n):r+n-r*n,c=2*r-s;i=o(c,s,t+1/3),a=o(c,s,t),u=o(c,s,t-1/3)}return[255*i,255*a,255*u,e]},a=[];for(var s in r)a.push(s);var c=\"(?:#([a-f0-9]{3,8}))\",l=\"\\\\s*([.\\\\d%]+)\\\\s*\",f=\"(?:,\\\\s*([.\\\\d]+)\\\\s*)?\",h=\"\\\\(\"+[l,l,l]+f+\"\\\\)\",p=\"(?:rgb)a?\",v=\"(?:hsl)a?\",m=\"(\"+a.join(\"|\")+\")\",d=RegExp(c,\"i\"),g=RegExp(p+h,\"i\"),b=RegExp(v+h,\"i\"),y=function(t,n){if(null==t)return null;t=(t+\"\").replace(/\\s+/,\"\");var o=r[t];if(o)return y(o,n);if(o=t.match(d))t=i(o[1]);else if(o=t.match(g))t=o.slice(1);else{if(!(o=t.match(b)))return null;t=u.apply(null,o.slice(1))}return t&&(t=e.apply(null,t))?n?t:(1===t[3]&&t.splice(3,1),\"rgb\"+(4===t.length?\"a\":\"\")+\"(\"+t+\")\"):null};y.x=RegExp([m,c,p+h,v+h].join(\"|\"),\"gi\"),n.exports=y},2:function(t,n,r,e){\"use strict\";var i=t(\"3\"),o=e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(t){return setTimeout(function(){t()},1e3/60)},u=[],a=function(t){for(var n=u.splice(0,u.length),r=0,e=n.length;e>r;r++)n[r](t||(t=+new Date))},s=function(t){var n=i(u,t);n>-1&&u.splice(n,1)},c=function(t){var n=u.push(t);return 1===n&&o(a),function(){s(t)}};r.request=c,r.cancel=s},3:function(t,n){\"use strict\";var r=function(t,n,r){for(var e=t.length>>>0,i=0>r?Math.max(0,e+r):r||0;e>i;i++)if(t[i]===n)return i;return-1};n.exports=r},4:function(t,n,r,e){\"use strict\";var i=t(\"1\"),o=t(\"2\"),u=(o.cancel,o.request),a=t(\"5\"),s=t(\"d\"),c=t(\"e\"),l=t(\"g\"),f=t(\"h\"),h=t(\"i\"),p=t(\"j\"),v=t(\"3\"),m=t(\"k\"),d=t(\"o\"),g=function(t,n){return String.prototype.match.call(t,n)},b={},y=function(t){return b[t]||(b[t]=f(t))},S=function(t){return Math.round(1e3*t)/1e3},x=e.getComputedStyle?function(t){var n=getComputedStyle(t,null);return function(t){return n&&n.getPropertyValue(y(t))?n.getPropertyValue(y(t)):\"\"}}:function(t){var n=t.currentStyle;return function(t){return n?n[s(t)]:\"\"}},C=document.createElement(\"div\"),w=\"border:none;margin:none;padding:none;visibility:hidden;position:absolute;height:0;\",E=function(t,n){var r=t.parentNode,e=1;return r&&(C.style.cssText=w+(\"width:100\"+n+\";\"),r.appendChild(C),e=C.offsetWidth/100,r.removeChild(C)),e},j=function(t){var n=t.length;return 1===n?t.push(t[0],t[0],t[0]):2===n?t.push(t[0],t[1]):3===n&&t.push(t[1]),t},T=\"([-.\\\\d]+)(%|cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vm)\",q=T+\"?\",k=\"none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|inherit\",R=RegExp(T,\"g\"),F=RegExp(q),O=RegExp(q,\"g\"),A=RegExp(k),M=function(t){return null==t?\"\":t+\"\"},z=function(t,n){return null==t||\"\"===t?n?\"1\":\"\":isFinite(t=+t)?0>t?\"0\":t+\"\":\"1\"};try{C.style.color=\"rgba(0,0,0,0.5)\"}catch(P){}var N=/^rgba/.test(C.style.color),W=function(t,n){var r,e=\"rgba(0,0,0,1)\";if(!t||!(r=i(t,!0)))return n?e:\"\";if(n)return\"rgba(\"+r+\")\";var o=r[3];return 0===o?\"transparent\":N&&1!==o?\"rgba(\"+r+\")\":\"rgb(\"+r.slice(0,3)+\")\"},D=function(t,n){if(null==t||\"\"===t)return n?\"0px\":\"\";var r=g(t,F);return r?r[1]+(r[2]||\"px\"):t},L=function(t,n){if(null==t||\"\"===t)return n?\"none\":\"\";var r=t.match(A);return r?t:n?\"none\":\"\"},I=function(t,n){var r=\"0px none rgba(0,0,0,1)\";if(null==t||\"\"===t)return n?r:\"\";if(0===t||\"none\"===t)return n?r:t+\"\";var e;t=t.replace(i.x,function(t){return e=t,\"\"});var o=t.match(A),u=t.match(O);return c([D(u?u[0]:\"\",n),L(o?o[0]:\"\",n),W(e,n)].join(\" \"))},X=function(t,n){return null==t||\"\"===t?n?\"0px 0px 0px 0px\":\"\":c(j(h(c(t).split(\" \"),function(t){return D(t,n)})).join(\" \"))},B=function(t,n,r){var e=\"rgba(0,0,0,0)\",o=3===r?e+\" 0px 0px 0px\":e+\" 0px 0px 0px 0px\";if(null==t||\"\"===t)return n?o:\"\";if(\"none\"===t)return n?o:t;var u=[],t=c(t).replace(i.x,function(t){return u.push(t),\"\"});return h(t.split(\",\"),function(t,e){var i=W(u[e],n),o=/inset/.test(t),a=t.match(O)||[\"0px\"];for(a=h(a,function(t){return D(t,n)});r>a.length;)a.push(\"0px\");var s=o?[\"inset\",i]:[i];return s.concat(a).join(\" \")}).join(\", \")},V=function(t,n){return null==t||\"\"===t?\"\":t.replace(i.x,function(t){return W(t,n)}).replace(R,function(t){return D(t,n)})},Y={},_={},H={},U={},$=function(t){return Y[t]||(Y[t]=function(){var n=U[t]||t,r=H[t]||V;return function(){return r(x(this)(n),!0)}}())},Z=function(t){return _[t]||(_[t]=function(){var n=U[t]||t,r=H[t]||V;return function(t){this.style[n]=r(t,!1)}}())},G=[\"Top\",\"Right\",\"Bottom\",\"Left\"],J=[\"TopLeft\",\"TopRight\",\"BottomRight\",\"BottomLeft\"];p(G,function(t){var n=\"border\"+t;p([\"margin\"+t,\"padding\"+t,n+\"Width\",t.toLowerCase()],function(t){H[t]=D}),H[n+\"Color\"]=W,H[n+\"Style\"]=L,H[n]=I,Y[n]=function(){return[$(n+\"Width\").call(this),$(n+\"Style\").call(this),$(n+\"Color\").call(this)].join(\" \")}}),p(J,function(t){H[\"border\"+t+\"Radius\"]=D}),H.color=H.backgroundColor=W,H.width=H.height=H.minWidth=H.minHeight=H.maxWidth=H.maxHeight=H.fontSize=H.backgroundSize=D,p([\"margin\",\"padding\"],function(t){H[t]=X,Y[t]=function(){return h(G,function(n){return $(t+n).call(this)},this).join(\" \")}}),H.borderWidth=X,H.borderStyle=function(t,n){return null==t||\"\"===t?n?j([\"none\"]).join(\" \"):\"\":(t=c(t).split(\" \"),c(j(h(t,function(t){L(t,n)})).join(\" \")))},H.borderColor=function(t,n){return t&&(t=g(t,i.x))?c(j(h(t,function(t){return W(t,n)})).join(\" \")):n?j([\"rgba(0,0,0,1)\"]).join(\" \"):\"\"},p([\"Width\",\"Style\",\"Color\"],function(t){Y[\"border\"+t]=function(){return h(G,function(n){return $(\"border\"+n+t).call(this)},this).join(\" \")}}),H.borderRadius=X,Y.borderRadius=function(){return h(J,function(t){return $(\"border\"+t+\"Radius\").call(this)},this).join(\" \")},H.border=I,Y.border=function(){for(var t,n=0;G.length>n;n++){var r=$(\"border\"+G[n]).call(this);if(t&&r!==t)return null;t=r}return t},H.zIndex=M,H.opacity=z;var K=null!=C.style.MsFilter&&\"MsFilter\"||null!=C.style.filter&&\"filter\";if(K&&null==C.style.opacity){var Q=/alpha\\(opacity=([\\d.]+)\\)/i;_.opacity=function(t){t=\"1\"===(t=z(t))?\"\":\"alpha(opacity=\"+Math.round(100*t)+\")\";var n=x(this)(K);return this.style[K]=Q.test(n)?n.replace(Q,t):n+\" \"+t},Y.opacity=function(){var t=x(this)(K).match(Q);return(t?t[1]/100:1)+\"\"}}var tn=H.boxShadow=function(t,n){return B(t,n,4)},nn=H.textShadow=function(t,n){return B(t,n,3)};p([\"Webkit\",\"Moz\",\"ms\",\"O\",null],function(t){p([\"transition\",\"transform\",\"transformOrigin\",\"transformStyle\",\"perspective\",\"perspectiveOrigin\",\"backfaceVisibility\"],function(n){var r=t?t+l(n):n;\"ms\"===t&&(b[r]=\"-ms-\"+y(n)),null!=C.style[r]&&(U[n]=r)})});var rn=U.transition,en=U.transform;\"OTransition\"===rn&&(rn=null);var on,un;!rn&&en&&function(){var n=t(\"q\"),r=\"\\\\s*([-\\\\d\\\\w.]+)\\\\s*\",e=RegExp(\"matrix\\\\(\"+[r,r,r,r,r,r]+\"\\\\)\"),i=function(t){var r=n.apply(null,t.match(e).slice(1))||[[0,0],0,0,[0,0]];return[\"translate(\"+h(r[0],function(t){return S(t)+\"px\"})+\")\",\"rotate(\"+S(180*r[1]/Math.PI)+\"deg)\",\"skewX(\"+S(180*r[2]/Math.PI)+\"deg)\",\"scale(\"+h(r[3],S)+\")\"].join(\" \")},o=function(t){return t||\"0px\"},u=function(t){return t||\"1\"},s=function(t){return t||\"0deg\"},l={translate:function(t){t||(t=\"0px,0px\");var n=t.split(\",\");return n[1]||(n[1]=\"0px\"),h(n,c)+\"\"},translateX:o,translateY:o,scale:function(t){t||(t=\"1,1\");var n=t.split(\",\");return n[1]||(n[1]=n[0]),h(n,c)+\"\"},scaleX:u,scaleY:u,rotate:s,skewX:s,skewY:s};un=a({constructor:function(t){var n=this.names=[],r=this.values=[];t.replace(/(\\w+)\\(([-.\\d\\s\\w,]+)\\)/g,function(t,e,i){n.push(e),r.push(i)})},identity:function(){var t=[];return p(this.names,function(n){var r=l[n];r&&t.push(n+\"(\"+r()+\")\")}),t.join(\" \")},sameType:function(t){return\"\"+this.names==\"\"+t.names},decompose:function(){var t=\"\"+this;C.style.cssText=w+y(en)+\":\"+t+\";\",document.body.appendChild(C);var n=x(C)(en);return n&&\"none\"!==n||(n=\"matrix(1, 0, 0, 1, 0, 0)\"),document.body.removeChild(C),i(n)}}),un.prototype.toString=function(t){var n=this.values,r=[];return p(this.names,function(e,i){var o=l[e];if(o){var u=o(n[i]);t&&u===o()||r.push(e+\"(\"+u+\")\")}}),r.length?r.join(\" \"):\"none\"},un.union=function(t,n){if(t!==n){var r,e;if(\"none\"===t?(e=new un(n),n=\"\"+e,t=e.identity(),r=new un(t)):\"none\"===n?(r=new un(t),t=\"\"+r,n=r.identity(),e=new un(n)):(r=new un(t),t=\"\"+r,e=new un(n),n=\"\"+e),t!==n&&(r.sameType(e)||(t=r.decompose(),n=e.decompose()),t!==n))return[t,n]}},on=H.transform=function(t){return t&&\"none\"!==t?new un(e.test(t)?i(t):t).toString(!0):\"none\"},Y.transform=function(){var t=this.style;return t[en]||(t[en]=on(x(this)(en)))}}();var an,sn=function(t,n,r){var e=H[n]||V,i=$(n).call(t),r=e(r,!0);if(i!==r){if(e===D||e===I||e===X){var o=r.match(R),u=0;o&&(i=i.replace(R,function(n,r,e){var i=o[u++],a=i.match(F),s=a[2];if(e!==s){var c=\"px\"===e?r:E(t,e)*r;return S(c/E(t,s))+s}return n})),u>0&&Z(n).call(t,i)}else if(e===on)return un.union(i,r);return i!==r?[i,r]:null}},cn=a({inherits:d,constructor:function cn(t,n){var r=$(n),e=Z(n);this.get=function(){return r.call(t)},this.set=function(n){return e.call(t,n)},cn.parent.constructor.call(this,this.set),this.node=t,this.property=n}});an=a({inherits:cn,constructor:function an(){return an.parent.constructor.apply(this,arguments)},start:function(t){if(this.stop(),0===this.duration)return this.cancel(t),this;var n=sn(this.node,this.property,t);if(!n)return this.cancel(t),this;if(an.parent.start.apply(this,n),!this.cancelStep)return this;var r=H[this.property]||V;return r!==tn&&r!==nn&&r!==V||this.templateFrom===this.templateTo||(this.cancelStep(),delete this.cancelStep,this.cancel(t)),this},parseEquation:function(t){return\"string\"==typeof t?an.parent.parseEquation.call(this,t):void 0}});var ln=function(t,n,r,e){var i=v(n,t);-1!==i&&(n.splice(i,1),r.splice(i,1),e.splice(i,1))},fn=a({inherits:cn,constructor:function fn(t,n){fn.parent.constructor.call(this,t,n),this.hproperty=y(U[n]||n);var r=this;this.bSetTransitionCSS=function(t){r.setTransitionCSS(t)},this.bSetStyleCSS=function(t){r.setStyleCSS(t)},this.bComplete=function(){r.complete()}},start:function(t){if(this.stop(),0===this.duration)return this.cancel(t),this;var n=sn(this.node,this.property,t);return n?(this.to=n[1],this.cancelSetTransitionCSS=u(this.bSetTransitionCSS),this):(this.cancel(t),this)},setTransitionCSS:function(){delete this.cancelSetTransitionCSS,this.resetCSS(!0),this.cancelSetStyleCSS=u(this.bSetStyleCSS)},setStyleCSS:function(t){delete this.cancelSetStyleCSS;var n=this.duration;this.cancelComplete=setTimeout(this.bComplete,n),this.endTime=t+n,this.set(this.to)},complete:function(){delete this.cancelComplete,this.resetCSS(),this.callback(this.endTime)},stop:function(t){return this.cancelExit?(this.cancelExit(),delete this.cancelExit):this.cancelSetTransitionCSS?(this.cancelSetTransitionCSS(),delete this.cancelSetTransitionCSS):this.cancelSetStyleCSS?(this.cancelSetStyleCSS(),delete this.cancelSetStyleCSS,t&&this.resetCSS()):this.cancelComplete&&(clearTimeout(this.cancelComplete),delete this.cancelComplete,t&&(this.resetCSS(),this.set(this.get()))),this},resetCSS:function(t){var n=x(this.node),r=(n(rn+\"Property\").replace(/\\s+/g,\"\")||\"all\").split(\",\"),e=(n(rn+\"Duration\").replace(/\\s+/g,\"\")||\"0s\").split(\",\"),i=(n(rn+\"TimingFunction\").replace(/\\s+/g,\"\")||\"ease\").match(/cubic-bezier\\([\\d-.,]+\\)|([a-z-]+)/g);ln(\"all\",r,e,i),ln(this.hproperty,r,e,i),t&&(r.push(this.hproperty),e.push(this.duration+\"ms\"),i.push(\"cubic-bezier(\"+this.equation+\")\"));var o=this.node.style;o[rn+\"Property\"]=r,o[rn+\"Duration\"]=e,o[rn+\"TimingFunction\"]=i},parseEquation:function(t){return\"string\"==typeof t?fn.parent.parseEquation.call(this,t,!0):void 0}}),hn=rn?fn:an,pn=function(t,n){return\"function\"==typeof t?d(t):m(t,n)};m.implement({animate:function(t,n,r){var e=t,i=n;\"string\"==typeof t&&(e={},e[t]=n,i=r),null==i&&(i={});var o=typeof i;i=\"function\"===o?{callback:i}:\"string\"===o||\"number\"===o?{duration:i}:i;var u=i.callback||function(){},a=0,c=0;i.callback=function(t){++a===c&&u(t)};for(var l in e){var f=e[l],l=s(l);this.forEach(function(t){c++;var n=m(t),r=n._animations||(n._animations={}),e=r[l]||(r[l]=new hn(t,l));e.setOptions(i).start(f)})}return this},style:function(t,n){var r=t;\"string\"==typeof t&&(r={},r[t]=n);for(var e in r){var i=r[e],o=Z(e=s(e));this.forEach(function(t){var n,r=m(t),u=r._animations;u&&(n=u[e])&&n.stop(!0),o.call(t,i)})}return this},compute:function(t){t=s(t);var n=this[0];if(\"transform\"===t&&on)return x(n)(en);var r=$(t).call(n);return null!=r?r.replace(R,function(t,r,e){return\"px\"===e?t:E(n,e)*r+\"px\"}):\"\"}}),pn.parse=function(t,n,r){return(H[s(t)]||V)(n,r)},n.exports=pn},5:function(t,n){\"use strict\";var r=t(\"6\"),e=t(\"7\"),i=t(\"8\"),o=t(\"a\"),u=t(\"b\"),a=t(\"c\"),s=Object.defineProperty,c=Object.getOwnPropertyDescriptor;try{s({},\"~\",{}),c({},\"~\")}catch(l){s=null,c=null}var f=function(t,n,r){s(this,n,c(r,n)||{writable:!0,enumerable:!0,configurable:!0,value:t})},h=function(t,n){this[n]=t},p=function(t){return e(t,s?f:h,this.prototype),this},v=/^constructor|inherits|mixin$/,m=function(t){\"function\"===a(t)&&(t={constructor:t});var n=t.inherits,e=r(t,\"constructor\")?t.constructor:n?function(){return n.apply(this,arguments)}:function(){};if(n){i(e,n);var s=n.prototype,c=e.prototype=u(s);e.parent=s,c.constructor=e}e.implement||(e.implement=p);var l=t.mixin;if(l){\"array\"!==a(l)&&(l=[l]);for(var f=0;l.length>f;f++)e.implement(u(l[f].prototype))}return e.implement(o(t,function(t,n){return!n.match(v)}))};n.exports=m},6:function(t,n){\"use strict\";var r=Object.hasOwnProperty,e=function(t,n){return r.call(t,n)};n.exports=e},7:function(t,n){\"use strict\";var r=t(\"6\"),e=function(t,n,r){for(var e in t)if(n.call(r,t[e],e,t)===!1)break;return t};if(!{valueOf:0}.propertyIsEnumerable(\"valueOf\")){var i=\"constructor,toString,valueOf,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString\".split(\",\"),o=Object.prototype;e=function(t,n,e){for(var u in t)if(n.call(e,t[u],u,t)===!1)return t;for(var a=0;u=i[a];a++){var s=t[u];if((s!==o[u]||r(t,u))&&n.call(e,s,u,t)===!1)break}return t}}n.exports=e},8:function(t,n){\"use strict\";var r=t(\"9\"),e=function(t,n){this[n]=t},i=function(t){for(var n=1,i=arguments.length;i>n;n++)r(arguments[n],e,t);return t};n.exports=i},9:function(t,n){\"use strict\";var r=t(\"7\"),e=t(\"6\"),i=function(t,n,i){return r(t,function(r,o){return e(t,o)?n.call(i,r,o,t):void 0}),t};n.exports=i},a:function(t,n){\"use strict\";var r=t(\"7\"),e=function(t,n,e){var i={};return r(t,function(r,o){n.call(e,r,o,t)&&(i[o]=r)}),i};n.exports=e},b:function(t,n){\"use strict\";var r=function(t){var n=function(){};return n.prototype=t,new n};n.exports=r},c:function(t,n){\"use strict\";var r=Object.prototype.toString,e=/number|object|array|string|function|date|regexp|boolean/,i=function(t){if(null==t)return\"null\";var n=r.call(t).slice(8,-1).toLowerCase();return\"number\"===n&&isNaN(t)?\"null\":e.test(n)?n:\"object\"};n.exports=i},d:function(t,n){\"use strict\";var r=function(t){return(t+\"\").replace(/-\\D/g,function(t){return t.charAt(1).toUpperCase()})};n.exports=r},e:function(t,n){\"use strict\";var r=t(\"f\"),e=function(t){return r((t+\"\").replace(/\\s+/g,\" \"))};n.exports=e},f:function(t,n){\"use strict\";var r=function(t){return(t+\"\").replace(/^\\s+|\\s+$/g,\"\")};n.exports=r},g:function(t,n){\"use strict\";var r=function(t){return(t+\"\").replace(/\\b[a-z]/g,function(t){return t.toUpperCase()})};n.exports=r},h:function(t,n){\"use strict\";var r=function(t){return(t+\"\").replace(/[A-Z]/g,function(t){return\"-\"+t.toLowerCase()})};n.exports=r},i:function(t,n){\"use strict\";var r=function(t,n,r){for(var e=t.length>>>0,i=Array(e),o=0,u=e;u>o;o++)i[o]=n.call(r,t[o],o,t);return i};n.exports=r},j:function(t,n){\"use strict\";var r=function(t,n,r){for(var e=0,i=t.length>>>0;i>e&&n.call(r,t[e],e,t)!==!1;e++);return t};n.exports=r},k:function(t,n,r,e){\"use strict\";var i=t(\"5\"),o=t(\"j\"),u=t(\"i\"),a=t(\"l\"),s=t(\"m\"),c=t(\"n\"),l=0,f=function(t){return t===e?\"global\":t.uniqueNumber||(t.uniqueNumber=\"n:\"+(l++).toString(36))},h={},p=i({constructor:function p(t,n){if(null==t)return this&&this.constructor===p?new v:null;var r=t;if(t.constructor!==v){r=new v;var i;if(\"string\"==typeof t)return r.search?(r[r.length++]=n||document,r.search(t)):null;if(t.nodeType||t===e)r[r.length++]=t;else if(t.length)for(var o={},u=0,a=t.length;a>u;u++){var s=p(t[u],n);if(s&&s.length)for(var c=0,l=s.length;l>c;c++){var m=s[c];i=f(m),o[i]||(r[r.length++]=m,o[i]=!0)}}}return r.length?1===r.length?(i=f(r[0]),h[i]||(h[i]=r)):r:null}}),v=i({inherits:p,constructor:function v(){this.length=0},unlink:function(){return this.map(function(t){return delete h[f(t)],t})},forEach:function(t,n){return o(this,t,n)},map:function(t,n){return u(this,t,n)},filter:function(t,n){return a(this,t,n)},every:function(t,n){return s(this,t,n)},some:function(t,n){return c(this,t,n)}});n.exports=p},l:function(t,n){\"use strict\";var r=function(t,n,r){for(var e=[],i=0,o=t.length>>>0;o>i;i++){var u=t[i];n.call(r,u,i,t)&&e.push(u)}return e};n.exports=r},m:function(t,n){\"use strict\";var r=function(t,n,r){for(var e=0,i=t.length>>>0;i>e;e++)if(!n.call(r,t[e],e,t))return!1;return!0};n.exports=r},n:function(t,n){\"use strict\";var r=function(t,n,r){for(var e=0,i=t.length>>>0;i>e;e++)if(n.call(r,t[e],e,t))return!0;return!1};n.exports=r},o:function(t,n){\"use strict\";var r=t(\"5\"),e=t(\"2\").request,i=t(\"p\"),o=t(\"i\"),u=\"([\\\\d.]+)(s|ms)?\",a=\"cubic-bezier\\\\(([-.\\\\d]+),([-.\\\\d]+),([-.\\\\d]+),([-.\\\\d]+)\\\\)\",s=RegExp(u),c=RegExp(a);RegExp(a,\"g\");var l={\"default\":\"cubic-bezier(0.25, 0.1, 0.25, 1.0)\",linear:\"cubic-bezier(0, 0, 1, 1)\",\"ease-in\":\"cubic-bezier(0.42, 0, 1.0, 1.0)\",\"ease-out\":\"cubic-bezier(0, 0, 0.58, 1.0)\",\"ease-in-out\":\"cubic-bezier(0.42, 0, 0.58, 1.0)\"};l.ease=l[\"default\"];var f=function(t,n,r){return(n-t)*r+t},h=function(t){var n=[],r=(t+\"\").replace(/[-.\\d]+/g,function(t){return n.push(+t),\"@\"});return[n,r]},p=r({constructor:function p(t,n){this.setOptions(n),this.render=t||function(){};var r=this;this.bStep=function(t){return r.step(t)},this.bExit=function(t){r.exit(t)}},setOptions:function(t){if(null==t&&(t={}),!(this.duration=this.parseDuration(t.duration||\"500ms\")))throw Error(\"invalid duration\");if(!(this.equation=this.parseEquation(t.equation||\"default\")))throw Error(\"invalid equation\");return this.callback=t.callback||function(){},this},parseDuration:function(t){if(t=(t+\"\").match(s)){var n=+t[1],r=t[2]||\"ms\";if(\"s\"===r)return 1e3*n;if(\"ms\"===r)return n}},parseEquation:function(t,n){var r=typeof t;if(\"function\"===r)return t;if(\"string\"===r){t=l[t]||t;var e=t.replace(/\\s+/g,\"\").match(c);if(e){if(t=o(e.slice(1),function(t){return+t}),n)return t;if(\"0,0,1,1\"==\"\"+t)return function(t){return t};r=\"object\"}}return\"object\"===r?i(t[0],t[1],t[2],t[3],1e3/60/this.duration/4):void 0},cancel:function(t){this.to=t,this.cancelExit=e(this.bExit)},exit:function(t){this.render(this.to),delete this.cancelExit,this.callback(t)},start:function(t,n){if(this.stop(),0===this.duration)return this.cancel(n),this;this.isArray=!1,this.isNumber=!1;var r=typeof t,i=typeof n;\"object\"===r&&\"object\"===i?this.isArray=!0:\"number\"===r&&\"number\"===i&&(this.isNumber=!0);var o=h(t),u=h(n);return this.from=o[0],this.to=u[0],this.templateFrom=o[1],this.templateTo=u[1],this.from.length!==this.to.length||\"\"+this.from==\"\"+this.to?(this.cancel(n),this):(delete this.time,this.length=this.from.length,this.cancelStep=e(this.bStep),this)},stop:function(){return this.cancelExit?(this.cancelExit(),delete this.cancelExit):this.cancelStep&&(this.cancelStep(),delete this.cancelStep),this},step:function(t){this.time||(this.time=t);var n=(t-this.time)/this.duration;n>1&&(n=1);for(var r=this.equation(n),i=this.from,o=this.to,u=this.templateTo,a=0,s=this.length;s>a;a++){var c=i[a],l=o[a];u=u.replace(\"@\",l!==c?f(c,l,r):l)}this.render(this.isArray?u.split(\",\"):this.isNumber?+u:u,n),1!==n?this.cancelStep=e(this.bStep):(delete this.cancelStep,this.callback(t))}}),v=function(t){var n=new p(t);return{start:function(t,r,e){var i=typeof e;return n.setOptions(\"function\"===i?{callback:e}:\"string\"===i||\"number\"===i?{duration:e}:e).start(t,r),this},stop:function(){return n.stop(),this}}};v.prototype=p.prototype,n.exports=v},p:function(t,n){n.exports=function(t,n,r,e,i){var o=function(n){var e=1-n;return 3*e*e*n*t+3*e*n*n*r+n*n*n},u=function(t){var r=1-t;return 3*r*r*t*n+3*r*t*t*e+t*t*t},a=function(n){var e=1-n;return 3*(2*(n-1)*n+e*e)*t+3*(-n*n*n+2*e*n)*r};return function(t){var n,r,e,s,c,l,f=t;for(e=f,l=0;8>l;l++){if(s=o(e)-f,i>Math.abs(s))return u(e);if(c=a(e),1e-6>Math.abs(c))break;e-=s/c}if(n=0,r=1,e=f,n>e)return u(n);if(e>r)return u(r);for(;r>n;){if(s=o(e),i>Math.abs(s-f))return u(e);f>s?n=e:r=e,e=.5*(r-n)+n}return u(e)}}},q:function(t,n){\"use strict\";var r=function(t){return Math.sqrt(t[0]*t[0]+t[1]*t[1])},e=function(t){var n=r(t);return n?[t[0]/n,t[1]/n]:[0,0]},i=function(t,n){return t[0]*n[0]+t[1]*n[1]},o=Math.atan2,u=function(t,n,r,e){return[r*t[0]+e*n[0],r*t[1]+e*n[1]]};n.exports=function(t,n,a,s,c,l){if(0===t*s-n*a)return!1;var f=[c,l],h=[[t,n],[a,s]],p=[r(h[0])];h[0]=e(h[0]);var v=i(h[0],h[1]);h[1]=u(h[1],h[0],1,-v),p[1]=r(h[1]),v/=p[1];var m=o(h[0][1],h[0][0]);return[f,m,v,p]}}});\n//@ sourceMappingURL=moofx.map\n;\ndefine(\"qui/lib/moofx\", function(){});\n\n","/**\n * A Tool / Tabbar\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @requires controls/Control\n * @requires controls/contextmenu/Item\n * @requires controls/buttons/Button\n *\n * @module controls/toolbar/Bar\n * @class qui/controls/toolbar/Bar\n * @package com.pcsg.qui.js.controls.toolbar\n *\n * @event onClear [ this ]\n * @event onAppendChild [ this, Itm ]\n */\n\ndefine('qui/controls/toolbar/Bar', [\n\n    'qui/controls/Control',\n    'qui/controls/contextmenu/Menu',\n    'qui/controls/contextmenu/Item',\n    'qui/controls/buttons/Button',\n    'qui/lib/moofx',\n\n    'css!qui/controls/toolbar/Bar.css'\n\n], function(Control, ContextMenu, ContextMenuItem, Button)\n{\n    \"use strict\";\n\n    /**\n     * @class qui/controls/toolbar/Bar\n     *\n     * @param {Object} options\n     *\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : Control,\n        Type    : 'qui/controls/toolbar/Bar',\n\n        options : {\n            'menu-button' : true,\n            'slide'       : true,\n\n            'width' : false,\n            'type'  : 'tabbar'\n        },\n\n        initialize : function(options)\n        {\n            this.Fx   = null;\n            this.$Elm = null;\n            this.Tabs = null;\n            this.Menu = null;\n\n            this.Container = null;\n            this.Active    = null;\n            this.BtnLeft   = null;\n            this.BtnRight  = null;\n\n            this.items = [];\n            this.btns  = [];\n\n            this.parent( options );\n        },\n\n        /**\n         * Destroy the Bar\n         *\n         * @method qui/controls/toolbar/Bar#destroy\n         */\n        destroy : function()\n        {\n            var i, len;\n\n            for ( i = 0, len = this.items.length; i < len; i++ ) {\n                this.items[i].destroy();\n            }\n\n            for ( i = 0, len = this.btns.length; i < len; i++ ) {\n                this.btns[i].destroy();\n            }\n\n            this.items = [];\n            this.btns  = [];\n\n            if ( this.$Elm ) {\n                this.$Elm.destroy();\n            }\n\n            if ( this.BtnLeft ) {\n                this.BtnLeft.destroy();\n            }\n\n            if ( this.BtnRight ) {\n                this.BtnRight.destroy();\n            }\n\n            if ( this.Menu ) {\n                this.Menu.destroy();\n            }\n\n            this.Fx   = null;\n            this.$Elm = null;\n            this.Tabs = null;\n            this.Menu = null;\n\n            this.Container = null;\n            this.Active    = null;\n            this.BtnLeft   = null;\n            this.BtnRight  = null;\n        },\n\n        /**\n         * Refresh the Bar\n         *\n         * @method qui/controls/toolbar/Bar#refresh\n         * @return {this}\n         */\n        refresh : function()\n        {\n            if ( !this.$Elm ) {\n                return this;\n            }\n\n            var i, len, Itm;\n\n            var items = this.items,\n                width = 0;\n\n            // items create\n\n            this.Tabs.set( 'html', '' );\n\n            for ( i = 0, len = items.length; i < len; i++ )\n            {\n                Itm = items[i];\n                Itm.inject( this.Tabs );\n\n                this.Menu.appendChild(\n                    this.$addContextMenuItm( Itm )\n                );\n            }\n\n            if ( this.getAttribute( 'menu-button' ) === true )\n            {\n                this.Menu.show();\n            } else\n            {\n                this.Menu.hide();\n            }\n\n            if ( this.getAttribute( 'slide' ) === true )\n            {\n                this.BtnLeft.show();\n                this.BtnRight.show();\n            } else\n            {\n                this.BtnLeft.hide();\n                this.BtnRight.hide();\n            }\n\n            this.resize();\n\n            return this;\n        },\n\n        /**\n         * Create the DOMNode for the Bar\n         *\n         * @method qui/controls/toolbar/Bar#create\n         * @return {DOMNode}\n         */\n        create : function()\n        {\n            if ( this.$Elm )\n            {\n                this.refresh();\n\n                return this.$Elm;\n            }\n\n\n            this.$Elm = new Element('div', {\n                'class'      : 'qui-toolbar',\n                'data-quiid' : this.getId(),\n\n                'html' : '<div class=\"qui-toolbar-container\">' +\n                    '<div class=\"qui-toolbar-tabs\"></div>' +\n                '</div>'\n            });\n\n            if ( this.getAttribute( 'styles' ) ) {\n                this.$Elm.setStyles( this.getAttribute( 'styles' ) );\n            }\n\n\n            this.Tabs      = this.$Elm.getElement( '.qui-toolbar-tabs' );\n            this.Container = this.$Elm.getElement( '.qui-toolbar-container' );\n\n            var items = this.items,\n                width = 0;\n\n            // left / right\n            this.BtnLeft = new Button({\n                name    : 'toLeft',\n                'class' : 'qui-toolbar-button icon-chevron-left',\n                events  :\n                {\n                    onClick : function(Btn) {\n                        Btn.getAttribute( 'Toolbar' ).toLeft();\n                    }\n                },\n                Toolbar : this\n            });\n\n            this.BtnRight = new Button({\n                name    : 'toRight',\n                'class' : 'qui-toolbar-button icon-chevron-right',\n                events  :\n                {\n                    onClick : function(Btn) {\n                        Btn.getAttribute( 'Toolbar' ).toRight();\n                    }\n                },\n                Toolbar : this\n            });\n\n            // create the left context menu\n            this.Menu = new Button({\n                'class' : 'qui-toolbar-button icon-chevron-down'\n            });\n\n            this.Menu.setParent( this );\n            this.Menu.inject( this.$Elm, 'top' );\n\n            // create the slide buttons\n            this.BtnLeft.inject( this.$Elm, 'top' );\n            this.BtnRight.inject( this.$Elm );\n\n            this.Tabs.setStyles({\n                position : 'relative',\n                left     : 0,\n                'float'  : 'left'\n            });\n\n            this.refresh();\n\n            this.Fx = moofx( this.Tabs );\n\n            return this.$Elm;\n        },\n\n        /**\n         * Clear the whole bar and destroys the children\n         *\n         * @method qui/controls/toolbar/Bar#clear\n         * @return {this}\n         */\n        clear : function()\n        {\n            if ( !this.Tabs )\n            {\n                this.fireEvent( 'clear', [ this ] );\n\n                return this;\n            }\n\n            var i, len;\n\n            for ( i = 0, len = this.items.length; i < len; i++ ) {\n                this.items[ i ].destroy();\n            }\n\n            for ( i = 0, len = this.btns.length; i < len; i++ ) {\n                this.btns[ i ].destroy();\n            }\n\n            this.Tabs.set( 'html', '' );\n\n            delete this.items;\n            delete this.Active;\n\n            this.items  = [];\n            this.btns   = [];\n            this.Active = null;\n\n\n            if ( this.Menu )\n            {\n                this.Menu.clear();\n                this.Menu.setDisable();\n            }\n\n            if ( this.moveLeft ) {\n                this.moveLeft.setDisable();\n            }\n\n            if ( this.moveRight ) {\n                this.moveRight.setDisable();\n            }\n\n            this.Tabs.setStyle( 'left', 0 );\n            this.fireEvent( 'clear', [ this ] );\n\n            return this;\n        },\n\n        /**\n         * Hide the Bar\n         *\n         * @method qui/controls/toolbar/Bar#hide\n         * @return {this}\n         */\n        hide : function()\n        {\n            this.$Elm.setStyles({\n                'height'   : 0,\n                'overflow' : 'hidden'\n            });\n\n            return this;\n        },\n\n        /**\n         * Show the Bar\n         *\n         * @method qui/controls/toolbar/Bar#show\n         * @return {this}\n         */\n        show : function()\n        {\n            this.$Elm.setStyle( 'height', null );\n            this.$Elm.setStyle( 'overflow', null );\n\n            return this;\n        },\n\n        /**\n         * Scrolls the bar to the right\n         *\n         * @method qui/controls/toolbar/Bar#toLeft\n         * @return {this}\n         */\n        toLeft : function()\n        {\n            if ( !this.Fx ) {\n                return;\n            }\n\n            //this.Fx.stop();\n            this.Fx.animate({\n                left : 0\n            });\n\n            return this;\n        },\n\n        /**\n         * Scrolls the bar to the right\n         *\n         * @method qui/controls/toolbar/Bar#toRight\n         * @return {this}\n         */\n        toRight : function()\n        {\n            // this.Fx.stop();\n\n            var left = this.Tabs.offsetLeft - 150;\n\n            if ( left < ((this.Tabs.offsetWidth-150) * -1) ) {\n                left = 0;\n            }\n\n            this.Fx.animate({\n                left : left\n            });\n\n            return this;\n        },\n\n        /**\n         * Scroll to a specific tab\n         *\n         * @method qui/controls/toolbar/Bar#toTab\n         *\n         * @param {qui/controls/toolbar/Tab} Tab\n         * @return {this}\n         */\n        toTab : function(Tab)\n        {\n            if ( this.getAttribute( 'slide' ) === false ) {\n                return this;\n            }\n\n            if ( !this.$Elm ) {\n                return this;\n            }\n\n            // this.Fx.stop();\n\n            if ( Tab == this.firstChild() )\n            {\n                this.Fx.animate({\n                    left : 0\n                });\n\n                return this;\n            }\n\n            var needle;\n\n            var TabElm    = Tab.getElm(),\n                Container = this.$Elm.getElement( '.qui-toolbar-container' ),\n                Tabs      = this.$Elm.getElement( '.qui-toolbar-tabs' ),\n\n                left      = Tabs.getStyle( 'left' ).toInt() + Tab.getElm().offsetLeft,\n                pos       = Tab.getElm().offsetLeft + Tab.getElm().offsetWidth;\n\n            if ( left < 0 )\n            {\n                this.Fx.animate({\n                    left : Tabs.getStyle('left').toInt() + ( left*-1 ) + 20\n                });\n\n                return this;\n            }\n\n            // verschieben nach links\n            if ( pos > Container.offsetWidth )\n            {\n                needle = pos - Container.offsetWidth;\n\n                this.Fx.animate({\n                    left : (needle + 20) * -1\n                });\n\n                return this;\n            }\n\n            return this;\n        },\n\n        /**\n         * Get the first children\n         *\n         * @method qui/controls/toolbar/Bar#firstChild\n         * @return {qui/controls/Control}\n         */\n        firstChild : function()\n        {\n            return this.items[ 0 ];\n        },\n\n        /**\n         * Get the last child\n         *\n         * @method qui/controls/toolbar/Bar#lastChild\n         * @return {qui/controls/Control}\n         */\n        lastChild : function()\n        {\n            return this.items[ this.items.length - 1 ];\n        },\n\n        /**\n         * Return all children\n         *\n         * @method qui/controls/toolbar/Bar#getChildren\n         *\n         * @param {String} name - [optional] name of the wanted Element\n         *                        if no name given, all children will be return\n         * @return {Array}\n         */\n        getChildren : function(name)\n        {\n            if ( typeof name !== 'undefined' ) {\n                return this.getElement( name );\n            }\n\n            return this.items;\n        },\n\n        /**\n         * Number of children in the toolbar\n         *\n         * @method qui/controls/toolbar/Bar#count\n         * @return {Integer}\n         */\n        count : function()\n        {\n            return this.items.length;\n        },\n\n        /**\n         * Remove a child from the toolbar\n         *\n         * @method qui/controls/toolbar/Bar#removeChild\n         * @param {qui/controls/Control} Child\n         * @return {this}\n         */\n        removeChild : function(Child)\n        {\n            var i, len;\n\n            var nitms     = [],\n                itms      = this.items,\n                childname = Child.getAttribute( 'name' );\n\n            for ( i = 0, len = itms.length; i < len; i++ )\n            {\n                if ( itms[ i ].getAttribute( 'name' ) != childname )\n                {\n                    nitms.push( itms[ i ] );\n                    continue;\n                }\n\n                itms[ i ].destroy();\n            }\n\n            this.items = nitms;\n\n            return this;\n        },\n\n        /**\n         * Move an child to another position\n         *\n         * @method qui/controls/toolbar/Bar#moveChildToPos\n         *\n         * @param {qui/controls/Control} Child - Item in the toolbar\n         * @param {Integer} pos   - New position\n         *\n         * @return {this}\n         */\n        moveChildToPos : function(Child, pos)\n        {\n            // Array anpassen\n            var Before = false,\n                nitems = [],\n                itms   = this.items;\n\n            for ( var i = 0, len = itms.length; i < len; i++ )\n            {\n                if ( Child == itms[ i ] )\n                {\n                    itms[ i ].destroy();\n                    continue;\n                }\n\n                nitems.push( itms[ i ] );\n            }\n\n            nitems.splice(pos-1, 0, Child);\n\n            // Element nach dem davor schieben\n            if ( pos-2 >= 0 ) {\n                nitems[ pos-2 ].getElm().inject( Child.create(), 'after' );\n            }\n\n            this.items = nitems;\n\n            return this;\n        },\n\n        /**\n         * Get an Element by name\n         *\n         * @method qui/controls/toolbar/Bar#getElement\n         *\n         * @param {String} name - name of the wanted Element\n         * @return {null|qui/controls/Control}\n         */\n        getElement : function(name)\n        {\n            var i, len;\n            var items = this.items;\n\n            for ( i = 0, len = items.length; i < len; i++ )\n            {\n                if ( items[ i ] &&\n                     items[ i ].getAttribute( 'name' ) == name )\n                {\n                    return items[ i ];\n                }\n            }\n\n            return null;\n        },\n\n        /**\n         * Add an Child to the toolbar\n         *\n         * @method qui/controls/toolbar/Bar#appendChild\n         *\n         * @param {\n         *         qui/controls/buttons/Button|\n         *         qui/controls/buttons/Seperator|\n         *         qui/controls/toolbar/Tab\n         * } Itm\n         * @return {this}\n         */\n        appendChild : function(Itm)\n        {\n            if ( typeof Itm === 'undefined' ) {\n                return this;\n            }\n\n            var self = this,\n                type = typeOf( Itm );\n\n            switch ( type )\n            {\n                case 'qui/controls/buttons/Button':\n                case 'qui/controls/buttons/Select':\n                case 'qui/controls/buttons/Seperator':\n                case 'qui/controls/toolbar/Tab':\n                    // nothing\n                break;\n\n                case 'element':\n                    Itm.inject( this.Tabs );\n                    return this;\n                break;\n\n                default:\n                    return this;\n            }\n\n            Itm.setParent( this );\n\n            if ( type == 'qui/controls/toolbar/Tab' )\n            {\n                Itm.addEvent('click', function(Item) {\n                    self.toTab( Item );\n                });\n            }\n\n\n            this.fireEvent( 'appendChild', [ this, Itm ] );\n\n            // Falls Toolbar eine Tabbar ist, Buttons an vorletzter Stelle\n            if ( this.getAttribute( 'type' ) === 'tabbar' &&\n                 Itm.getType() === 'qui/controls/buttons/Button' )\n            {\n                this.btns.push( Itm );\n\n                Itm.inject( this.BtnRight.getElm(), 'before' );\n\n                var Con = this.Container,\n                    Btn = Itm.getElm();\n\n                Con.setStyle(\n                    'width',\n                    Con.getStyle('width').toInt() - Btn.getSize().x\n                );\n\n                return this;\n            }\n\n            // start the normal toolbar\n            this.items.push( Itm );\n\n            if ( !this.$Elm ) {\n                return this;\n            }\n\n            Itm.inject( this.Tabs );\n\n            if ( this.Menu )\n            {\n                this.Menu.appendChild(\n                    this.$addContextMenuItm( Itm )\n                );\n            }\n\n            // neue Breite berechnen\n            this.resize();\n\n            if ( this.Menu ) {\n                this.Menu.setEnable();\n            }\n\n            if ( this.BtnLeft ) {\n                this.BtnLeft.setEnable();\n            }\n\n            if ( this.BtnRight ) {\n                this.BtnRight.setEnable();\n            }\n\n            return this;\n        },\n\n        /**\n         * Set an toolbar child active\n         *\n         * @method qui/controls/toolbar/Bar#setItemActive\n         * @param {qui/controls/toolbar/Tab} Child\n         * @return {this}\n         */\n        setItemActive : function(Child)\n        {\n            if ( this.Active )\n            {\n                this.Active.leave();\n                this.Active.setNormal();\n\n                if ( this.Active.getAttribute('ContextMenuItem') ) {\n                    this.Active.getAttribute('ContextMenuItem').getElm().setStyle('fontWeight', '');\n                }\n            }\n\n            this.Active = Child;\n            this.Active.setActive();\n\n            if ( this.Active.getAttribute('ContextMenuItem') ) {\n                this.Active.getAttribute('ContextMenuItem').getElm().setStyle('fontWeight', 'bold');\n            }\n\n            return this;\n        },\n\n        /**\n         * Returns the active child\n         *\n         * @method qui/controls/toolbar/Bar#getActive\n         * @return {null|qui/controls/Control}\n         */\n        getActive : function()\n        {\n            return this.Active;\n        },\n\n        /**\n         * Resize the whole toolbar\n         *\n         * @method qui/controls/toolbar/Bar#resize\n         * @return {this}\n         */\n        resize : function()\n        {\n            // tab width\n            var i, len;\n\n            var width  = 0,\n                cwidth = 0,\n                itms   = this.Tabs.getChildren();\n\n            for ( i = 0, len = itms.length; i < len; i++ ) {\n                width = width + ( itms[ i ].getSize().x.toInt() ) + 30;\n            }\n\n            if ( this.getAttribute( 'width' ) &&\n                 this.getAttribute( 'width' ).toString().contains( '%' ) === false )\n            {\n                cwidth = ( this.getAttribute( 'width' ) ).toInt();\n\n                if ( this.getAttribute( 'slide' ) )\n                {\n                    cwidth = cwidth -\n                             this.BtnLeft.getElm().getComputedSize().totalWidth -\n                             this.BtnRight.getElm().getComputedSize().totalWidth;\n                }\n\n                if ( this.getAttribute( 'menu-button' ) ) {\n                    cwidth = cwidth - this.Menu.getElm().getComputedSize().totalWidth;\n                }\n\n            } else\n            {\n                cwidth = '100%';\n            }\n\n            this.Tabs.setStyle( 'width', width );\n            this.Container.setStyle( 'width', cwidth );\n\n            this.getElm().setStyle( 'width', this.getAttribute( 'width' ) );\n\n            return this;\n        },\n\n        /**\n         * Add a ContextMenuItem for a child to the toolbar\n         *\n         * @method qui/controls/toolbar/Bar#$addContextMenuItm\n         * @return {qui/controls/contextmenu/Item}\n         * @ignore\n         */\n        $addContextMenuItm : function(Itm)\n        {\n            var MenuItem = new ContextMenuItem(\n                Itm.getAttributes()\n            );\n\n            MenuItem.setAttribute( 'TAB', Itm );\n            MenuItem.setAttribute( 'Toolbar', this );\n\n            Itm.setAttribute( 'ContextMenuItem', MenuItem );\n\n            MenuItem.addEvent('onMouseDown', function(Itm, event)\n            {\n                var Tab     = Itm.getAttribute( 'TAB' ),\n                    Toolbar = Itm.getAttribute( 'Toolbar' );\n\n                Tab.click();\n                Toolbar.toTab( Tab );\n            });\n\n            return MenuItem;\n        }\n    });\n});\n\n","/**\n * Button Seperator\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @requires qui/controls/Control\n * @module qui/controls/buttons/Seperator\n * @package com.pcsg.qui.js.controls.buttons\n *\n * @event onResize [this]\n * @event onCreate [this]\n */\n\ndefine('qui/controls/buttons/Seperator', [\n\n    'qui/controls/Control'\n\n], function(Control)\n{\n    \"use strict\";\n\n    /**\n     * @class qui/controls/buttons/Seperator\n     *\n     * @param {Object} options\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : Control,\n        Type    : 'qui/controls/buttons/Seperator',\n\n        options : {\n            height : false\n        },\n\n        initialize : function(options)\n        {\n            this.parent( options );\n\n            // Events\n            this.addEvent('resize', function(Toolbar)\n            {\n                var Elm = this.getElm();\n\n                if ( Elm && Elm.getParent() ) {\n                    Elm.setStyle( 'height', Elm.getParent().getSize().y );\n                }\n            });\n        },\n\n        /**\n         * Create the DOMNode\n         *\n         * @method qui/controls/buttons/Seperator#create\n         * @return {DOMNode}\n         */\n        create : function()\n        {\n            this.$Elm = new Element('div.qui-buttons-seperator', {\n                'data-quiid' : this.getId()\n            });\n\n            if ( this.getAttribute( 'height' ) ) {\n                this.$Elm.setStyle( 'height', this.getAttribute( 'height' ) );\n            }\n\n            this.fireEvent( 'create', [ this ] );\n\n            return this.$Elm;\n        }\n    });\n});\n\n","/**\n * A panel Sheet\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @module controls/desktop/panels/Sheet\n * @package com.pcsg.qui.js.controls.desktop.panels\n *\n * @event onOpen [this]\n * @event onClose [this]\n */\n\ndefine('qui/controls/desktop/panels/Sheet', [\n\n    'qui/controls/Control',\n    'qui/controls/buttons/Button',\n\n    'css!qui/controls/desktop/panels/Sheet.css'\n\n], function(Control, Button)\n{\n    \"use strict\";\n\n    /**\n     * @class qui/controls/desktop/panels/Sheet\n     */\n    return new Class({\n\n        Extends : Control,\n        Type    : 'qui/controls/desktop/panels/Sheet',\n\n        Binds : [\n            '$fxComplete'\n        ],\n\n        options : {\n            styles : false\n        },\n\n        initialize: function(options)\n        {\n            this.parent( options );\n\n            this.$Elm     = null;\n            this.$Header  = null;\n            this.$Body    = null;\n            this.$Buttons = null;\n            this.$FX      = null;\n        },\n\n        /**\n         * Create the DOMNode Element of the Sheet\n         *\n         * @return {DOMNode}\n         */\n        create : function()\n        {\n            this.$Elm = new Element('div.qui-panel-sheet', {\n                'data-quiid' : this.getId(),\n\n                html : '<div class=\"qui-panel-sheet-header box\"></div>' +\n                       '<div class=\"qui-panel-sheet-body box\"></div>' +\n                       '<div class=\"qui-panel-sheet-btn-container box\">' +\n                            '<div class=\"qui-panel-sheet-buttons\"></div>' +\n                       '</div>',\n\n               styles : {\n                   visibility : 'hidden',\n                   display    : 'none'\n               }\n            });\n\n            if ( this.getAttribute('styles') ) {\n                this.$Elm.setStyles( this.getAttribute('styles') );\n            }\n\n            this.$Header  = this.$Elm.getElement( '.qui-panel-sheet-header' );\n            this.$Body    = this.$Elm.getElement( '.qui-panel-sheet-body' );\n            this.$Buttons = this.$Elm.getElement( '.qui-panel-sheet-btn-container' );\n\n            this.$Header.set( 'html', this.getAttribute( 'title' ) );\n\n            this.$FX = moofx( this.$Elm );\n\n            return this.$Elm;\n        },\n\n        /**\n         * Return the panel content\n         *\n         * @return {DOMNode|null}\n         */\n        getContent : function()\n        {\n            return this.$Body;\n        },\n\n        /**\n         * Return the panel content\n         *\n         * @return {DOMNode|null}\n         */\n        getBody : function()\n        {\n            return this.getContent();\n        },\n\n        /**\n         * Return the button container\n         *\n         * @return {DOMNode|null}\n         */\n        getButtons : function()\n        {\n            return this.$Buttons;\n        },\n\n        /**\n         * Add a button to the Sheet\n         *\n         * @param {qui/controls/buttons/Button|Object} Btn - QUI Button or QUI Button options\n         * @return {this}\n         */\n        addButton : function(Btn)\n        {\n            if ( typeOf( Btn ) !== 'qui/controls/buttons/Button' ) {\n                Btn = new Button( Btn );\n            }\n\n            var i, len, list;\n\n            var Container = this.getButtons().getElement( '.qui-panel-sheet-buttons' ),\n                width     = 0,\n                styles    = Btn.getAttributes( 'styles' ) || {};\n\n            styles.margin = '12px 5px';\n\n\n            Btn.setAttribute( 'styles', styles );\n            Btn.inject( Container );\n\n            list = Container.getElements( 'button' );\n\n            for ( i = 0, len = list.length; i < len; i++ ) {\n                width = width + list[ i ].getComputedSize().totalWidth;\n            }\n\n            Container.setStyle( 'width', width );\n        },\n\n        /**\n         * Show the panel sheet\n         *\n         * @return {this}\n         */\n        show : function()\n        {\n            var Elm     = this.getElm(),\n                Parent  = Elm.getParent(),\n                size    = Parent.getSize();\n\n            Elm.setStyles({\n                visibility : null,\n                left       : (size.x + 50) * -1,\n                height     : size.y\n            });\n\n            Elm.setStyle( 'display', null );\n\n\n            var button_size = this.getButtons().getSize(),\n                header_size = this.$Header.getSize();\n\n            this.getBody().setStyles({\n                height  : size.y - button_size.y - header_size.y,\n                width   : '100%',\n                'float' : 'left'\n            });\n\n            var CloseButton = new Button({\n                text : 'schließen / abbrechen',\n                textimage : 'icon-remove',\n                events : {\n                    onClick : this.hide.bind( this )\n                }\n            });\n\n            new Button({\n                icon : 'icon-remove',\n                styles : {\n                    'float' : 'right'\n                },\n                events : {\n                    onClick : this.hide.bind( this )\n                }\n            }).inject( this.$Header );\n\n            this.addButton( CloseButton );\n\n\n            this.$FX.animate({\n                left : 0\n            }, {\n                callback : this.$fxComplete\n            });\n\n            return this;\n        },\n\n        /**\n         * Hide the panel sheet\n         *\n         * @return {this}\n         */\n        hide : function()\n        {\n            var Elm    = this.getElm(),\n                Parent = Elm.getParent(),\n                size   = Parent.getSize();\n\n            this.$FX.animate({\n                left : (size.x + 50) * -1\n            }, {\n                callback : this.$fxComplete\n            });\n\n            return this;\n        },\n\n        /**\n         * fx complete action\n         * if panel is closed or opened\n         */\n        $fxComplete : function(Sheet)\n        {\n            if ( this.getElm().getStyle('left').toInt() >= 0 )\n            {\n                this.fireEvent( 'open', [ this ] );\n                return;\n            }\n\n            this.fireEvent( 'close', [ this ] );\n            this.destroy();\n        }\n    });\n});\n\n","/**\n * A breadcrumb bar\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @requires qui/controls/Control\n *\n * @module qui/controls/breadcrumb/Bar\n * @class qui/controls/breadcrumb/Bar\n * @package com.pcsg.qui.js.controls.breadcrumb\n */\n\ndefine('qui/controls/breadcrumb/Bar', [\n\n    'qui/controls/Control',\n\n    'css!qui/controls/breadcrumb/Bar.css'\n\n], function(Control)\n{\n    \"use strict\";\n\n    /**\n     * @class qui/controls/breadcrumb/Bar\n     * @desc Breadcrumb bar item - Parent object of all breadcrumb items\n     * @param {Object} options\n     *\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : Control,\n        Type    : 'qui/controls/breadcrumb/Bar',\n\n        options : {\n            width       : false,  // with of the bar\n            itemClasses : false,  // if the items should get some extra css classes\n                                  // can be an array or string\n            cssclass    : false   // extra css classes for the bar\n        },\n\n        initialize : function(options)\n        {\n            this.$items = [];\n            this.parent( options );\n        },\n\n        /**\n         * Create the DOMNode for the Bar\n         *\n         * @method qui/controls/breadcrumb/Bar#create\n         * @return {DOMNode}\n         */\n        create : function()\n        {\n            this.$Elm = new Element('div', {\n                'class'      : 'qui-breadcrumb box',\n                'data-quiid' : this.getId()\n            });\n\n            if ( this.getAttribute( 'width' ) ) {\n                this.$Elm.setStyle( 'width', this.getAttribute( 'width' ) );\n            }\n\n            if ( this.getAttribute( 'cssclass' ) ) {\n                this.$Elm.addClass( this.getAttribute( 'cssclass' ) );\n            }\n\n            return this.$Elm;\n        },\n\n        /**\n         * append a child to the end of the breadcrumb\n         *\n         * @method qui/controls/breadcrumb/Bar#appendChild\n         * @param {qui/controls/breadcrumb/Item} Item - breadcrumb item\n         * @return {this}\n         */\n        appendChild : function(Item)\n        {\n            if ( Item.getType() !== 'qui/controls/breadcrumb/Item' ) {\n                return this;\n            }\n\n            this.$items.push( Item );\n\n            Item.inject( this.getElm() );\n\n            if ( this.getAttribute( 'itemClasses' ) )\n            {\n                var cssclass = this.getAttribute( 'itemClasses' );\n\n                if ( typeOf( cssclass ) == 'array' ) {\n                    cssclass = cssclass.join( ' ' );\n                }\n\n                Item.getElm().addClass( cssclass );\n            }\n\n            return this;\n        },\n\n        /**\n         * Return the first child of the breadcrumb\n         *\n         * @method qui/controls/breadcrumb/Bar#firstChild\n         * @return {qui/controls/breadcrumb/Item|false}\n         */\n        firstChild : function()\n        {\n            if ( typeof this.$items[ 0 ] !== 'undefined' ) {\n                return this.$items[ 0 ];\n            }\n\n            return false;\n        },\n\n        /**\n         * Return the last child of the breadcrumb\n         *\n         * @method qui/controls/breadcrumb/Bar#lastChild\n         * @return {qui/controls/breadcrumb/Item|false}\n         */\n        lastChild : function()\n        {\n            return this.$items.getLast();\n        },\n\n        /**\n         * Return all children\n         *\n         * @method qui/controls/breadcrumb/Bar#getChildren\n         * @return {Array}\n         */\n        getChildren : function()\n        {\n            return this.$items;\n        },\n\n        /**\n         * Clears the complete breadcrumb\n         *\n         * @method qui/controls/breadcrumb/Bar#clear\n         */\n        clear : function()\n        {\n            for ( var i = 0, len = this.$items.length; i < len; i++ ) {\n                this.$items[i].destroy();\n            }\n\n            this.$items = [];\n        },\n\n        /**\n         * Resize the Breadcrumb with the new attributes\n         *\n         * @method qui/controls/breadcrumb/Bar#resize\n         */\n        resize : function()\n        {\n            if ( this.getAttribute( 'width' ) ) {\n                this.getElm().setStyle( 'width', this.getAttribute( 'width' ) );\n            }\n        }\n    });\n});\n\n","/**\n * A Panel\n * A Panel is like a container for apps.\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @module controls/desktop/Panel\n * @package com.pcsg.qui.js.controls.desktop\n *\n * @event onCreate [ this ]\n * @event onOpen [ this ]\n * @event onMinimize [ this ]\n * @event onRefresh [ this ]\n * @event onResize [ this ]\n * @event onDragDropStart [ this ]\n * @event dragDropComplete [ this ]\n * @event onDrag [ this, event, Element ]\n * @event onCategoryEnter [ this, Category ]\n * @event onCategoryLeave [ this, Category ]\n */\n\ndefine('qui/controls/desktop/Panel', [\n\n    'qui/QUI',\n    'qui/controls/Control',\n    'qui/controls/loader/Loader',\n    'qui/controls/toolbar/Bar',\n    'qui/controls/buttons/Seperator',\n    'qui/controls/buttons/Button',\n    'qui/controls/desktop/panels/Sheet',\n    'qui/controls/breadcrumb/Bar',\n    'qui/controls/contextmenu/Menu',\n    'qui/utils/Controls',\n\n    'css!qui/controls/desktop/Panel.css'\n\n], function(QUI, Control, Loader, Toolbar, Seperator, Button, PanelSheet, BreadcrumbBar, QUIContextmenu, Utils)\n{\n    \"use strict\";\n\n    /**\n     * @class qui/controls/desktop/Panel\n     *\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : Control,\n        Type    : 'qui/controls/desktop/Panel',\n\n        Binds : [\n            '$onDestroy',\n            '$onSetAttribute'\n        ],\n\n        options : {\n            name    : 'qui-desktop-panel',\n            content : false,\n\n            // header\n            header : true,      // true to create a panel header when panel is created\n            title  : false,     // the title inserted into the panel's header\n            icon   : false,\n\n            // footer\n            footer : false,     // true to create a panel footer when panel is created\n\n            // Style options:\n            height     : '100%',      // the desired height of the panel, if false, it use the parent height\n            'class'    : '',         // css class to add to the main panel div\n            scrollbars : true,       // true to allow scrollbars to be shown\n\n            // Other:\n            collapsible    : true,   // can the panel be collapsed\n            collapseFooter : true,   // collapse footer when panel is collapsed\n\n            closeable  : true, // can be the panel destroyed?\n            dragable   : true,  // is the panel dragable to another column?\n            breadcrumb : false,\n            toWindow   : false\n        },\n\n        initialize: function(options)\n        {\n            this.$uid = String.uniqueID();\n            this.parent( options );\n\n            this.Loader = new Loader();\n\n            this.$Elm     = null;\n            this.$Header  = null;\n            this.$Title   = null;\n            this.$Footer  = null;\n            this.$Content = null;\n\n            this.$Buttons     = null;\n            this.$Categories  = null;\n            this.$Breadcrumb  = null;\n            this.$ContextMenu = null;\n\n            this.$ButtonBar     = null;\n            this.$CategoryBar   = null;\n            this.$BreadcrumbBar = null;\n            this.$ActiveCat     = null;\n            this.$Dropable      = null;\n\n            this.addEvents({\n                onDestroy      : this.$onDestroy,\n                onSetAttribute : this.$onSetAttribute\n            });\n        },\n\n        /**\n         * Create the DOMNode Element for the panel\n         *\n         * @method qui/controls/desktop/Panel#create\n         * @return {DOMNode}\n         */\n        create : function()\n        {\n            if ( this.$Elm ) {\n                return this.$Elm;\n            }\n\n            var self = this;\n\n            this.$Elm = new Element('div', {\n                'data-quiid' : this.getId(),\n                'class' : 'qui-panel box',\n                tabindex : -1,\n\n                styles : {\n                    height : this.getAttribute('height'),\n                    outline : 'none',\n                    '-moz-outline': 'none'\n\n                },\n\n                html : '<div class=\"qui-panel-header box\"></div>' +\n                       '<div class=\"qui-panel-buttons box\"></div>' +\n                       '<div class=\"qui-panel-categories box\"></div>' +\n                       '<div class=\"qui-panel-content box\"></div>' +\n                       '<div class=\"qui-panel-footer box\"></div>'\n            });\n\n            this.Loader.inject( this.$Elm );\n\n            this.$Header     = this.$Elm.getElement( '.qui-panel-header' );\n            this.$Footer     = this.$Elm.getElement( '.qui-panel-footer' );\n            this.$Content    = this.$Elm.getElement( '.qui-panel-content' );\n            this.$Buttons    = this.$Elm.getElement( '.qui-panel-buttons' );\n            this.$Categories = this.$Elm.getElement( '.qui-panel-categories' );\n\n            if ( this.getAttribute( 'breadcrumb' ) )\n            {\n                this.$Breadcrumb = new Element('div', {\n                    'class' : 'qui-panel-breadcrumb box'\n                }).inject( this.$Buttons, 'after' );\n            }\n\n            if ( this.getAttribute( 'styles' ) ) {\n                this.$Elm.setStyles( this.getAttribute( 'styles' ) );\n            }\n\n            this.$Content.setStyle( 'display', null );\n            this.$Buttons.setStyle( 'display', 'none' );\n            this.$Categories.setStyle( 'display', 'none' );\n\n            if ( this.getAttribute( 'content' ) ) {\n                this.$Content.set( 'html', this.getAttribute('content') );\n            }\n\n            if ( this.getAttribute('collapsible') )\n            {\n                this.$Collaps = new Element('div', {\n                    'class' : 'qui-panel-collapse icon-chevron-down'\n                }).inject( this.$Header );\n\n                this.$Header.setStyle( 'cursor', 'pointer' );\n\n                this.$Header.addEvent('click', function() {\n                    self.toggle();\n                });\n            }\n\n            // drag & drop\n            if ( this.getAttribute('dragable') )\n            {\n                this.$Header.setStyle( 'cursor', 'move' );\n\n            }\n\n            // content params\n            this.$refresh();\n            this.fireEvent( 'create', [ this ] );\n\n            return this.$Elm;\n        },\n\n        /**\n         * Refresh the panel\n         *\n         * @method qui/controls/desktop/Panel#refresh\n         * @return {this}\n         */\n        refresh : function()\n        {\n            this.resize();\n            this.fireEvent( 'refresh', [ this ] );\n            this.$refresh();\n\n            return this;\n        },\n\n        /**\n         * Refresh helper\n         *\n         * @method qui/controls/desktop/Panel#$refresh\n         * @ignore\n         * @private\n         */\n        $refresh : function()\n        {\n            if ( !this.$Title )\n            {\n                this.$Icon = new Element( 'span.qui-panel-icon' ).inject(\n                    this.$Header\n                );\n\n                this.$Title = new Element( 'h2.qui-panel-title' ).inject(\n                    this.$Header\n                );\n            }\n\n            if ( this.getAttribute( 'title' ) ) {\n                this.$Title.set( 'html', this.getAttribute('title') );\n            }\n\n            if ( this.getAttribute( 'icon' ) )\n            {\n                var path = this.getAttribute( 'icon' );\n\n                if ( Utils.isFontAwesomeClass( path )  )\n                {\n                    var css = this.$Icon.className;\n                        css = css.replace(/\\bicon-\\S+/g, '');\n\n                    this.$Icon.className = css;\n                    this.$Icon.addClass( path );\n\n                } else\n                {\n                    new Element('img', {\n                        src : path\n                    }).inject( this.$Icon );\n                }\n            }\n        },\n\n        /**\n         * Execute a resize and repaint\n         *\n         * @method qui/controls/desktop/Panel#resize\n         * @return {this} self\n         */\n        resize : function()\n        {\n            if ( this.getAttribute( 'header' ) === false )\n            {\n                this.$Header.setStyle( 'display', 'none' );\n            } else\n            {\n                this.$Header.setStyle( 'display', null );\n            }\n\n            if ( this.getAttribute( 'footer' ) === false )\n            {\n                this.$Footer.setStyle( 'display', 'none' );\n            } else\n            {\n                this.$Footer.setStyle( 'display', null );\n            }\n\n            if ( this.getButtonBar().count() )\n            {\n                this.$Buttons.setStyle( 'display', null );\n            } else\n            {\n                this.$Buttons.setStyle( 'display', 'none' );\n            }\n\n\n            if ( this.isOpen() === false )\n            {\n                this.fireEvent( 'resize', [ this ] );\n                return this;\n            }\n\n\n            if ( this.getAttribute( 'styles' ) &&\n                 this.getAttribute( 'styles' ).height )\n            {\n                this.setAttribute(\n                    'height',\n                    this.getAttribute( 'styles' ).height\n                );\n            }\n\n            var content_height = this.getAttribute( 'height' ),\n                content_width  = this.$Elm.getSize().x,\n                overflow       = 'auto';\n\n            // height calc\n            if ( content_height.toString().match( '%' ) )\n            {\n                var Parent = this.$Elm.getParent() || document.body;\n\n                content_height = ( content_height ).toInt();\n                content_height = Parent.getSize().y * ( content_height / 100 );\n            }\n\n            content_height = content_height;\n\n            if ( this.getAttribute( 'breadcrumb' ) ) {\n                content_height = content_height;\n            }\n\n            content_height = content_height -\n                             this.$Buttons.getSize().y - 2 -\n                             this.$Footer.getSize().y - 1 -\n                             this.$Header.getSize().y;\n\n            if ( this.getAttribute( 'scrollbars' ) === false ) {\n                overflow = 'hidden';\n            }\n\n            // width calc\n            if ( this.$Categories.getSize().x )\n            {\n                content_width = content_width - this.$Categories.getSize().x;\n            } else\n            {\n                content_width = '100%';\n            }\n\n            // set proportions\n            this.$Content.setStyles({\n                overflow : overflow,\n                height   : content_height,\n                width    : content_width\n            });\n\n            this.$Elm.setStyle( 'height', this.getAttribute( 'height' ) );\n\n            if ( this.$ButtonBar ) {\n                this.$ButtonBar.resize();\n            }\n\n            this.fireEvent( 'resize', [ this ] );\n            return this;\n        },\n\n        /**\n         * Open the Panel\n         *\n         * @method qui/controls/desktop/Panel#open\n         * @return {this} self\n         */\n        open : function()\n        {\n            this.$Content.setStyle( 'display', null );\n            this.$Elm.setStyle( 'height', this.getAttribute( 'height' ) );\n            this.$Header.removeClass( 'qui-panel-close' );\n\n            if ( this.$Collaps )\n            {\n                this.$Collaps.removeClass( 'qui-panel-expand' );\n                this.$Collaps.removeClass( 'icon-chevron-right' );\n\n                this.$Collaps.addClass( 'qui-panel-collapse' );\n                this.$Collaps.addClass( 'icon-chevron-down' );\n            }\n\n            this.fireEvent( 'open', [ this ] );\n            this.resize();\n\n            return this;\n        },\n\n        /**\n         * Minimize / Collapse the panel\n         *\n         * @method qui/controls/desktop/Panel#minimize\n         * @return {this} self\n         */\n        minimize : function()\n        {\n            this.$Content.setStyle( 'display', 'none' );\n            this.$Footer.setStyle( 'display', 'none' );\n            this.$Buttons.setStyle( 'display', 'none' );\n\n            this.$Elm.setStyle( 'height', this.$Header.getSize().y );\n\n            this.$Collaps.removeClass( 'qui-panel-collapse' );\n            this.$Collaps.removeClass( 'icon-chevron-down' );\n\n            this.$Collaps.addClass( 'qui-panel-expand' );\n            this.$Collaps.addClass( 'icon-chevron-right' );\n\n            this.$Header.addClass( 'qui-panel-close' );\n\n            this.fireEvent( 'minimize', [ this ] );\n\n            return this;\n        },\n\n        /**\n         * Toggle the panel\n         * Close the panel if the panel is opened and open the panel if the panel is closed\n         *\n         * @method qui/controls/desktop/Panel#toggle\n         * @return {this} self\n         */\n        toggle : function()\n        {\n            if ( this.getAttribute( 'collapsible' ) === false ) {\n                return this;\n            }\n\n            if ( this.isOpen() )\n            {\n                this.minimize();\n            } else\n            {\n                this.open();\n            }\n\n            return this;\n        },\n\n        /**\n         * Is the Panel open?\n         *\n         * @method qui/controls/desktop/Panel#isOpen\n         * @return {Bool}\n         */\n        isOpen : function()\n        {\n            return this.$Content.getStyle( 'display' ) == 'none' ? false : true;\n        },\n\n        /**\n         * Highlight the column\n         *\n         * @return {this} self\n         */\n        highlight : function()\n        {\n            if ( !this.getElm() ) {\n                return this;\n            }\n\n            new Element( 'div.qui-panel-highlight' ).inject(\n                this.getElm()\n            );\n\n            return this;\n        },\n\n        /**\n         * Dehighlight the column\n         *\n         * @return {this} self\n         */\n        normalize : function()\n        {\n            if ( !this.getElm() ) {\n                return this;\n            }\n\n            this.getElm().getElements( '.qui-panel-highlight' ).destroy();\n\n            return this;\n        },\n\n        /**\n         * @depricated\n         */\n        getBody : function()\n        {\n            return this.getContent();\n        },\n\n        /**\n         * Return the Content ( Body ) DOMNode Element\n         *\n         * @method qui/controls/desktop/Panel#getBody\n         * @return {null|DOMNode}\n         */\n        getContent : function()\n        {\n            return this.$Content;\n        },\n\n        /**\n         * Set the Content\n         *\n         * @param {String} content - HTML String\n         * @return {this}\n         */\n        setContent : function(content)\n        {\n            this.$Content.set( 'html', content );\n\n            return this;\n        },\n\n        /**\n         * Return the Footer DOMNode Element\n         *\n         * @method qui/controls/desktop/Panel#getFooter\n         * @return {null|DOMNode}\n         */\n        getFooter : function()\n        {\n            return this.$Footer;\n        },\n\n        /**\n         * Set the Footer\n         *\n         * @param {String} content - HTML String\n         * @return {this}\n         */\n        setFooter : function(content)\n        {\n            this.$Footer.set( 'html', content );\n\n            return this;\n        },\n\n        /**\n         * Return the Title DOMNode Element\n         *\n         * @method qui/controls/desktop/Panel#getHeader\n         * @return {null|DOMNode}\n         */\n        getHeader : function()\n        {\n            return this.$Header;\n        },\n\n        /**\n         * Add an action button to the Panel\n         * This is a button top of the panel\n         *\n         * @method qui/controls/desktop/Panel#addButton\n         * @param {qui/controls/buttons/Buttons|qui/controls/buttons/Seperator|Object} Btn\n         * @return {this}\n         */\n        addButton : function(Btn)\n        {\n            if ( !QUI.Controls.isControl( Btn ) )\n            {\n                if ( Btn.type == 'seperator' ||\n                     Btn.type == 'QUI\\\\Controls\\\\Buttons\\\\Seperator' )\n                {\n                    Btn = new Seperator( Btn );\n                } else\n                {\n                    Btn = new Button( Btn );\n                }\n            }\n\n            this.getButtonBar().appendChild( Btn );\n\n            // if first children, then resize\n            if ( this.getButtonBar().count() == 1 ) {\n                this.resize();\n            }\n\n            return this;\n        },\n\n        /**\n         * Return the children\n         *\n         * @method @method qui/controls/desktop/Panel#getButtons\n         * @param {String} name - [optional] name of the wanted Element\n         *                        if no name given, all children will be return\n         * @return {Array}\n         */\n        getButtons : function(name)\n        {\n            if ( !this.$ButtonBar ) {\n                return [];\n            }\n\n            return this.$ButtonBar.getChildren( name );\n        },\n\n        /**\n         * Return the button bar of the pannel\n         *\n         * @method qui/controls/desktop/Panel#getButtonBar\n         * @return {qui/controls/toolbar/Bar}\n         */\n        getButtonBar : function()\n        {\n            if ( !this.$ButtonBar )\n            {\n                this.$Buttons.setStyle( 'display', null );\n\n                this.$ButtonBar = new Toolbar({\n                    slide : false,\n                    type  : 'buttons',\n                    'menu-button' : false\n                }).inject( this.$Buttons );\n            }\n\n            return this.$ButtonBar;\n        },\n\n        /**\n         * Add an category button to the Panel\n         * This is a button left of the panel\n         *\n         * @method qui/controls/desktop/Panel#addCategory\n         * @param {qui/controls/buttons/Buttons|Object} Btn\n         * @return {this} self\n         */\n        addCategory : function(Btn)\n        {\n            if ( typeof Btn.getType === 'undefined' )   {\n                Btn = new Button( Btn );\n            }\n\n            var self = this;\n\n            Btn.addEvents({\n\n                onClick : function(Btn)\n                {\n                    if ( self.$ActiveCat && self.$ActiveCat == Btn ) {\n                        return;\n                    }\n\n                    self.fireEvent( 'categoryLeave', [ self, self.$ActiveCat ] );\n\n                    Btn.setActive();\n                },\n\n                onActive : function(Btn)\n                {\n                    if ( self.$ActiveCat ) {\n                        self.$ActiveCat.setNormal();\n                    }\n\n                    self.$ActiveCat = Btn;\n                    self.fireEvent( 'categoryEnter', [ self, Btn ] );\n                }\n\n            });\n\n            this.getCategoryBar().appendChild( Btn );\n\n            return this;\n        },\n\n        /**\n         * Return a category children\n         *\n         * @method qui/controls/desktop/Panel#getCategory\n         * @param {String} name - [optional] name of the wanted Element\n         *                        if no name given, all children will be return\n         * @return {Array}\n         */\n        getCategory : function(name)\n        {\n            if ( !this.$CategoryBar ) {\n                return [];\n            }\n\n            return this.$CategoryBar.getChildren( name );\n        },\n\n        /**\n         * Return the Category bar object\n         *\n         * @method qui/controls/desktop/Panel#getCategoryBar\n         * @return {qui/controls/toolbar/Bar}\n         */\n        getCategoryBar : function()\n        {\n            if ( !this.$CategoryBar )\n            {\n                this.$Categories.setStyle( 'display', null );\n\n                this.$CategoryBar = new Toolbar({\n                    width : 190,\n                    slide : false,\n                    type  : 'buttons',\n                    'menu-button' : false,\n                    events :\n                    {\n                        onClear : function(Bar)\n                        {\n                            this.$ActiveCat = null;\n                        }.bind( this )\n                    }\n                }).inject( this.$Categories );\n            }\n\n            return this.$CategoryBar;\n        },\n\n        /**\n         * Return the active category\n         *\n         * @method qui/controls/desktop/Panel#getActiveCategory\n         * @return {qui/controls/buttons/Buttons}\n         */\n        getActiveCategory : function()\n        {\n            return this.$ActiveCat;\n        },\n\n        /**\n         * Return the Breacrumb bar object\n         *\n         * @method qui/controls/desktop/Panel#getBreadcrumb\n         * @return {qui/controls.breadcrumb.Bar}\n         */\n        getBreadcrumb : function()\n        {\n            if ( !this.$BreadcrumbBar )\n            {\n                this.$BreadcrumbBar = new BreadcrumbBar({\n                    name : 'panel-breadcrumb-' + this.getId()\n                }).inject( this.$Breadcrumb );\n            }\n\n            return this.$BreadcrumbBar;\n        },\n\n        /**\n         * Return the panel contextmenu\n         *\n         * @method qui/controls/desktop/Panel#getContextMenu\n         * @return {qui/controls/contextmenu/Menu}\n         */\n        getContextMenu : function()\n        {\n            if ( this.$ContextMenu ) {\n                return this.$ContextMenu;\n            }\n\n            // context menu\n            this.$ContextMenu = new QUIContextmenu({\n                title  : this.getAttribute( 'title' ),\n                events :\n                {\n                    blur : function(Menu) {\n                        Menu.hide();\n                    }\n                }\n            });\n\n            this.$ContextMenu.inject( document.body );\n\n            return this.$ContextMenu;\n        },\n\n        /**\n         * Create a sheet in the panel and open it\n         *\n         * @method qui/controls/desktop/Panel#createSheet\n         * @param {Object} options - [optional] Sheet options\n         * @return {qui/controls/panels/Sheet}\n         */\n        createSheet : function(options)\n        {\n            var Sheet = new PanelSheet( options ).inject(\n                this.$Elm\n            );\n\n            return Sheet;\n        },\n\n        /**\n         * Return the Dragable Object\n         *\n         * @param {Function} callback - Callback function( {DragDrop} )\n         */\n        $getDragable : function(callback)\n        {\n            var self = this;\n\n            if ( self.$Dropable )\n            {\n                callback( self.$Dropable );\n                return;\n            }\n\n            require(['qui/classes/utils/DragDrop'], function(DragDrop)\n            {\n                self.$Dropable = new DragDrop(self.$Header, {\n                    dropables : '.qui-panel-drop',\n                    cssClass  : 'radius5',\n                    styles    : {\n                        width  : 100,\n                        height : 150\n                    },\n                    events :\n                    {\n                        onStart : function(Dragable, Element, event)\n                        {\n                            self.fireEvent(\n                                'dragDropStart',\n                                [ self, Element, event ]\n                            );\n                        },\n\n                        onComplete : function()\n                        {\n                            self.fireEvent(\n                                'dragDropComplete',\n                                [ self ]\n                            );\n                        },\n\n                        onDrag : function(Dragable, Element, event) {\n                            self.fireEvent( 'drag', [ self, event ] );\n                        },\n\n                        onEnter : function(Dragable, Element, Dropable)\n                        {\n                            Dropable.highlight();\n                            // QUI.controls.Utils.highlight( Droppable );\n                        },\n\n                        onLeave : function(Dragable, Element, Dropable) {\n                            Dropable.highlight();\n                            //QUI.controls.Utils.normalize( Droppable );\n                        },\n\n                        onDrop : function(Dragable, Element, Dropable, event)\n                        {\n                            if ( !Dropable ) {\n                                return;\n                            }\n\n                            var quiid = Dropable.get( 'data-quiid' );\n\n                            if ( !quiid ) {\n                                return;\n                            }\n\n                            var Parent = QUI.Controls.getById( quiid );\n\n                            Parent.fireEvent( 'onDrop', [ self ] );\n\n                            /*\n\n                            var Parent = QUI.Controls.getById( quiid );\n\n                            Parent.normalize();\n                            Parent.appendChild( self );\n\n                            */\n                        }\n                    }\n                });\n\n                callback( self.$Dropable );\n            });\n        },\n\n        /**\n         * event : on setAttribute\n         *\n         * @param {String} attr - Attribute name\n         * @param {unknown} value . Value of the Attribute\n         */\n        $onSetAttribute : function(attr, value)\n        {\n            if ( attr == 'dragable' )\n            {\n                var self = this;\n\n                self.$getDragable(function(Dragable)\n                {\n                    if ( self.getAttribute( 'dragable' ) )\n                    {\n                        Dragable.enable();\n                        self.$Header.setStyle( 'cursor', 'move' );\n\n                        return;\n                    }\n\n                    Dragable.disable();\n                    self.$Header.setStyle( 'cursor', 'default' );\n                });\n\n                return;\n            }\n        },\n\n        /**\n         * Event: on panel destroy\n         *\n         * @method qui/controls/desktop/Panel#$onDestroy\n         */\n        $onDestroy : function()\n        {\n            var destroy = [\n                this.$Header,\n                this.$Title,\n                this.$Footer,\n                this.$Content,\n                this.$Buttons,\n                this.$ButtonBar,\n                this.$CategoryBar,\n                this.$ActiveCat,\n                this.$BreadcrumbBar,\n                this.$ContextMenu\n            ];\n\n            for ( var i = 0, len = destroy.length; i < len; i++ )\n            {\n                if ( destroy[ i ] && \"destroy\" in destroy[ i ] ) {\n                    destroy[ i ].destroy();\n                }\n            }\n        }\n    });\n});\n\n","/**\n * Column for panels\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @module qui/controls/desktop/Column\n * @package com.pcsg.qui.js.controls.desktop\n */\n\ndefine('qui/controls/desktop/Column', [\n\n    'qui/QUI',\n    'qui/controls/Control',\n    'qui/controls/contextmenu/Menu',\n    'qui/controls/contextmenu/Item',\n    'qui/controls/desktop/Panel',\n    'qui/controls/loader/Loader',\n    'qui/classes/utils/DragDrop',\n\n    'css!qui/controls/desktop/Column.css'\n\n], function(QUI, Control, Contextmenu, ContextmenuItem, Panel, Loader, QuiDragDrop)\n{\n    \"use strict\";\n\n    /**\n     * @class qui/controls/desktop/Column\n     * @event onCreate [this]\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : Control,\n        Type    : 'qui/controls/desktop/Column',\n\n        Binds : [\n            '$onDestroy',\n            '$onContextMenu',\n            '$onPanelOpen',\n            '$onPanelMinimize',\n            '$onPanelDestroy',\n            '$clickAddPanelToColumn',\n            '$onEnterRemovePanel',\n            '$onLeaveRemovePanel',\n            '$onClickRemovePanel',\n            '$onDragDropStart',\n            '$onDragDropStop',\n            '$onDrag',\n            '$onDrop'\n        ],\n\n        options : {\n            name        : 'column',\n            width       : false,\n            height      : false,\n            resizeLimit : [],\n            sortable    : true,\n            closable    : false,\n            placement   : 'left' // depricated\n        },\n\n        initialize: function(options)\n        {\n            this.parent( options );\n\n            this.$ContextMenu = null;\n            this.$Elm         = null;\n            this.$Content     = null;\n            this.$panels      = {};\n\n            this.addEvents({\n                onDestroy : this.$onDestroy,\n                onDrop    : this.$onDrop\n            });\n        },\n\n        /**\n         * event : destroy the column\n         */\n        $onDestroy : function()\n        {\n            if ( this.$ContextMenu ) {\n                this.$ContextMenu.destroy();\n            }\n\n            if ( this.$Content ) {\n                this.$Content.destroy();\n            }\n\n            if ( this.$Elm ) {\n                this.$Elm.destroy();\n            }\n        },\n\n        /**\n         * Create the DOMNode for the Column\n         *\n         * @method qui/controls/desktop/Column#create\n         * @return {DOMNode}\n         */\n        create : function()\n        {\n            this.$Elm = new Element('div', {\n                'class'      : 'qui-column box qui-panel-drop',\n                'data-quiid' : this.getId()\n            });\n\n            if ( this.getAttribute( 'height' ) ) {\n                this.$Elm.setStyle( 'height', this.getAttribute( 'height' ) );\n            }\n\n            if ( this.getAttribute( 'width' ) ) {\n                this.$Elm.setStyle( 'width', this.getAttribute( 'width' ) );\n            }\n\n\n            this.$Content = new Element('div', {\n                'class' : 'qui-column-content box'\n            }).inject( this.$Elm );\n\n            // contextmenu\n            this.$ContextMenu = new Contextmenu({\n                events :\n                {\n                    onBlur : function(Menu) {\n                        Menu.hide();\n                    }\n                }\n            }).inject( document.body );\n\n            this.$ContextMenu.hide();\n\n            this.$Elm.addEvents({\n                contextmenu : this.$onContextMenu\n            });\n\n            if ( typeof this.$serialize !== 'undefined' ) {\n                this.unserialize( this.$serialize );\n            }\n\n            // this.resize();\n            this.fireEvent( 'create', [ this ] );\n\n            return this.$Elm;\n        },\n\n        /**\n         * Return the data for the workspace\n         *\n         * @method qui/controls/desktop/Column#serialize\n         * @return {Object}\n         */\n        serialize : function()\n        {\n            var panels   = this.getChildren(),\n                children = [];\n\n            for ( var p in panels ) {\n                children.push( panels[ p ].serialize() );\n            }\n\n            return {\n                attributes : this.getAttributes(),\n                children   : children\n            };\n        },\n\n        /**\n         * Import the saved data\n         *\n         * @method qui/controls/desktop/Column#unserialize\n         * @param {Object} data\n         */\n        unserialize : function(data)\n        {\n            this.setAttribute( data.attributes );\n\n            if ( !this.$Elm )\n            {\n                this.$serialize = data;\n                return this;\n            }\n\n            var i, len,\n                child_type, child_modul;\n\n            var children = data.children,\n                self     = this;\n\n            if ( !children ) {\n                return;\n            }\n\n            var req = ['MessageHandler'];\n\n            for ( i = 0, len = children.length; i < len; i++ )\n            {\n                child_type  = children[ i ].type;\n                child_modul = child_type.replace('QUI.', '')\n                                        .replace(/\\./g, '/');\n\n                req.push( child_modul );\n            }\n\n            require(req, function(MessageHandler)\n            {\n                var i, len, attr, height, Child, Control;\n\n                for ( i = 0, len = children.length; i < len; i++ )\n                {\n                    Child  = children[ i ];\n                    attr   = Child.attributes;\n                    height = attr.height;\n\n                    try\n                    {\n                        Control = eval(\n                            'new '+ Child.type +'( attr )'\n                        );\n\n                        Control.unserialize( Child );\n\n                        self.appendChild( Control );\n\n                    } catch ( Exception )\n                    {\n                        MH.addException( Exception );\n                    }\n                }\n            });\n        },\n\n        /**\n         * Append a child to the Column\n         *\n         * @method qui/controls/desktop/Column#appendChild\n         * @param {qui/controls/desktop/Panel|qui/controls/desktop/Tasks} Panel\n         * @param {Integer} pos - [optional] Position where to insert\n         * @return {this}\n         */\n        appendChild : function(Panel, pos)\n        {\n            var Prev, colheight;\n\n            var Handler   = false,\n                height    = false,\n                Parent    = Panel.getParent(),\n\n                computedSize    = this.$Content.getComputedSize(),\n                old_panel_is_me = false;\n\n\n            colheight = computedSize.height -\n                        computedSize['padding-top'] -\n                        computedSize['padding-bottom'];\n\n            // depend from another parent, if the panel has a parent\n            if ( typeOf( Parent ) == 'qui/controls/desktop/Column' )\n            {\n                Parent.dependChild( Panel );\n\n                if ( Parent == this ) {\n                    old_panel_is_me = true;\n                }\n            }\n\n            Panel.setParent( this );\n\n\n            // create a new handler\n            if ( this.count() )\n            {\n                Handler = new Element('div', {\n                    'class' : 'qui-column-hor-handle smooth'\n                });\n\n                this.$addHorResize( Handler );\n\n                Panel.setAttribute( '_Handler', Handler );\n            }\n\n            var handlelist = this.getElm().getElements(\n                '.qui-column-hor-handle'\n            );\n\n            // if the old panel was me, so we only make a new order\n            // there is a less column, because the panel column was destroyed\n            if ( typeof pos !== 'undefined' &&\n                 old_panel_is_me &&\n                 (pos).toInt() !== 0 )\n            {\n                pos = pos - 1;\n            }\n\n            // insert the panel\n            if ( typeof pos === 'undefined' || handlelist.length < (pos).toInt() )\n            {\n                // first panel have no handler\n                if ( Handler ) {\n                    Handler.inject( this.$Content );\n                }\n\n                Panel.inject( this.$Content );\n\n            } else if ( (pos).toInt() === 0 || !handlelist.length )\n            {\n                Handler.inject( this.$Content, 'top' );\n                Panel.inject( this.$Content, 'top' );\n\n            } else if ( typeof handlelist[ pos - 1 ] !== 'undefined' )\n            {\n                Handler.inject( handlelist[ pos - 1 ], 'after' );\n                Panel.inject( handlelist[ pos - 1 ], 'after' );\n            }\n\n            // if no height\n            // or no second panel exist\n            // use the column height\n            if ( !Panel.getAttribute( 'height' ) || !this.count() ) {\n                Panel.setAttribute( 'height', colheight - 2 );\n            }\n\n            if ( this.getAttribute( 'sortable' ) )\n            {\n                Panel.setAttribute( 'dragable', true );\n            } else\n            {\n                Panel.setAttribute( 'dragable', false );\n            }\n\n\n            // if some panels insight, resize the other panels\n            if ( this.count() )\n            {\n                height = Panel.getAttribute( 'height' );\n                Prev   = this.getPreviousPanel( Panel );\n\n                if ( !Prev ) {\n                    Prev = this.getNextPanel( Panel );\n                }\n\n                if ( !Prev ) {\n                    Prev = this.$panels[ 0 ];\n                }\n\n\n                if ( height > colheight || height.toString().match( '%' ) ) {\n                    height = (colheight / 2).round();\n                }\n\n                var max         = Prev.getAttribute( 'height' ),\n                    prev_height = max - height;\n\n                if ( prev_height < 100 )\n                {\n                    prev_height = 100;\n                    height      = max - 100;\n                }\n\n                if ( Handler ) {\n                    height = height - Handler.getSize().y;\n                }\n\n                Panel.setAttribute( 'height', height );\n                Prev.setAttribute( 'height', prev_height );\n                Prev.resize();\n            }\n\n            Panel.resize();\n\n            Panel.addEvents({\n                onMinimize : this.$onPanelMinimize,\n                onOpen     : this.$onPanelOpen,\n                onDestroy  : this.$onPanelDestroy,\n\n                // drag drop events\n                onDragDropStart    : this.$onDragDropStart,\n                onDragDropComplete : this.$onDragDropStop,\n                onDrag             : this.$onDrag\n            });\n\n            this.$panels[ Panel.getId() ] = Panel;\n\n            return this;\n        },\n\n        /**\n         * Depends a panel from the column\n         *\n         * @method qui/controls/desktop/Column#dependChild\n         * @param {qui/controls/desktop/Panel} Panel\n         * @return {this} self\n         */\n        dependChild : function(Panel)\n        {\n            if ( this.$panels[ Panel.getId() ] ) {\n                delete this.$panels[ Panel.getId() ];\n            }\n\n            // destroy the panel events\n            Panel.removeEvents({\n                onMinimize : this.$onPanelMinimize,\n                onOpen     : this.$onPanelOpen,\n                onDestroy  : this.$onPanelDestroy\n            });\n\n            // if the panel is from this column\n            var Handler = false,\n                Parent  = Panel.getParent();\n\n            Handler = Panel.getAttribute( '_Handler' );\n\n            if ( Parent ) {\n                Panel.getParent().$onPanelDestroy( Panel );\n            }\n\n            return this;\n        },\n\n        /**\n         * Return the column children\n         *\n         * @method qui/controls/desktop/Column#getChildren\n         * @param {String} name - [optional]\n         * @return {Object}\n         */\n        getChildren : function(name)\n        {\n            if ( typeof name === 'undefined' ) {\n                return this.$panels;\n            }\n\n            var i;\n            var items = this.$panels;\n\n            for ( i in items )\n            {\n                if ( items[ i ].getAttribute( 'name' ) == name ) {\n                    return items[ i ];\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Panel count\n         * How many panels are in the coulumn?\n         *\n         * @method qui/controls/desktop/Column#count\n         * @return {Integer}\n         */\n        count : function()\n        {\n            var c, i = 0;\n\n            for ( c in this.$panels ) {\n                i++;\n            }\n\n            return i;\n        },\n\n        /**\n         * Resize the column and all panels in the column\n         *\n         * @method qui/controls/desktop/Column#resize\n         * @return {this}\n         */\n        resize : function()\n        {\n            if ( !this.isOpen() ) {\n                return this;\n            }\n\n            var width = this.getAttribute( 'width' );\n\n            if ( !width ) {\n                return this;\n            }\n\n            if ( this.$Elm.getSize().x == this.getAttribute( 'width' ) ) {\n                return this;\n            }\n\n            this.$Elm.setStyle( 'width', width );\n\n            // all panels resize\n            var i, Panel;\n\n            for ( i in this.$panels )\n            {\n                Panel = this.$panels[ i ];\n\n                Panel.setAttribute( 'width', width );\n                Panel.resize();\n            }\n\n            return this;\n        },\n\n        /**\n         * Open the column\n         *\n         * @method qui/controls/desktop/Column#open\n         * @return {this}\n         */\n        open : function()\n        {\n            this.$Content.setStyle( 'display', null );\n\n            // sibling resize\n            var Sibling = this.getSibling();\n\n            Sibling.setAttribute(\n                'width',\n                Sibling.getAttribute('width') - this.getAttribute('width') + 6\n            );\n\n            Sibling.resize();\n\n            // self reresh\n            this.resize();\n\n            return this;\n        },\n\n        /**\n         * Close the column\n         *\n         * @method qui/controls/desktop/Column#close\n         * @return {this}\n         */\n        close : function()\n        {\n            if ( this.getAttribute( 'closable' ) === false ) {\n                return this;\n            }\n\n            var content_width = this.$Content.getSize().x,\n                Sibling       = this.getSibling();\n\n            this.$Content.setStyle( 'display', 'none' );\n\n            // resize the sibling column\n            Sibling.setAttribute(\n                'width',\n                Sibling.getAttribute('width') + content_width\n            );\n\n            Sibling.resize();\n\n            return this;\n        },\n\n        /**\n         * toggle the open status of the column\n         * if open, then close\n         * if close, the open ;-)\n         *\n         * @method qui/controls/desktop/Column#toggle\n         * @return {this}\n         */\n        toggle : function()\n        {\n            if ( this.isOpen() )\n            {\n                this.close();\n            } else\n            {\n                this.open();\n            }\n\n            return this;\n        },\n\n        /**\n         * Return the open status of the colum\n         * is the column open?\n         *\n         * @method qui/controls/desktop/Column#isOpen\n         * @return {Bool}\n         */\n        isOpen : function()\n        {\n            return this.$Content.getStyle( 'display' ) == 'none' ? false : true;\n        },\n\n        /**\n         * Highlight the column\n         *\n         * @method qui/controls/desktop/Column#highlight\n         * @return {this}\n         */\n        highlight : function()\n        {\n            if ( !this.getElm() ) {\n                return this;\n            }\n\n            new Element( 'div.qui-column-hightlight' ).inject(\n                this.getElm()\n            );\n\n            return this;\n        },\n\n        /**\n         * Dehighlight the column\n         *\n         * @method qui/controls/desktop/Column#normalize\n         * @return {this}\n         */\n        normalize : function()\n        {\n            if ( !this.getElm() ) {\n                return this;\n            }\n\n            this.getElm().getElements( '.qui-column-hightlight' ).destroy();\n\n            return this;\n        },\n\n        /**\n         * Return the Sibling column control\n         * it is looked to the placement\n         * if no column exist, so it search the prev and next columns\n         *\n         * @method qui/controls/desktop/Column#getSibling\n         * @return {false|qui/controls/desktop/Column}\n         */\n        getSibling : function()\n        {\n            var Column;\n\n            if ( this.getAttribute( 'placement' ) == 'left' )\n            {\n                Column = this.getElm().getNext( '.qui-column' );\n            } else if( this.getAttribute( 'placement' ) == 'right' )\n            {\n                Column = this.getElm().getPrevious( '.qui-column' );\n            }\n\n            if ( Column ) {\n                return QUI.Controls.getById( Next.get( 'data-quiid' ) );\n            }\n\n            Column = this.getPrevious();\n\n            if ( Column ) {\n                return Column;\n            }\n\n\n            Column = this.getNext();\n\n            if ( Column ) {\n                return Column;\n            }\n\n            return false;\n        },\n\n        /**\n         * Return the previous sibling\n         *\n         * @method qui/controls/desktop/Column#getPrevious\n         * @return {false|qui/controls/desktop/Column}\n         */\n        getPrevious : function()\n        {\n            var Prev = this.getElm().getPrevious( '.qui-column' );\n\n            if ( !Prev ) {\n                return false;\n            }\n\n            return QUI.Controls.getById( Prev.get( 'data-quiid' ) );\n        },\n\n        /**\n         * Return the next sibling\n         *\n         * @method qui/controls/desktop/Column#getNext\n         * @return {false|qui/controls/desktop/Column}\n         */\n        getNext : function()\n        {\n            var Next = this.getElm().getNext( '.qui-column' );\n\n            if ( !Next ) {\n                return false;\n            }\n\n            return QUI.Controls.getById( Next.get( 'data-quiid' ) );\n        },\n\n        /**\n         * return the next panel sibling\n         *\n         * @method qui/controls/desktop/Column#getNextPanel\n         * @return {false|qui/controls/desktop/Panel|qui/controls/desktop/Tasks}\n         */\n        getNextPanel : function(Panel)\n        {\n            var NextElm = Panel.getElm().getNext( '.qui-panel' );\n\n            if ( !NextElm ) {\n                return false;\n            }\n\n            var Next = QUI.Controls.getById( NextElm.get( 'data-quiid' ) );\n\n            return Next ? Next : false;\n        },\n\n        /**\n         * Get the next panel sibling which is opened\n         *\n         * @method qui/controls/desktop/Column#getNextOpenedPanel\n         * @return {false|qui/controls/desktop/Panel|qui/controls/desktop/Tasks}\n         */\n        getNextOpenedPanel : function(Panel)\n        {\n            var list = Panel.getElm().getAllNext( '.qui-panel' );\n\n            if ( !list.length ) {\n                return false;\n            }\n\n            var i, len, Control;\n\n            for ( i = 0, len = list.length; i < len; i++ )\n            {\n                Control = QUI.Controls.getById(\n                    list[ i ].get( 'data-quiid' )\n                );\n\n                if ( Control && Control.isOpen() ) {\n                    return Control;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * return the previous panel sibling\n         *\n         * @method qui/controls/desktop/Column#getPreviousPanel\n         * @return {false|qui/controls/desktop/Panel|qui/controls/desktop/Tasks}\n         */\n        getPreviousPanel : function(Panel)\n        {\n            var PrevElm = Panel.getElm().getPrevious( '.qui-panel' );\n\n            if ( !PrevElm ) {\n                return false;\n            }\n\n            var Prev = QUI.Controls.getById( PrevElm.get( 'data-quiid' ) );\n\n            return Prev ? Prev : false;\n        },\n\n        /**\n         * return the previous panel sibling\n         *\n         * @method qui/controls/desktop/Column#getPreviousOpenedPanel\n         * @return {false|qui/controls/desktop/Panel|qui/controls/desktop/Tasks}\n         */\n        getPreviousOpenedPanel : function(Panel)\n        {\n            var list = Panel.getElm().getAllPrevious( '.qui-panel' );\n\n            if ( !list.length ) {\n                return false;\n            }\n\n\n            var i, len, Control;\n\n            for ( i = 0, len = list.length; i < len; i++ )\n            {\n                Control = QUI.Controls.getById(\n                    list[ i ].get( 'data-quiid' )\n                );\n\n                if ( Control && Control.isOpen() ) {\n                    return Control;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Panel close event\n         *\n         * @method qui/controls/desktop/Column#$onPanelMinimize\n         * @param {qui/controls/desktop/Panel} Panel\n         * @ignore\n         */\n        $onPanelMinimize : function(Panel)\n        {\n            var Next = this.getNextOpenedPanel( Panel );\n\n            Panel.setAttribute( 'columnCloseDirection', 'next' );\n\n            if ( !Next )\n            {\n                Next = this.getPreviousOpenedPanel( Panel );\n                Panel.setAttribute( 'columnCloseDirection', 'prev' );\n            }\n\n            if ( !Next )\n            {\n                this.close();\n                return;\n            }\n\n            var panel_height       = Panel.getAttribute('height'),\n                panel_title_height = Panel.getHeader().getSize().y,\n                next_height        = Next.getElm().getComputedSize().totalHeight;\n\n            Next.setAttribute( 'height', next_height + panel_height - panel_title_height );\n            Next.resize();\n        },\n\n        /**\n         * Panel open event\n         *\n         * @method qui/controls/desktop/Column#$onPanelOpen\n         * @param {qui/controls/desktop/Panel} Panel\n         * @ignore\n         */\n        $onPanelOpen : function(Panel)\n        {\n            // find the sibling\n            var Prev      = false,\n                direction = Panel.getAttribute( 'columnCloseDirection' );\n\n            if ( direction && direction == 'next' ) {\n                Prev = this.getNextOpenedPanel( Panel );\n            }\n\n            if ( direction && direction == 'prev' ) {\n                Prev = this.getPreviousOpenedPanel( Panel );\n            }\n\n            if ( !Prev ) {\n                Prev = this.getPreviousOpenedPanel( Panel );\n            }\n\n            if ( !Prev ) {\n                Prev = this.getNextOpenedPanel( Panel );\n            }\n\n            if ( !Prev ) {\n                return;\n            }\n\n\n            var panel_height       = Panel.getElm().getComputedSize().totalHeight,\n                panel_title_height = Panel.getHeader().getSize().y,\n                prev_height        = Prev.getElm().getComputedSize().totalHeight;\n\n            Prev.setAttribute(\n                'height',\n                prev_height - (panel_height - panel_title_height)\n            );\n\n            Prev.resize();\n\n            // check if the panel content have a scroll bar\n            var elm_size   = this.$Content.getSize().y,\n                elm_scroll = this.$Content.getScrollSize().y;\n\n            if ( elm_size >= elm_scroll ) {\n                return;\n            }\n\n            // we must recalc our panels\n            // we have no space :-/ or to many space\n            var len    = Object.getLength( this.$panels ),\n                height = Math.ceil( elm_size / len );\n\n            for ( var quiid in this.$panels )\n            {\n                Panel = this.$panels[ quiid ];\n\n                if ( !Panel.isOpen() ) {\n                    continue;\n                }\n\n                Panel.setAttribute( 'height', height );\n                Panel.resize();\n            }\n\n            // look at the last\n            var i;\n            var childheight = 0,\n                children    = this.$Content.getChildren();\n\n            for ( i = 0, len = children.length; i < len; i++ ) {\n                childheight = childheight + children[ i ].getSize().y;\n            }\n\n            Panel.setAttribute(\n                'height',\n                Panel.getAttribute( 'height' ) - ( childheight - elm_size )\n            );\n        },\n\n        /**\n         * event: If the panel would be destroyed\n         *\n         * @method qui/controls/desktop/Column#$onPanelDestroy\n         * @param {qui/controls/desktop/Panel} Panel\n         * @ignore\n         */\n        $onPanelDestroy : function(Panel)\n        {\n            var height, Next, Prev, Sibling;\n\n            var pid = Panel.getId(),\n                Elm = Panel.getElm();\n\n            if ( this.$panels[ pid ] ) {\n                delete this.$panels[ pid ];\n            }\n\n            // find handler\n            var Handler = Panel.getAttribute( '_Handler' );\n\n            // the panel is the first panel\n            // so the next panel handler must be destroyed\n            if ( !Handler && !Elm.getPrevious() && Elm.getNext() )\n            {\n                Handler = Elm.getNext();\n                Next    = Handler.getNext();\n\n                if ( Next && Next.get( 'data-quiid' ) )\n                {\n                    Sibling = QUI.Controls.getById(\n                        Next.get( 'data-quiid' )\n                    );\n\n                    height = Handler.getSize().y +\n                             Sibling.getAttribute( 'height' ) +\n                             Panel.getAttribute( 'height' );\n\n                    Sibling.setAttribute( 'height', height );\n                    Sibling.setAttribute( '_Handler', false );\n                    Sibling.resize();\n                }\n\n                Handler.destroy();\n                return;\n            }\n\n            // if the panel is the last panel\n            // so the next previous handler must be destroyed\n            if ( !Handler && !Elm.getNext() && Elm.getPrevious() )\n            {\n                Handler = Elm.getPrevious();\n                Prev    = Handler.getPrevious();\n\n                if ( Prev && Prev.get( 'data-quiid' ) )\n                {\n                    Sibling = QUI.Controls.getById(\n                        Prev.get( 'data-quiid' )\n                    );\n\n                    height = Handler.getSize().y +\n                             Sibling.getAttribute( 'height' ) +\n                             Panel.getAttribute( 'height' );\n\n                    Sibling.setAttribute( 'height', height );\n                    Sibling.setAttribute( '_Handler', false );\n                    Sibling.resize();\n                }\n\n                Handler.destroy();\n                return;\n            }\n\n\n            if ( !Handler || !Handler.hasClass( 'qui-column-hor-handle' ) ) {\n                return;\n            }\n\n            Prev = Handler.getPrevious();\n\n            if ( Prev && Prev.get( 'data-quiid' ) )\n            {\n                Sibling = QUI.Controls.getById(\n                    Prev.get( 'data-quiid' )\n                );\n\n                height = Handler.getSize().y +\n                         Sibling.getAttribute( 'height' ) +\n                         Panel.getAttribute( 'height' );\n\n                Sibling.setAttribute( 'height', height );\n                Sibling.resize();\n            }\n\n            Handler.destroy();\n        },\n\n        /**\n         * Add the horizental resizing events to the column\n         *\n         * @method qui/controls/desktop/Column#$addHorResize\n         * @param {DOMNode} Handle\n         */\n        $addHorResize : function(Handle)\n        {\n            var pos = Handle.getPosition();\n\n            var DragDrop = new QuiDragDrop(Handle, {\n                limit  : {\n                    x: [ pos.x, pos.x ],\n                    y: [ pos.y, pos.y ]\n                },\n                events :\n                {\n                    onStart : function(DragDrop, Dragable)\n                    {\n                        if ( !this.$Elm ) {\n                            return;\n                        }\n\n                        var pos   = this.$Elm.getPosition(),\n                            hpos  = Handle.getPosition(),\n                            limit = DragDrop.getAttribute( 'limit' );\n\n                        limit.y = [\n                            pos.y,\n                            pos.y + this.$Elm.getSize().y\n                        ];\n\n                        limit.x = [ hpos.x, hpos.x ];\n\n                        DragDrop.setAttribute( 'limit', limit );\n\n                        Dragable.setStyles({\n                            height  : 5,\n                            padding : 0,\n                            top     : hpos.y,\n                            left    : hpos.x\n                        });\n\n                    }.bind( this ),\n\n                    onStop : this.$horResizeStop.bind( this )\n                }\n            });\n\n            DragDrop.setAttribute( 'Control', this );\n            DragDrop.setAttribute( 'Handle', Handle );\n        },\n\n        /**\n         * Horizontal Drag Drop Stop\n         * Helper Function\n         *\n         * @method qui/controls/desktop/Column#$horResizeStop\n         */\n        $horResizeStop : function(DragDrop, Dragable)\n        {\n            var i, len, size, change;\n\n            var Handle   = DragDrop.getAttribute('Handle'),\n                pos      = Dragable.getPosition(),\n                hpos     = Handle.getPosition(),\n                children = this.$Content.getChildren(),\n\n                computedSize = this.$Content.getComputedSize();\n\n            size = computedSize.height -\n                        computedSize['padding-top'] -\n                        computedSize['padding-bottom'];\n\n            change = pos.y - hpos.y;\n\n            var Next = Handle.getNext(),\n                Prev = Handle.getPrevious(),\n\n                PrevInstance = false,\n                NextInstance = false;\n\n            if ( Next ) {\n                NextInstance = QUI.Controls.getById( Next.get( 'data-quiid' ) );\n            }\n\n            if ( Prev ) {\n                PrevInstance = QUI.Controls.getById( Prev.get( 'data-quiid' ) );\n            }\n\n            if ( NextInstance && !NextInstance.isOpen() )\n            {\n                var NextOpened = this.getNextOpenedPanel( NextInstance );\n\n                if ( !NextOpened )\n                {\n                    NextInstance.setAttribute( 'height', 30 );\n                    NextInstance.open();\n                } else\n                {\n                    NextInstance = NextOpened;\n                }\n            }\n\n            if ( PrevInstance && !PrevInstance.isOpen() )\n            {\n                var PrevOpened = this.getPreviousOpenedPanel( PrevInstance );\n\n                if ( !PrevOpened )\n                {\n                    PrevInstance.setAttribute( 'height', 30 );\n                    PrevInstance.open();\n                } else\n                {\n                    PrevInstance = PrevOpened;\n                }\n            }\n\n            if ( NextInstance )\n            {\n                NextInstance.setAttribute(\n                    'height',\n                    NextInstance.getAttribute( 'height' ) - change\n                );\n\n                NextInstance.resize();\n            }\n\n\n            if ( !PrevInstance ) {\n                return;\n            }\n\n            PrevInstance.setAttribute(\n                'height',\n                PrevInstance.getAttribute( 'height' ) + change\n            );\n\n            PrevInstance.resize();\n\n            // check if a rest height exist\n            var children_height = 0;\n\n            for ( i = 0, len = children.length; i < len; i++ ) {\n                children_height = children_height + children[i].getSize().y;\n            }\n\n            if ( children_height == size.y ) {\n                return;\n            }\n\n            PrevInstance.setAttribute(\n                'height',\n                PrevInstance.getAttribute( 'height' ) + (size.y - children_height)\n            );\n\n            PrevInstance.resize();\n        },\n\n        /**\n         * event : on context menu\n         *\n         * @method qui/controls/desktop/Column#$onContextMenu\n         * @param {DOMEvent} event\n         */\n        $onContextMenu : function(event)\n        {\n            if ( !this.getParent() ) {\n                return;\n            }\n\n            event.stop();\n\n            var i, len, Panel, AddPanels, RemovePanels;\n\n            var Parent = this.getParent(),\n                panels = Parent.getAvailablePanel();\n\n\n            this.$ContextMenu.clearChildren();\n            this.$ContextMenu.setTitle( 'Column' );\n\n            // add panels\n            AddPanels = new ContextmenuItem({\n                text : 'Panel hinzufügen',\n                name : 'add_panels_to_column'\n            });\n\n            this.$ContextMenu.appendChild( AddPanels );\n\n            for ( i = 0, len = panels.length; i < len; i++ )\n            {\n                AddPanels.appendChild(\n                    new ContextmenuItem({\n                        text   : panels[ i ].text,\n                        icon   : panels[ i ].icon,\n                        name   : 'add_panels_to_column',\n                        params : panels[ i ],\n                        events : {\n                            onMouseDown : this.$clickAddPanelToColumn\n                        }\n                    })\n                );\n            }\n\n            // remove panels\n            RemovePanels = new ContextmenuItem({\n                text : 'Panel löschen',\n                name : 'remove_panel_of_column'\n            });\n\n            this.$ContextMenu.appendChild( RemovePanels );\n\n            for ( i in this.$panels )\n            {\n                Panel = this.$panels[ i ];\n\n                RemovePanels.appendChild(\n                    new ContextmenuItem({\n                        text   : Panel.getAttribute( 'title' ),\n                        icon   : Panel.getAttribute( 'icon' ),\n                        name   : Panel.getAttribute( 'name' ),\n                        Panel  : Panel,\n                        events : {\n                            onActive    : this.$onEnterRemovePanel,\n                            onNormal    : this.$onLeaveRemovePanel,\n                            onMouseDown : this.$onClickRemovePanel\n                        }\n                    })\n                );\n            }\n\n\n            this.$ContextMenu.setPosition(\n                event.page.x,\n                event.page.y\n            ).show().focus();\n        },\n\n        /**\n         * event : onclick contextmenu, add a panel\n         *\n         * @method qui/controls/desktop/Column#$clickAddPanelToColumn\n         * @param {qui/controls/contextmenu/Item} ContextMenuItem\n         */\n        $clickAddPanelToColumn : function(ContextMenuItem)\n        {\n            var Column = this,\n                params = ContextMenuItem.getAttribute( 'params' );\n\n            if ( !params.require ) {\n                return;\n            }\n\n            require([ params.require ], function(Panel) {\n                Column.appendChild( new Panel() );\n            });\n        },\n\n        /**\n         * event : on mouse enter at a contextmenu item -> remove panel\n         *\n         * @method qui/controls/desktop/Column#$onEnterRemovePanel\n         * @param {qui/controls/contextmenu/Item} Item\n         */\n        $onEnterRemovePanel : function(Item)\n        {\n            Item.getAttribute( 'Panel' ).highlight();\n        },\n\n        /**\n         * event : on mouse leave at a contextmenu item -> remove panel\n         *\n         * @method qui/controls/desktop/Column#$onLeaveRemovePanel\n         * @param {qui/controls/contextmenu/Item} Item\n         */\n        $onLeaveRemovePanel : function(Item)\n        {\n            Item.getAttribute( 'Panel' ).normalize();\n        },\n\n        /**\n         * event : on mouse click at a contextmenu item -> remove panel\n         *\n         * @method qui/controls/desktop/Column#$onClickRemovePanel\n         * @param {qui/controls/contextmenu/Item} Item\n         */\n        $onClickRemovePanel : function(Item)\n        {\n            Item.getAttribute( 'Panel' ).destroy();\n        },\n\n        /**\n         * DragDrop event handling\n         */\n\n        /**\n         * event : drag drop start\n         * calculates the position of the drag drop arrows\n         * and create the drag drop arrows\n         *\n         * @param {qui/classes/utils/DragDrop} DragDrop - DragDrop Object\n         * @param {DOMNode} DragElement - DragDrop DOMNode Element\n         * @param {DOMEvent} event - DOM event\n         */\n        $onDragDropStart : function(DragDrop, DragElement, event)\n        {\n            var i, y, len, closest, distance, Handler;\n\n            this.$ddArrowPositions = {};\n\n            var Elm    = this.getElm(),\n                elmPos = Elm.getPosition(),\n                list   = Elm.getElements( '.qui-column-hor-handle' ),\n                xPos   = elmPos.x;\n\n            // first arrow\n            this.$ddArrowPositions[ elmPos.y ] = new Element('div', {\n                'class' : 'qui-column-drag-arrow icon-circle-arrow-left ',\n                styles  : {\n                    top     : elmPos.y,\n                    left    : xPos,\n                    display : 'none'\n                },\n                'data-arrowno' : 0\n            }).inject( document.body );\n\n            // arrows between\n            for ( i = 0, len = list.length; i < len; i++ )\n            {\n                Handler = list[ i ];\n                Handler.set( 'data-arrowid', String.uniqueID() );\n\n                y = Handler.getPosition().y;\n\n                this.$ddArrowPositions[ y ] = new Element('div', {\n                    'class' : 'qui-column-drag-arrow icon-circle-arrow-left ',\n                    styles  : {\n                        top     : y - 20,\n                        left    : xPos,\n                        display : 'none'\n                    },\n                    'data-arrowid' : Handler.get( 'data-arrowid' ),\n                    'data-arrowno' : i + 1\n                }).inject( document.body );\n            }\n\n\n            // last arrow\n            this.$ddArrowPositions[ elmPos.y + Elm.getSize().y ] = new Element('div', {\n                'class' : 'qui-column-drag-arrow icon-circle-arrow-left ',\n                styles  : {\n                    top     : elmPos.y + Elm.getSize().y - 20,\n                    left    : xPos,\n                    display : 'none'\n                },\n                'data-arrowno' : i + 1\n            }).inject( document.body );\n\n            // calc the nearest\n            y        = event.page.y;\n            closest  = null;\n            distance = false;\n\n            for ( i in this.$ddArrowPositions )\n            {\n                distance = y-i;\n\n                if ( distance < 0 ) {\n                    distance = distance * -1;\n                }\n\n                if ( !closest || closest > distance )\n                {\n                    this.$ddArrow = this.$ddArrowPositions[ i ];\n                    closest = distance;\n                }\n            }\n\n            this.$ddArrow.setStyle( 'display', null );\n        },\n\n        /**\n         * event : drag drop complete\n         * destroy all drag drop arrows\n         */\n        $onDragDropStop : function()\n        {\n            var i, len, list;\n\n            for ( i in this.$ddArrowPositions ) {\n                this.$ddArrowPositions[ i ].destroy();\n            }\n\n            this.$ddArrowPositions = {};\n\n            // clean handler ids\n            list = this.getElm().getElements( '.qui-column-hor-handle' );\n\n            for ( i = 0, len = list.length; i < len; i++ ) {\n                list[ i ].set( 'data-arrowid', null );\n            }\n        },\n\n        /**\n         * event : drag\n         *\n         * @param {qui/classes/utils/DragDrop} DragDrop - DragDrop Object\n         * @param {DOMEvent} event - DOM event\n         */\n        $onDrag : function(DragDrop, event)\n        {\n            var y = event.page.y;\n\n            if ( this.$ddArrowPositions[ y ] )\n            {\n                this.$ddArrow.setStyle( 'display', 'none' );\n                this.$ddArrowPositions[ y ].setStyle( 'display', null );\n\n                this.$ddArrow = this.$ddArrowPositions[ y ];\n            }\n        },\n\n        /**\n         * event : a control droped on the column\n         *\n         * @param {qui/controls/Control} Control - QUI Control\n         */\n        $onDrop : function(Control)\n        {\n            if ( !this.$ddArrow )\n            {\n                this.appendChild( Control );\n                return;\n            }\n\n            this.appendChild( Control, this.$ddArrow.get( 'data-arrowno' ) );\n        }\n    });\n});\n","/**\n * Use Local storage,\n * if local storage not exist, it loads the polyfill\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @module qui/classes/storage/Storage\n * @package com.pcsg.qui.js.classes.users.storage\n */\n\nvar needle = ['qui/classes/DOM'];\n\nif ( typeof window.localStorage === 'undefined' ||\n     typeof window.sessionStorage === 'undefined')\n{\n    needle.push( 'qui/classes/storage/' );\n}\n\ndefine('qui/classes/storage/Storage', needle, function(QDOM, Polyfill)\n{\n    \"use strict\";\n\n    /**\n     * Local storage\n     *\n     * @class qui/classes/storage/Storage\n     *\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : QDOM,\n        Type    : 'qui/classes/storage/Storage',\n\n        /**\n         * Set the value of a key\n         *\n         * @method qui/classes/storage/Storage#set\n         * @param {String} key\n         * @param {String|Integer} value\n         */\n        set : function(key, value)\n        {\n            window.localStorage.setItem( key, value );\n        },\n\n        /**\n         * Return the value of stored the key\n         *\n         * @method qui/classes/storage/Storage#get\n         * @param {String} key\n         * @return {unknown_type} the wanted storage\n         */\n        get : function(key)\n        {\n            return window.localStorage.getItem( key );\n        }\n    });\n});\n\n","\n/**\n * Math helper\n * Helps with math operations\n *\n * @author www.namerobot.com (Henning Leutz)\n */\n\ndefine('qui/utils/Math', [],function()\n{\n    \"use strict\";\n\n    return {\n\n        /**\n         * Resize Variables in dependence on each other\n         *\n         * @method qui/utils/Math#resizeVar\n         *\n         * @param {Integer} var1 - First variable\n         * @param {Integer} var1 - Second variable\n         * @param {Integer} max  - Max value of each variable\n         *\n         * @return {Object} Object {\n         *     var1 : value,\n         *     var2 : value\n         * }\n         */\n        resizeVar : function(var1, var2, max)\n        {\n            var resize_by_percent;\n\n            if ( var1 > max )\n            {\n                resize_by_percent = (max * 100 )/ var1;\n                var2 = Math.round((var2 * resize_by_percent)/100);\n                var1 = max;\n            }\n\n            if ( var2 > max )\n            {\n                resize_by_percent = (max * 100 )/ var2;\n                var1 = Math.round((var1 * resize_by_percent)/100);\n                var2 = max;\n            }\n\n            return {\n                var1 : var1,\n                var2 : var2\n            };\n        },\n\n        /**\n         * Parse an amount to a real float value\n         *\n         * @method qui/utils/Math#parseAmountToFloat\n         *\n         * @param {String} str - Value, String\n         * @return {Float}\n         */\n        parseAmountToFloat : function(str)\n        {\n            return parseFloat(\n                str.toString().replace(',', '.')\n            );\n        },\n\n        /**\n         * Percent calculation\n         * Return the percentage integer value\n         *\n         * @method qui/utils/Math#percent\n         * @param Integer|Float $amount\n         * @param Integer|Float $total\n         *\n         * @return {Integer}\n         */\n        percent : function(amount, total)\n        {\n            if (amount === 0 || total === 0) {\n                return 0;\n            }\n\n            return ((amount * 100) / total).round();\n        },\n\n        /**\n         * Calc a VAT\n         *\n         * @method qui/utils/Math#calcMwst\n         *\n         * @param {Float|Integer|Bool} brutto\n         * @param {Float|Integer|Bool} netto\n         * @param {Integer} mwst\n         *\n         * @return {Object} Object {\n         *        brutto : brutto,\n         *         netto : netto\n         * }\n         */\n        calcMwst : function(brutto, netto, mwst)\n        {\n            mwst = (parseInt(mwst, 10) / 100) + 1;\n\n            if (brutto === false)\n            {\n                brutto = netto * mwst;\n            } else if (netto === false)\n            {\n                netto = brutto / mwst;\n            }\n\n            return {\n                brutto : brutto,\n                netto  : netto\n            };\n        }\n    };\n});\n","/**\n * Workspace\n *\n * You can append the Workspace with columns and panels\n * Save the Workspace and load the workspace\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @module controls/desktop/Workspace\n * @package pcsg.qui.js.controls.desktop.workspace\n *\n * @event onLoad - if the workspace is loaded\n * @event onSave [{this}, {Object Data}]\n */\n\ndefine('qui/controls/desktop/Workspace', [\n\n    'qui/QUI',\n    'qui/controls/Control',\n    'qui/controls/loader/Loader',\n    'qui/controls/desktop/Column',\n    'qui/classes/storage/Storage',\n    'qui/utils/Math',\n    'qui/classes/utils/DragDrop'\n\n], function(QUI, QUIControl, QUILoader, QUIColumn, QUIStorage, QUIMath, QUIDragDrop)\n{\n    \"use strict\";\n\n    /**\n     * @class qui/controls/desktop.Workspace\n     *\n     * @param {DOMNode} Parent - Parent node\n     * @param {Object} options . QDOM params\n     *\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : QUIControl,\n        Type    : 'qui/controls/desktop.Workspace',\n\n        Binds : [\n            'resize',\n            '$onHandlerContextMenu',\n            '$onHandlerContextMenuHighlight',\n            '$onHandlerContextMenuNormalize',\n            '$onHandlerContextMenuClick'\n        ],\n\n        options : {\n            limit : {}\n        },\n\n        initialize : function(Parent, options)\n        {\n            this.parent( options );\n\n            this.$Parent = Parent;\n            this.$Loader = null;\n\n            this.$available_panels = {};\n            this.$columns = [];\n\n            window.addEvent( 'resize', this.resize );\n        },\n\n        /**\n         * Load the Workspace\n         *\n         * @method qui/controls/desktop.Workspace#load\n         * @return {this}\n         *\n         * @todo controls müssen über require gehohlt werden\n         */\n        load : function()\n        {\n            this.inject( this.$Parent );\n\n            this.$Loader.show();\n\n            var self = this;\n\n            require([\n\n                \"qui/controls/desktop/Panel\"\n\n            ], function(QUIPanel)\n            {\n                var workspace = QUIStorage.get( 'qui.workspace' );\n\n                if ( workspace ) {\n                    workspace = JSON.decode( workspace );\n                }\n\n                if ( !workspace ) {\n                    workspace = [];\n                }\n\n                if ( workspace.length )\n                {\n                    var i, len, Column;\n\n                    // make columns\n                    for ( i = 0, len = workspace.length; i < len; i++ )\n                    {\n                        Column = new QUIColumn(\n                            workspace[ i ].attributes\n                        );\n\n                        if ( workspace[ i ].children ) {\n                            Column.unserialize( workspace[ i ] );\n                        }\n\n                        this.appendChild( Column );\n                    }\n\n                    // resize columns width %\n                    this.resize( workspace );\n                }\n\n                self.fireEvent( 'load' );\n                self.$Loader.hide();\n            });\n\n            return this;\n        },\n\n        /**\n         * Workspace resize\n         *\n         * @param {Array} workspace - [optional] json decoded serialized workspace\n         */\n        resize : function(workspace)\n        {\n            var i, len, perc, Column;\n            var wlist = [];\n\n            if ( typeof workspace === 'undefined' ||\n                 typeof workspace.length === 'undefined' )\n            {\n                workspace = false;\n            }\n\n            if ( workspace )\n            {\n                var attr;\n\n                for ( i = 0, len = workspace.length; i < len; i++ )\n                {\n                    attr = workspace[ i ].attributes;\n\n                    if ( attr.width && attr.width > 0 )\n                    {\n                        wlist.push( attr.width );\n                    } else\n                    {\n                        wlist.push( 200 );\n                    }\n                }\n\n            } else\n            {\n                for ( i = 0, len = this.$columns.length; i < len; i++ )\n                {\n                    Column = this.$columns[ i ];\n\n                    // width list\n                    if ( Column.getAttribute( 'width' ) &&\n                         Column.getAttribute( 'width' ) > 0 )\n                    {\n                        wlist.push(\n                            Column.getAttribute( 'width' )\n                        );\n                    } else\n                    {\n                        wlist.push( 200 );\n                    }\n                }\n            }\n\n            // resize columns width %\n            var old_max   = 0,\n                max_width = this.$Elm.getSize().x,\n                Parent    = this.$Elm.getParent();\n\n            if ( Parent )\n            {\n                var psize = Parent.getSize();\n                max_width = psize.x;\n            }\n\n            for ( i = 0, len = wlist.length; i < len; i++ ) {\n                old_max = old_max + wlist[ i ];\n            }\n\n            // calc the % and resize it\n            for ( i = 0, len = wlist.length; i < len; i++ )\n            {\n                perc = QUIMath.percent( wlist[ i ], old_max );\n\n                this.$columns[ i ].setAttribute(\n                    'width',\n                    (max_width * (perc / 100)).round() - 5\n                );\n\n                this.$columns[ i ].resize();\n            }\n        },\n\n        /**\n         * Create the DOMNode\n         *\n         * @return {DOMNode}\n         */\n        create : function()\n        {\n            this.$Elm = new Element('div.qui-workspace', {\n                styles : {\n                    height : '100%',\n                    width  : '100%',\n                    'float' : 'left'\n                }\n            });\n\n            this.$Loader = new QUILoader({\n                styles : {\n                    zIndex : 100\n                }\n            }).inject( this.$Elm );\n\n            if ( this.getAttribute( 'styles' ) ) {\n                this.$Elm.setStyles( this.getAttribute( 'styles' ) );\n            }\n\n            return this.$Elm;\n        },\n\n        /**\n         * Save the Workspace to the localstorage\n         *\n         * @return {Bool}\n         */\n        save : function()\n        {\n            var i, len, p, plen,\n                panels, children, Column;\n\n            var columns = this.$Elm.getChildren( '.qui-column' ),\n                result  = [];\n\n            for ( i = 0, len = columns.length; i < len; i++ )\n            {\n                Column = QUI.Controls.getById(\n                    columns[i].get( 'data-quiid' )\n                );\n\n                result.push( Column.serialize() );\n            }\n\n            // QUI.Storage.set( 'qui.workspace', JSON.encode( result ) );\n\n            this.fireEvent( 'save', [ this, JSON.encode( result ) ] );\n\n            return true;\n        },\n\n        /**\n         * Add a column to the workspace\n         *\n         * @param {qui/controls/desktop/Column|Params} Column\n         * @return {this}\n         */\n        appendChild : function(Column)\n        {\n            if ( typeOf( Column ) !== 'qui/controls/desktop/Column' ) {\n                Column = new QUIColumn( Column );\n            }\n\n            var max_width = this.$Elm.getSize().x,\n                col_width = Column.getAttribute( 'width' );\n\n            if ( !this.count() ) {\n                col_width = max_width;\n            }\n\n            if ( !col_width ) {\n                col_width = 200;\n            }\n\n            Column.setAttribute( 'width', col_width );\n            Column.setParent( this );\n            Column.inject( this.$Elm );\n\n            if ( this.count() )\n            {\n                var Handler = new Element('div', {\n                    html    : '&nbps;',\n                    'class' : 'qui-column-handle smooth',\n                    styles  : {\n                        width       : 4,\n                        borderWidth : '0 1px'\n                    },\n                    events : {\n                        contextmenu : this.$onHandlerContextMenu\n                    }\n                });\n\n                Handler.inject( Column.getElm(), 'before' );\n\n                this.$bindResizeToColumn( Handler, Column );\n\n                // get prev column\n                var Sibling       = this.lastChild(),\n                    sibling_width = max_width - col_width - 6;\n\n                if ( max_width > Sibling.getAttribute( 'width' ) ) {\n                    sibling_width = Sibling.getAttribute( 'width' ) - col_width - 6;\n                }\n\n                Sibling.setAttribute( 'width', sibling_width );\n                Sibling.resize();\n            }\n\n            this.$columns.push( Column );\n\n            Column.resize();\n\n            return this;\n        },\n\n        /**\n         * Add a panel to the workspace\n         *\n         * First it looks fot the first tasks panel, if no task panel exist,\n         * it looks for an panel with the name content-panel, if that not exist\n         * then it took the panel to a column\n         *\n         * @param {qui/controls/dekstop/Panel} Panel\n         */\n        appendPanel : function(Panel)\n        {\n            if ( QUI.Controls.getByType( 'qui/controls/desktop/Tasks' ).length )\n            {\n                QUI.Controls.getByType( 'qui/controls/desktop/Tasks' )[ 0 ].appendChild(\n                    Panel\n                );\n\n                return;\n            }\n\n            if ( QUI.Controls.get( 'content-panel' ).length )\n            {\n                QUI.Controls.get( 'content-panel' )[ 0 ].appendChild(\n                    Panel\n                );\n\n                return;\n            }\n\n            if ( this.$columns[ 1 ] )\n            {\n                this.$columns[ 1 ].appendChild( Panel );\n                return;\n            }\n\n            if ( this.$columns[ 0 ] )\n            {\n                this.$columns[ 0 ].appendChild( Panel );\n                return;\n            }\n\n            QUI.MH.addError( 'Could not append the panel to the Workspace' );\n        },\n\n        /**\n         * Return the last column\n         *\n         * @return {qui/controls/desktop.Column|false}\n         */\n        lastChild : function()\n        {\n            return this.$columns[ this.count()-1 ] || false;\n        },\n\n        /**\n         * Return the first column\n         *\n         * @return {qui/controls/desktop/Column|false}\n         */\n        firstChild : function()\n        {\n            return this.$columns[ 0 ] || false;\n        },\n\n        /**\n         * Return the number of columns in the workspace\n         *\n         * @return {Integer}\n         */\n        count : function()\n        {\n            return this.$columns.length;\n        },\n\n        /**\n         * Add a available panel\n         *\n         * @param {Object} params - parameter {\n         *     require : '',\n         *     text    : '',\n         *     icon    : ''\n         * }\n         *\n         * @return {this}\n         */\n        addAvailablePanel : function(params)\n        {\n            if ( typeof params.require === 'undefined' ) {\n                return this;\n            }\n\n            if ( typeof params.text === 'undefined' ) {\n                return this;\n            }\n\n            if ( typeof params.icon === 'undefined' ) {\n                return this;\n            }\n\n\n            if ( typeof this.$available_panels[ params.require ] !== 'undefined' ) {\n                return this;\n            }\n\n            this.$available_panels[ params.require ] = params;\n\n            return this;\n        },\n\n        /**\n         * Return all available Panels for that Workbench\n         *\n         * @return {Array}\n         */\n        getAvailablePanel : function()\n        {\n            var panels = [],\n                list   = this.$available_panels;\n\n            for ( var i in list ) {\n                panels.push( list[ i ] );\n            }\n\n            return panels;\n        },\n\n        /**\n         * load the default workspace\n         */\n        defaultSpace : function()\n        {\n            var content_width = this.$Parent.getSize().x,\n                control_width = content_width / 3;\n\n            if ( control_width > 300 ) {\n                control_width = 300;\n            }\n\n            /**\n             * left column\n             */\n            new QUIColumn({\n                name        : 'control-colum',\n                placement   : 'left',\n                width       : control_width,\n                resizeLimit : [100, 300],\n                closable    : true,\n                events      :\n                {\n                    onCreate : function(Column)\n                    {\n                        require([\n                            'controls/projects/Panel',\n                            'controls/desktop/panels/Bookmarks'\n                        ],\n\n                        function(QUI_ProjectsPanel, QUI_Bookmark)\n                        {\n                            Column.appendChild(\n                                new QUI_ProjectsPanel()\n                            );\n\n                            // favourite start\n                            var Bookmars = new QUI_Bookmark({\n                                title  : 'Lesezeichen',\n                                header : true,\n                                height : 300\n                            });\n\n                            Column.appendChild( Bookmars );\n\n\n                            Bookmars.appendChild(\n                                new QUI.controls.contextmenu.Item({\n                                    text     : 'Zu den Benutzern',\n                                    icon     : URL_BIN_DIR +'16x16/user.png',\n                                    bookmark : 'QUI.Bookmarks.openUsers'\n                                })\n                            ).appendChild(\n                                new QUI.controls.contextmenu.Item({\n                                    text     : 'Zu den Gruppen',\n                                    icon     : URL_BIN_DIR +'16x16/groups.png',\n                                    bookmark : 'QUI.Bookmarks.openGroups'\n                                })\n                            ).appendChild(\n                                new QUI.controls.contextmenu.Item({\n                                    text     : 'Zum Mülleimer',\n                                    icon     : URL_BIN_DIR +'16x16/trashcan_empty.png',\n                                    bookmark : 'QUI.Bookmarks.openTrash'\n                                })\n                            );\n\n                        });\n                    }\n                }\n            }).inject( this.$Elm );\n\n            /**\n             * middle column\n             */\n            var ContentColumn = new QUIColumn({\n                name        : 'content-colum',\n                width       : content_width - control_width - 250,\n                resizeLimit : [200, content_width - 210],\n                placement   : 'main'\n            }).inject( this.$Elm );\n\n            require(['controls/desktop/Tasks'], function(Taskpanel)\n            {\n                ContentColumn.appendChild(\n                    new Taskpanel({\n                        name : 'content-panel'\n                    })\n                );\n\n                // create the desktop\n                require(['controls/desktop/panels/Desktop'], function(QUI_Desktop)\n                {\n                    var panels = QUI.Controls.get( 'content-panel' );\n\n                    if ( !panels.length ) {\n                        return;\n                    }\n\n                    panels[ 0 ].appendChild(\n                        new QUI_Desktop({\n                            closeable : false\n                        })\n                    );\n\n                    panels[ 0 ].firstChild().click();\n                });\n\n            }.bind( ContentColumn ));\n\n            /**\n             * Right column\n             */\n            var RightColumn = new QUIColumn({\n                name        : 'right-colum',\n                placement   : 'right',\n                width       : 250,\n                resizeLimit : [200, content_width],\n                closable    : true\n            }).inject( this.$Elm );\n\n            RightColumn.appendChild(\n                new QUI.controls.desktop.Panel({\n                    name   : 'error-console',\n                    title  : 'Meldungen',\n                    header : true,\n                    height : 300,\n                    events :\n                    {\n                        onCreate : function(Panel)\n                        {\n                            Panel.getBody().addClass('box-sizing');\n                            Panel.getBody().setStyles({\n                                padding : 0,\n                                width   : '100%'\n                            });\n                        }\n                    }\n                })\n            );\n\n            RightColumn.appendChild(\n                new QUI.controls.desktop.Panel({\n                    name   : 'help',\n                    title  : 'Hilfe'\n                })\n            );\n        },\n\n        /**\n         * Add the vertical resizing events to the column\n         *\n         * @param {DOMNode} Handler\n         * @param {qui/controls/desktop.Column} Column\n         */\n        $bindResizeToColumn : function(Handler, Column)\n        {\n            // dbl click\n            Handler.addEvent('dblclick', function() {\n                Column.toggle();\n            });\n\n            // Drag & Drop event\n            var min = Column.getAttribute( 'resizeLimit' )[ 0 ],\n                max = Column.getAttribute( 'resizeLimit' )[ 1 ];\n\n            if ( !min ) {\n                min = 50;\n            }\n\n            if ( !max ) {\n                max = this.getElm().getSize().x - 50;\n            }\n\n            var handlepos = Handler.getPosition().y;\n\n            new QUIDragDrop(Handler, {\n                limit  : {\n                    x: [ min, max ],\n                    y: [ handlepos, handlepos ]\n                },\n                events :\n                {\n                    onStart : function(DragDrop, Dragable)\n                    {\n                        var pos   = Handler.getPosition(),\n                            limit = DragDrop.getAttribute( 'limit' );\n\n                        limit.y = [ pos.y, pos.y ];\n\n                        DragDrop.setAttribute( 'limit', limit );\n\n                        Dragable.setStyles({\n                            width   : 5,\n                            padding : 0,\n                            top     : pos.y,\n                            left    : pos.x\n                        });\n                    },\n\n                    onStop : function(DragDrop, Dragable)\n                    {\n                        if ( Column.isOpen() === false ) {\n                            Column.open();\n                        }\n\n                        var change, next_width, this_width;\n\n                        var pos  = Dragable.getPosition(),\n                            hpos = Handler.getPosition(),\n                            Prev = Column.getPrevious(),\n                            Next = Column.getNext();\n\n\n                        change = pos.x - hpos.x - Handler.getSize().x;\n\n                        if ( !Next && !Prev ) {\n                            return;\n                        }\n\n                        var Sibling   = Next,\n                            placement = 'left';\n\n                        if ( Prev )\n                        {\n                            Sibling   = Prev;\n                            placement = 'right';\n                        }\n\n                        this_width = Column.getAttribute( 'width' );\n                        next_width = Sibling.getAttribute( 'width' );\n\n                        if ( placement == 'left' )\n                        {\n                            Column.setAttribute( 'width', this_width + change );\n                            Sibling.setAttribute( 'width', next_width - change );\n\n                        } else if ( placement == 'right' )\n                        {\n                            Column.setAttribute( 'width', this_width - change );\n                            Sibling.setAttribute( 'width', next_width + change );\n                        }\n\n                        Sibling.resize();\n                        Column.resize();\n                    }\n                }\n            });\n        },\n\n        /**\n         * Resize handler context menu\n         *\n         * @param {DOMEvent} event\n         */\n        $onHandlerContextMenu : function(event)\n        {\n            var self = this;\n\n            event.stop();\n\n            require([\n                'qui/controls/contextmenu/Menu',\n                'qui/controls/contextmenu/Item'\n            ], function(Contextmenu, ContextmenuItem)\n            {\n\n                var Menu = new Contextmenu({\n                    events :\n                    {\n                        onBlur : function(Menu) {\n                            Menu.destroy();\n                        }\n                    }\n                });\n\n                var Target = event.target,\n                    Left   = Target.getPrevious( '.qui-column' ),\n                    Next   = Target.getNext( '.qui-column' ),\n\n                    LeftColumn  = QUI.Controls.getById( Left.get('data-quiid') ),\n                    RightColumn = QUI.Controls.getById( Next.get('data-quiid') );\n\n\n                Menu.hide();\n                Menu.appendChild(\n                    new ContextmenuItem({\n                        icon    : 'icon-arrow-left',\n                        text    : 'Bearbeitungspalte links löschen.',\n                        Column  : LeftColumn,\n                        Handler : Target,\n                        events  :\n                        {\n                            onMouseDown : self.$onHandlerContextMenuClick,\n                            onActive    : self.$onHandlerContextMenuHighlight,\n                            onNormal    : self.$onHandlerContextMenuNormalize\n                        }\n                    })\n                );\n\n                Menu.appendChild(\n                    new ContextmenuItem({\n                        icon   : 'icon-arrow-right',\n                        text   : 'Bearbeitungspalte rechts löschen.',\n                        target : event.target,\n                        Column : RightColumn,\n                        events :\n                        {\n                            onMouseDown : self.$onHandlerContextMenuClick,\n                            onActive    : self.$onHandlerContextMenuHighlight,\n                            onNormal    : self.$onHandlerContextMenuNormalize\n                        }\n                    })\n                );\n\n                Menu.inject( document.body );\n\n                Menu.setPosition(\n                    event.page.x,\n                    event.page.y\n                ).show().focus();\n            });\n\n        },\n\n        /**\n         * event : mouseclick on a contextmenu item on the handler slider\n         *\n         * @param {QUI.controls.contextmenu.Item} Item\n         */\n        $onHandlerContextMenuClick : function(Item)\n        {\n            Item.getAttribute( 'Column' ).destroy();\n            Item.getAttribute( 'Handler' ).destroy();\n        },\n\n        /**\n         * event : mouseenter on a contextmenu item on the handler slider\n         *\n         * @param {QUI.controls.contextmenu.Item} Item\n         */\n        $onHandlerContextMenuHighlight : function(Item)\n        {\n            Item.getAttribute( 'Column' ).highlight();\n        },\n\n        /**\n         * event : mouseleave on a contextmenu item on the handler slider\n         *\n         * @param {QUI.controls.contextmenu.Item} Item\n         */\n        $onHandlerContextMenuNormalize : function(Item)\n        {\n            Item.getAttribute( 'Column' ).normalize();\n        }\n    });\n});\n\n"]}