{"version":3,"file":"Elements.js","sources":["Elements.js"],"names":[],"mappings":"AAQA,OAAA,sBAQA,aAAA,SAAA,GAEA,YAEA,IAAA,GAAA,EAAA,uBAEA,OACA,GAAA,KAAA,GACA,EAAA,MAAA,GACA,EAAA,SAAA,OAAA,aAAA,SAAA,gBAAA,eACA,EAAA,QAAA,OAAA,YAAA,SAAA,gBAAA,cAUA,kBAAA,SAAA,GAEA,YAEA,IAAA,GAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,YAEA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAEA,EAAA,EAAA,GAAA,SAAA,UAEA,QAAA,GAIA,EAAA,IACA,EAAA,EAIA,OAAA,IASA,cAAA,SAAA,GAEA,YAEA,OAAA,OAAA,UAAA,QAAA,KACA,EAAA,YAAA,SACA,IASA,kBAAA,SAAA,GAEA,YAEA,IAAA,UAAA,EAAA,SACA,MAAA,KAGA,IAAA,kBAAA,GACA,MAAA,GAAA,cAGA,IAAA,SAAA,UACA,CAEA,EAAA,OAEA,IAAA,GAAA,SAAA,UAAA,cACA,EAAA,EAAA,KAAA,MAIA,OAFA,GAAA,UAAA,aAAA,EAAA,MAAA,QAEA,EAAA,KAAA,OAAA,EAGA,MAAA,OASA,kBAAA,SAAA,EAAA,GAEA,YAEA,IAAA,UAAA,EAAA,UAAA,aAAA,EAAA,SACA,MAAA,KAGA,IAAA,EAAA,gBACA,CACA,GAAA,GAAA,EAAA,iBAIA,OAFA,GAAA,KAAA,YAAA,OACA,GAAA,SAIA,MAAA,GAAA,gBAEA,EAAA,YACA,GAAA,kBAAA,EAAA,EAAA,EAAA,QAIA,GAAA","sourcesContent":["\n/**\n * Helper for DOMNode Elements\n *\n * @module qui/utils/Elements\n * @author www.pcsg.de (Henning Leutz)\n */\n\ndefine('qui/utils/Elements', {\n\n    /**\n     * checks if the element is in the viewport\n     *\n     * @method qui/utils/Elements#isInViewport\n     * @param {HTMLElement} el\n     */\n    isInViewport : function(el)\n    {\n        \"use strict\";\n\n        var rect = el.getBoundingClientRect();\n\n        return (\n            rect.top >= 0 &&\n            rect.left >= 0 &&\n            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n            rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    },\n\n    /**\n     * Return the z-index of an Element\n     *\n     * @method qui/utils/Elements#getComputedZIndex\n     * @return {Number}\n     */\n    getComputedZIndex : function(Elm)\n    {\n        \"use strict\";\n\n        var i, z, len, max = 0;\n        var parents = Elm.getParents();\n\n        for ( i = 0, len = parents.length; i < len; i++)\n        {\n            z = parents[ i ].getStyle( 'zIndex' );\n\n            if ( z == 'auto' ) {\n                continue;\n            }\n\n            if ( z > max ) {\n                 max = z;\n            }\n        }\n\n        return max;\n    },\n\n    /**\n     * Return the index of the child from its parent\n     *\n     * @param {HTMLElement} Elm\n     * @return {Number}\n     */\n    getChildIndex : function(Elm)\n    {\n        \"use strict\";\n\n        return Array.prototype.indexOf.call(\n            Elm.getParent().children,\n            Elm\n        );\n    },\n\n    /**\n     * Return the cursor position of an input field\n     *\n     * @return {null|Number}\n     */\n    getCursorPosition : function(Input)\n    {\n        \"use strict\";\n\n        if ( Input.nodeName !== 'INPUT' ) {\n            return null;\n        }\n\n        if ( 'selectionStart' in Input ) {\n            return Input.selectionStart;\n        }\n\n        if ( document.selection )\n        {\n            // IE\n            Input.focus();\n\n            var range    = document.selection.createRange();\n            var rangeLen = range.text.length;\n\n            range.moveStart( 'character', -Input.value.length );\n\n            return range.text.length - rangeLen;\n        }\n\n        return null;\n    },\n\n    /**\n     * Set the cursor to the position\n     *\n     * @param {HTMLElement} Input - Input | Textarea Element\n     * @param {Number} pos - Position of the cursor\n     */\n    setCursorPosition : function(Input, pos)\n    {\n        \"use strict\";\n\n        if ( Input.nodeName !== 'INPUT' && Input.nodeName !== 'TEXTAREA' ) {\n            return null;\n        }\n\n        if ( Input.createTextRange )\n        {\n            var range = Input.createTextRange();\n\n            range.move( 'character', pos );\n            range.select();\n            return;\n        }\n\n        if ( Input.selectionStart )\n        {\n            Input.focus();\n            Input.setSelectionRange( pos+1, pos+1 );\n            return;\n        }\n\n        Input.focus();\n    }\n});\n\n"]}