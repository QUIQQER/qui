{"version":3,"file":"Polyfill.js","sources":["Polyfill.js"],"names":[],"mappings":"AASA,OAAA,kCAAA,WAEA,YAEA,IAAA,mBAAA,QAAA,cACA,mBAAA,QAAA,eADA,CAMA,GAAA,GAAA,SAAA,GAEA,QAAA,GAAA,EAAA,EAAA,GAEA,GAAA,GAAA,CAEA,IAEA,EAAA,GAAA,MACA,EAAA,QAAA,EAAA,UAAA,GAAA,EAAA,GAAA,GAAA,KACA,EAAA,aAAA,EAAA,eAGA,EAAA,GAGA,SAAA,OAAA,EAAA,IAAA,EAAA,EAAA,WAGA,QAAA,GAAA,GAEA,GAAA,GAAA,EAEA,EAAA,EAAA,IACA,EAAA,SAAA,OAAA,MAAA,IAEA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,CAGA,IAFA,EAAA,EAAA,GAEA,KAAA,EAAA,OAAA,IACA,EAAA,EAAA,UAAA,EAAA,EAAA,OAGA,IAAA,IAAA,EAAA,QAAA,GACA,MAAA,GAAA,UAAA,EAAA,OAAA,EAAA,QAIA,MAAA,MAGA,QAAA,GAAA,GAEA,EAAA,KAAA,UAAA,GAEA,WAAA,EAEA,OAAA,KAAA,EAGA,EAAA,eAAA,EAAA,KAIA,QAAA,KAEA,WAAA,EACA,OAAA,KAAA,GAGA,EAAA,eAAA,GAAA,KAIA,QAAA,KACA,GAAA,GAAA,WAAA,EAAA,OAAA,KAAA,EAAA,eACA,OAAA,GAAA,KAAA,MAAA,MAIA,GAAA,GAAA,GAEA,QACA,OAAA,EAEA,MAAA,WAEA,KACA,KAAA,OAAA,EACA,KAGA,QAAA,SAAA,GACA,MAAA,UAAA,EAAA,GAAA,KAAA,EAAA,IAGA,IAAA,SAAA,GAGA,GAAA,GAAA,CACA,KAAA,GAAA,KAAA,GACA,CACA,GAAA,GAAA,EAAA,MAAA,EACA,KAGA,MAAA,OAGA,WAAA,SAAA,SAEA,GAAA,GACA,KAAA,SACA,EAAA,IAGA,QAAA,SAAA,EAAA,GAEA,EAAA,GAAA,EAAA,GACA,KAAA,SACA,EAAA,KAaA,OARA,mBAAA,QAAA,eACA,OAAA,aAAA,GAAA,GAAA,UAGA,mBAAA,QAAA,iBACA,OAAA,eAAA,GAAA,GAAA,YAGA","sourcesContent":["\n/**\n * Polifill for the localStorage and sessionStorage\n * Based on Remy Sharp's  Storage polyfill - thanks\n *\n * @module qui/classes/storage/Polyfill\n * @author www.pcsg.de (Henning Leutz)\n */\n\ndefine('qui/classes/storage/Polyfill',[],function()\n{\n    \"use strict\";\n\n    if ( typeof window.localStorage !== 'undefined' &&\n         typeof window.sessionStorage !== 'undefined')\n    {\n        return;\n    }\n\n    var Storage = function (type)\n    {\n        function createCookie(name, value, days)\n        {\n            var date, expires;\n\n            if ( days )\n            {\n                date = new Date();\n                date.setTime(date.getTime()+(days*24*60*60*1000));\n                expires = \"; expires=\"+date.toGMTString();\n            } else\n            {\n                expires = \"\";\n            }\n\n            document.cookie = name+\"=\"+value+expires+\"; path=/\";\n        }\n\n        function readCookie(name)\n        {\n            var i, c,\n\n                nameEQ = name + \"=\",\n                ca     = document.cookie.split(';');\n\n            for ( i = 0; i < ca.length; i++ )\n            {\n                c = ca[i];\n\n                while ( c.charAt(0) == ' ' ) {\n                    c = c.substring( 1, c.length );\n                }\n\n                if ( c.indexOf(nameEQ) === 0 ) {\n                    return c.substring( nameEQ.length, c.length );\n                }\n            }\n\n            return null;\n        }\n\n        function setData(data)\n        {\n            data = JSON.stringify(data);\n\n            if (type == 'session')\n            {\n                window.name = data;\n            } else\n            {\n                createCookie('localStorage', data, 365);\n            }\n        }\n\n        function clearData()\n        {\n            if (type == 'session') {\n                window.name = '';\n            } else\n            {\n                createCookie('localStorage', '', 365);\n            }\n        }\n\n        function getData() {\n            var data = type == 'session' ? window.name : readCookie('localStorage');\n            return data ? JSON.parse(data) : {};\n        }\n\n        // initialise if there's already data\n        var data = getData();\n\n        return {\n            length: 0,\n\n            clear: function ()\n            {\n                data = {};\n                this.length = 0;\n                clearData();\n            },\n\n            getItem: function (key) {\n                return data[key] === undefined ? null : data[key];\n            },\n\n            key: function (i)\n            {\n                // not perfect, but works\n                var ctr = 0;\n                for (var k in data)\n                {\n                    if (ctr == i) return k;\n                    else ctr++;\n                }\n\n                return null;\n            },\n\n            removeItem: function (key)\n            {\n                delete data[key];\n                this.length--;\n                setData(data);\n            },\n\n            setItem: function (key, value)\n            {\n                data[key] = value+''; // forces the value to a string\n                this.length++;\n                setData(data);\n            }\n        };\n    };\n\n    if ( typeof window.localStorage === 'undefined' ) {\n        window.localStorage = new Storage('local');\n    }\n\n    if ( typeof window.sessionStorage === 'undefined' ) {\n        window.sessionStorage = new Storage('session');\n    }\n\n    return Storage;\n});\n\n"]}