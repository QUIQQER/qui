{"version":3,"file":"Storage.js","sources":["Storage.js"],"names":[],"mappings":"AAUA,GAAA,SAAA,oBAEA,mBAAA,QAAA,cACA,mBAAA,QAAA,iBAEA,OAAA,KAAA,wBAGA,OAAA,8BAAA,OAAA,SAAA,GAEA,YASA,OAAA,IAAA,QAEA,QAAA,EACA,KAAA,8BASA,IAAA,SAAA,EAAA,GAEA,OAAA,aAAA,QAAA,EAAA,IAUA,IAAA,SAAA,GAEA,MAAA,QAAA,aAAA,QAAA","sourcesContent":["/**\n * Use Local storage,\n * if local storage not exist, it loads the polyfill\n *\n * @author www.namerobot.com (Henning Leutz)\n *\n * @module qui/classes/storage/Storage\n * @package com.pcsg.qui.js.classes.users.storage\n */\n\nvar needle = ['qui/classes/DOM'];\n\nif ( typeof window.localStorage === 'undefined' ||\n     typeof window.sessionStorage === 'undefined')\n{\n    needle.push( 'qui/classes/storage/' );\n}\n\ndefine('qui/classes/storage/Storage', needle, function(QDOM, Polyfill)\n{\n    \"use strict\";\n\n    /**\n     * Local storage\n     *\n     * @class qui/classes/storage/Storage\n     *\n     * @memberof! <global>\n     */\n    return new Class({\n\n        Extends : QDOM,\n        Type    : 'qui/classes/storage/Storage',\n\n        /**\n         * Set the value of a key\n         *\n         * @method qui/classes/storage/Storage#set\n         * @param {String} key\n         * @param {String|Integer} value\n         */\n        set : function(key, value)\n        {\n            window.localStorage.setItem( key, value );\n        },\n\n        /**\n         * Return the value of stored the key\n         *\n         * @method qui/classes/storage/Storage#get\n         * @param {String} key\n         * @return {unknown_type} the wanted storage\n         */\n        get : function(key)\n        {\n            return window.localStorage.getItem( key );\n        }\n    });\n});\n\n"]}